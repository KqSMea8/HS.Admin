<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lucene.Net.Fakes</name>
    </assembly>
    <members>
        <member name="T:Global.Fakes.StubIThreadRunnable">
            <summary>IThreadRunnable 的存根类型</summary>
        </member>
        <member name="M:Global.Fakes.StubIThreadRunnable.#ctor">
            <summary>初始化 type StubIThreadRunnable 的新实例</summary>
        </member>
        <member name="M:Global.Fakes.StubIThreadRunnable.ln::IThreadRunnable#Run">
            <summary>设置 IThreadRunnable.Run() 的 存根</summary>
        </member>
        <member name="F:Global.Fakes.StubIThreadRunnable.Run">
            <summary>设置 IThreadRunnable.Run() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter">
            <summary>Lucene.Net.Analysis.ASCIIFoldingFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.#ctor(Lucene.Net.Analysis.ASCIIFoldingFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.ConstructorTokenStream">
            <summary>设置 ASCIIFoldingFilter.ASCIIFoldingFilter(TokenStream input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.FoldToASCIICharArrayInt32">
            <summary>设置 ASCIIFoldingFilter.FoldToASCII(Char[] input, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.IncrementToken">
            <summary>设置 ASCIIFoldingFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.AllInstances.FoldToASCIICharArrayInt32">
            <summary>设置 ASCIIFoldingFilter.FoldToASCII(Char[] input, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimASCIIFoldingFilter.AllInstances.IncrementToken">
            <summary>设置 ASCIIFoldingFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimAnalyzer">
            <summary>Lucene.Net.Analysis.Analyzer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimAnalyzer.#ctor(Lucene.Net.Analysis.Analyzer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimAnalyzer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimAnalyzer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimAnalyzer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.Close">
            <summary>设置 Analyzer.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.Constructor">
            <summary>设置 Analyzer.Analyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.Dispose">
            <summary>设置 Analyzer.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.GetOffsetGapFieldable">
            <summary>设置 Analyzer.GetOffsetGap(Fieldable field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.GetPositionIncrementGapString">
            <summary>设置 Analyzer.GetPositionIncrementGap(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.GetPreviousTokenStream">
            <summary>设置 Analyzer.GetPreviousTokenStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.ReusableTokenStreamStringTextReader">
            <summary>设置 Analyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.SetOverridesTokenStreamMethodType">
            <summary>设置 Analyzer.SetOverridesTokenStreamMethod(Type baseClass) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.SetPreviousTokenStreamObject">
            <summary>设置 Analyzer.SetPreviousTokenStream(Object obj) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances.Close">
            <summary>设置 Analyzer.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances.Dispose">
            <summary>设置 Analyzer.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances.GetOffsetGapFieldable">
            <summary>设置 Analyzer.GetOffsetGap(Fieldable field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances.GetPositionIncrementGapString">
            <summary>设置 Analyzer.GetPositionIncrementGap(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances.GetPreviousTokenStream">
            <summary>设置 Analyzer.GetPreviousTokenStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances.ReusableTokenStreamStringTextReader">
            <summary>设置 Analyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances.SetOverridesTokenStreamMethodType">
            <summary>设置 Analyzer.SetOverridesTokenStreamMethod(Type baseClass) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimAnalyzer.AllInstances.SetPreviousTokenStreamObject">
            <summary>设置 Analyzer.SetPreviousTokenStream(Object obj) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter">
            <summary>Lucene.Net.Analysis.BaseCharFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.#ctor(Lucene.Net.Analysis.BaseCharFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.AddOffCorrectMapInt32Int32">
            <summary>设置 BaseCharFilter.AddOffCorrectMap(Int32 off, Int32 cumulativeDiff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.ConstructorCharStream">
            <summary>设置 BaseCharFilter.BaseCharFilter(CharStream in) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.CorrectInt32">
            <summary>设置 BaseCharFilter.Correct(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.GetLastCumulativeDiff">
            <summary>设置 BaseCharFilter.GetLastCumulativeDiff() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.AllInstances.AddOffCorrectMapInt32Int32">
            <summary>设置 BaseCharFilter.AddOffCorrectMap(Int32 off, Int32 cumulativeDiff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.AllInstances.CorrectInt32">
            <summary>设置 BaseCharFilter.Correct(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimBaseCharFilter.AllInstances.GetLastCumulativeDiff">
            <summary>设置 BaseCharFilter.GetLastCumulativeDiff() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter">
            <summary>Lucene.Net.Analysis.CachingTokenFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.#ctor(Lucene.Net.Analysis.CachingTokenFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.ConstructorTokenStream">
            <summary>设置 CachingTokenFilter.CachingTokenFilter(TokenStream input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.End">
            <summary>设置 CachingTokenFilter.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.FillCache">
            <summary>设置 CachingTokenFilter.FillCache() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.IncrementToken">
            <summary>设置 CachingTokenFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.Next">
            <summary>设置 CachingTokenFilter.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.NextToken">
            <summary>设置 CachingTokenFilter.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.Reset">
            <summary>设置 CachingTokenFilter.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.AllInstances.End">
            <summary>设置 CachingTokenFilter.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.AllInstances.FillCache">
            <summary>设置 CachingTokenFilter.FillCache() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.AllInstances.IncrementToken">
            <summary>设置 CachingTokenFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.AllInstances.Next">
            <summary>设置 CachingTokenFilter.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.AllInstances.NextToken">
            <summary>设置 CachingTokenFilter.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCachingTokenFilter.AllInstances.Reset">
            <summary>设置 CachingTokenFilter.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharArraySet">
            <summary>Lucene.Net.Analysis.CharArraySet 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharArraySet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharArraySet.#ctor(Lucene.Net.Analysis.CharArraySet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharArraySet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharArraySet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharArraySet.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharArraySet.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharArraySet.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AddCharArray">
            <summary>设置 CharArraySet.Add(Char[] text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AddIEnumerableOfString">
            <summary>设置 CharArraySet.Add(IEnumerable`1&lt;String&gt; coll) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AddString">
            <summary>设置 CharArraySet.Add(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.Clear">
            <summary>设置 CharArraySet.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.ConstructorCharArrayArrayBooleanInt32">
            <summary>设置 CharArraySet.CharArraySet(Char[][] entries, Boolean ignoreCase, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.ConstructorIEnumerableOfStringBoolean">
            <summary>设置 CharArraySet.CharArraySet(IEnumerable`1&lt;String&gt; c, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.ConstructorInt32Boolean">
            <summary>设置 CharArraySet.CharArraySet(Int32 startSize, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.ContainsCharArray">
            <summary>设置 CharArraySet.Contains(Char[] text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.ContainsCharArrayInt32Int32">
            <summary>设置 CharArraySet.Contains(Char[] text, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.ContainsString">
            <summary>设置 CharArraySet.Contains(String item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.CopyToStringArrayInt32">
            <summary>设置 CharArraySet.CopyTo(String[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.CountGet">
            <summary>设置 CharArraySet.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.EqualsCharArrayInt32Int32CharArray">
            <summary>设置 CharArraySet.Equals(Char[] text1, Int32 off, Int32 len, Char[] text2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.EqualsStringCharArray">
            <summary>设置 CharArraySet.Equals(String text1, Char[] text2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.GetEnumerator">
            <summary>设置 CharArraySet.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.GetHashCodeCharArrayInt32Int32">
            <summary>设置 CharArraySet.GetHashCode(Char[] text, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.GetHashCodeString">
            <summary>设置 CharArraySet.GetHashCode(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.GetSlotCharArrayInt32Int32">
            <summary>设置 CharArraySet.GetSlot(Char[] text, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.GetSlotString">
            <summary>设置 CharArraySet.GetSlot(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.IsReadOnlyGet">
            <summary>设置 CharArraySet.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.IsReadOnlySetBoolean">
            <summary>设置 CharArraySet.set_IsReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.Rehash">
            <summary>设置 CharArraySet.Rehash() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.RemoveAllICollectionOfString">
            <summary>设置 CharArraySet.RemoveAll(ICollection`1&lt;String&gt; c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.RemoveString">
            <summary>设置 CharArraySet.Remove(String item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.RetainAllICollectionOfString">
            <summary>设置 CharArraySet.RetainAll(ICollection`1&lt;String&gt; c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 CharArraySet.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.UnmodifiableSetICollectionOfString">
            <summary>设置 CharArraySet.UnmodifiableSet(ICollection`1&lt;String&gt; items) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.AddCharArray">
            <summary>设置 CharArraySet.Add(Char[] text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.AddIEnumerableOfString">
            <summary>设置 CharArraySet.Add(IEnumerable`1&lt;String&gt; coll) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.AddString">
            <summary>设置 CharArraySet.Add(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.Clear">
            <summary>设置 CharArraySet.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.ContainsCharArray">
            <summary>设置 CharArraySet.Contains(Char[] text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.ContainsCharArrayInt32Int32">
            <summary>设置 CharArraySet.Contains(Char[] text, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.ContainsString">
            <summary>设置 CharArraySet.Contains(String item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.CopyToStringArrayInt32">
            <summary>设置 CharArraySet.CopyTo(String[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.CountGet">
            <summary>设置 CharArraySet.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.EqualsCharArrayInt32Int32CharArray">
            <summary>设置 CharArraySet.Equals(Char[] text1, Int32 off, Int32 len, Char[] text2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.EqualsStringCharArray">
            <summary>设置 CharArraySet.Equals(String text1, Char[] text2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.GetEnumerator">
            <summary>设置 CharArraySet.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.GetHashCodeCharArrayInt32Int32">
            <summary>设置 CharArraySet.GetHashCode(Char[] text, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.GetHashCodeString">
            <summary>设置 CharArraySet.GetHashCode(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.GetSlotCharArrayInt32Int32">
            <summary>设置 CharArraySet.GetSlot(Char[] text, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.GetSlotString">
            <summary>设置 CharArraySet.GetSlot(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.IsReadOnlyGet">
            <summary>设置 CharArraySet.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.IsReadOnlySetBoolean">
            <summary>设置 CharArraySet.set_IsReadOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.Rehash">
            <summary>设置 CharArraySet.Rehash() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.RemoveAllICollectionOfString">
            <summary>设置 CharArraySet.RemoveAll(ICollection`1&lt;String&gt; c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.RemoveString">
            <summary>设置 CharArraySet.Remove(String item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.RetainAllICollectionOfString">
            <summary>设置 CharArraySet.RetainAll(ICollection`1&lt;String&gt; c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharArraySet.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 CharArraySet.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharFilter">
            <summary>Lucene.Net.Analysis.CharFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharFilter.#ctor(Lucene.Net.Analysis.CharFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharFilter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.Close">
            <summary>设置 CharFilter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.ConstructorCharStream">
            <summary>设置 CharFilter.CharFilter(CharStream in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.CorrectInt32">
            <summary>设置 CharFilter.Correct(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.CorrectOffsetInt32">
            <summary>设置 CharFilter.CorrectOffset(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.MarkInt32">
            <summary>设置 CharFilter.Mark(Int32 readAheadLimit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.MarkSupported">
            <summary>设置 CharFilter.MarkSupported() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.ReadCharArrayInt32Int32">
            <summary>设置 CharFilter.Read(Char[] cbuf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.Reset">
            <summary>设置 CharFilter.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.AllInstances.Close">
            <summary>设置 CharFilter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.AllInstances.CorrectInt32">
            <summary>设置 CharFilter.Correct(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.AllInstances.CorrectOffsetInt32">
            <summary>设置 CharFilter.CorrectOffset(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.AllInstances.MarkInt32">
            <summary>设置 CharFilter.Mark(Int32 readAheadLimit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.AllInstances.MarkSupported">
            <summary>设置 CharFilter.MarkSupported() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.AllInstances.ReadCharArrayInt32Int32">
            <summary>设置 CharFilter.Read(Char[] cbuf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharFilter.AllInstances.Reset">
            <summary>设置 CharFilter.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharReader">
            <summary>Lucene.Net.Analysis.CharReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharReader.#ctor(Lucene.Net.Analysis.CharReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.Close">
            <summary>设置 CharReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.ConstructorStreamReader">
            <summary>设置 CharReader.CharReader(StreamReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.CorrectOffsetInt32">
            <summary>设置 CharReader.CorrectOffset(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.GetTextReader">
            <summary>设置 CharReader.Get(TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.MarkInt32">
            <summary>设置 CharReader.Mark(Int32 readAheadLimit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.MarkSupported">
            <summary>设置 CharReader.MarkSupported() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.ReadCharArrayInt32Int32">
            <summary>设置 CharReader.Read(Char[] cbuf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.Reset">
            <summary>设置 CharReader.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.AllInstances.Close">
            <summary>设置 CharReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.AllInstances.CorrectOffsetInt32">
            <summary>设置 CharReader.CorrectOffset(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.AllInstances.MarkInt32">
            <summary>设置 CharReader.Mark(Int32 readAheadLimit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.AllInstances.MarkSupported">
            <summary>设置 CharReader.MarkSupported() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.AllInstances.ReadCharArrayInt32Int32">
            <summary>设置 CharReader.Read(Char[] cbuf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharReader.AllInstances.Reset">
            <summary>设置 CharReader.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharStream">
            <summary>Lucene.Net.Analysis.CharStream 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharStream.#ctor(Lucene.Net.Analysis.CharStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharStream.ConstructorStreamReader">
            <summary>设置 CharStream.CharStream(StreamReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharTokenizer">
            <summary>Lucene.Net.Analysis.CharTokenizer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.#ctor(Lucene.Net.Analysis.CharTokenizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.ConstructorAttributeSourceAttributeFactoryTextReader">
            <summary>设置 CharTokenizer.CharTokenizer(AttributeFactory factory, TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.ConstructorAttributeSourceTextReader">
            <summary>设置 CharTokenizer.CharTokenizer(AttributeSource source, TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.ConstructorTextReader">
            <summary>设置 CharTokenizer.CharTokenizer(TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.End">
            <summary>设置 CharTokenizer.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.IncrementToken">
            <summary>设置 CharTokenizer.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.Next">
            <summary>设置 CharTokenizer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.NextToken">
            <summary>设置 CharTokenizer.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.NormalizeChar">
            <summary>设置 CharTokenizer.Normalize(Char c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.ResetTextReader">
            <summary>设置 CharTokenizer.Reset(TextReader input) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.AllInstances.End">
            <summary>设置 CharTokenizer.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.AllInstances.IncrementToken">
            <summary>设置 CharTokenizer.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.AllInstances.Next">
            <summary>设置 CharTokenizer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.AllInstances.NextToken">
            <summary>设置 CharTokenizer.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.AllInstances.NormalizeChar">
            <summary>设置 CharTokenizer.Normalize(Char c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimCharTokenizer.AllInstances.ResetTextReader">
            <summary>设置 CharTokenizer.Reset(TextReader input) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer">
            <summary>Lucene.Net.Analysis.KeywordAnalyzer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.#ctor(Lucene.Net.Analysis.KeywordAnalyzer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.Constructor">
            <summary>设置 KeywordAnalyzer.KeywordAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.ReusableTokenStreamStringTextReader">
            <summary>设置 KeywordAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.TokenStreamStringTextReader">
            <summary>设置 KeywordAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.AllInstances.ReusableTokenStreamStringTextReader">
            <summary>设置 KeywordAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordAnalyzer.AllInstances.TokenStreamStringTextReader">
            <summary>设置 KeywordAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer">
            <summary>Lucene.Net.Analysis.KeywordTokenizer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.#ctor(Lucene.Net.Analysis.KeywordTokenizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.ConstructorAttributeSourceAttributeFactoryTextReaderInt32">
            <summary>设置 KeywordTokenizer.KeywordTokenizer(AttributeFactory factory, TextReader input, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.ConstructorAttributeSourceTextReaderInt32">
            <summary>设置 KeywordTokenizer.KeywordTokenizer(AttributeSource source, TextReader input, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.ConstructorTextReader">
            <summary>设置 KeywordTokenizer.KeywordTokenizer(TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.ConstructorTextReaderInt32">
            <summary>设置 KeywordTokenizer.KeywordTokenizer(TextReader input, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.End">
            <summary>设置 KeywordTokenizer.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.IncrementToken">
            <summary>设置 KeywordTokenizer.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.InitInt32">
            <summary>设置 KeywordTokenizer.Init(Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.Next">
            <summary>设置 KeywordTokenizer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.NextToken">
            <summary>设置 KeywordTokenizer.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.ResetTextReader">
            <summary>设置 KeywordTokenizer.Reset(TextReader input) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.AllInstances.End">
            <summary>设置 KeywordTokenizer.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.AllInstances.IncrementToken">
            <summary>设置 KeywordTokenizer.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.AllInstances.InitInt32">
            <summary>设置 KeywordTokenizer.Init(Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.AllInstances.Next">
            <summary>设置 KeywordTokenizer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.AllInstances.NextToken">
            <summary>设置 KeywordTokenizer.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimKeywordTokenizer.AllInstances.ResetTextReader">
            <summary>设置 KeywordTokenizer.Reset(TextReader input) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimLengthFilter">
            <summary>Lucene.Net.Analysis.LengthFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLengthFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLengthFilter.#ctor(Lucene.Net.Analysis.LengthFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLengthFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLengthFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLengthFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLengthFilter.ConstructorTokenStreamInt32Int32">
            <summary>设置 LengthFilter.LengthFilter(TokenStream in_Renamed, Int32 min, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLengthFilter.IncrementToken">
            <summary>设置 LengthFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimLengthFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLengthFilter.AllInstances.IncrementToken">
            <summary>设置 LengthFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer">
            <summary>Lucene.Net.Analysis.LetterTokenizer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.#ctor(Lucene.Net.Analysis.LetterTokenizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.ConstructorAttributeSourceAttributeFactoryTextReader">
            <summary>设置 LetterTokenizer.LetterTokenizer(AttributeFactory factory, TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.ConstructorAttributeSourceTextReader">
            <summary>设置 LetterTokenizer.LetterTokenizer(AttributeSource source, TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.ConstructorTextReader">
            <summary>设置 LetterTokenizer.LetterTokenizer(TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.IsTokenCharChar">
            <summary>设置 LetterTokenizer.IsTokenChar(Char c) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLetterTokenizer.AllInstances.IsTokenCharChar">
            <summary>设置 LetterTokenizer.IsTokenChar(Char c) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter">
            <summary>Lucene.Net.Analysis.LowerCaseFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.#ctor(Lucene.Net.Analysis.LowerCaseFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.ConstructorTokenStream">
            <summary>设置 LowerCaseFilter.LowerCaseFilter(TokenStream in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.IncrementToken">
            <summary>设置 LowerCaseFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseFilter.AllInstances.IncrementToken">
            <summary>设置 LowerCaseFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer">
            <summary>Lucene.Net.Analysis.LowerCaseTokenizer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.#ctor(Lucene.Net.Analysis.LowerCaseTokenizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.ConstructorAttributeSourceAttributeFactoryTextReader">
            <summary>设置 LowerCaseTokenizer.LowerCaseTokenizer(AttributeFactory factory, TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.ConstructorAttributeSourceTextReader">
            <summary>设置 LowerCaseTokenizer.LowerCaseTokenizer(AttributeSource source, TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.ConstructorTextReader">
            <summary>设置 LowerCaseTokenizer.LowerCaseTokenizer(TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.NormalizeChar">
            <summary>设置 LowerCaseTokenizer.Normalize(Char c) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimLowerCaseTokenizer.AllInstances.NormalizeChar">
            <summary>设置 LowerCaseTokenizer.Normalize(Char c) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter">
            <summary>Lucene.Net.Analysis.MappingCharFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.#ctor(Lucene.Net.Analysis.MappingCharFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.ConstructorNormalizeCharMapCharStream">
            <summary>设置 MappingCharFilter.MappingCharFilter(NormalizeCharMap normMap, CharStream in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.ConstructorNormalizeCharMapTextReader">
            <summary>设置 MappingCharFilter.MappingCharFilter(NormalizeCharMap normMap, TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.MatchNormalizeCharMap">
            <summary>设置 MappingCharFilter.Match(NormalizeCharMap map) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.NextChar">
            <summary>设置 MappingCharFilter.NextChar() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.PushCharInt32">
            <summary>设置 MappingCharFilter.PushChar(Int32 c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.PushLastCharInt32">
            <summary>设置 MappingCharFilter.PushLastChar(Int32 c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.Read">
            <summary>设置 MappingCharFilter.Read() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.ReadCharArrayInt32Int32">
            <summary>设置 MappingCharFilter.Read(Char[] cbuf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.AllInstances.MatchNormalizeCharMap">
            <summary>设置 MappingCharFilter.Match(NormalizeCharMap map) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.AllInstances.NextChar">
            <summary>设置 MappingCharFilter.NextChar() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.AllInstances.PushCharInt32">
            <summary>设置 MappingCharFilter.PushChar(Int32 c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.AllInstances.PushLastCharInt32">
            <summary>设置 MappingCharFilter.PushLastChar(Int32 c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.AllInstances.Read">
            <summary>设置 MappingCharFilter.Read() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimMappingCharFilter.AllInstances.ReadCharArrayInt32Int32">
            <summary>设置 MappingCharFilter.Read(Char[] cbuf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap">
            <summary>Lucene.Net.Analysis.NormalizeCharMap 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.#ctor(Lucene.Net.Analysis.NormalizeCharMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.AddStringString">
            <summary>设置 NormalizeCharMap.Add(String singleMatch, String replacement) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.Constructor">
            <summary>设置 NormalizeCharMap.NormalizeCharMap() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNormalizeCharMap.AllInstances.AddStringString">
            <summary>设置 NormalizeCharMap.Add(String singleMatch, String replacement) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream">
            <summary>Lucene.Net.Analysis.NumericTokenStream 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.#ctor(Lucene.Net.Analysis.NumericTokenStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.Constructor">
            <summary>设置 NumericTokenStream.NumericTokenStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.ConstructorAttributeSourceAttributeFactoryInt32">
            <summary>设置 NumericTokenStream.NumericTokenStream(AttributeFactory factory, Int32 precisionStep) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.ConstructorAttributeSourceInt32">
            <summary>设置 NumericTokenStream.NumericTokenStream(AttributeSource source, Int32 precisionStep) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.ConstructorInt32">
            <summary>设置 NumericTokenStream.NumericTokenStream(Int32 precisionStep) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.IncrementToken">
            <summary>设置 NumericTokenStream.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.InitBlock">
            <summary>设置 NumericTokenStream.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.Reset">
            <summary>设置 NumericTokenStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.SetDoubleValueDouble">
            <summary>设置 NumericTokenStream.SetDoubleValue(Double value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.SetFloatValueSingle">
            <summary>设置 NumericTokenStream.SetFloatValue(Single value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.SetIntValueInt32">
            <summary>设置 NumericTokenStream.SetIntValue(Int32 value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.SetLongValueInt64">
            <summary>设置 NumericTokenStream.SetLongValue(Int64 value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.ToString">
            <summary>设置 NumericTokenStream.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances.IncrementToken">
            <summary>设置 NumericTokenStream.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances.InitBlock">
            <summary>设置 NumericTokenStream.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances.Reset">
            <summary>设置 NumericTokenStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances.SetDoubleValueDouble">
            <summary>设置 NumericTokenStream.SetDoubleValue(Double value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances.SetFloatValueSingle">
            <summary>设置 NumericTokenStream.SetFloatValue(Single value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances.SetIntValueInt32">
            <summary>设置 NumericTokenStream.SetIntValue(Int32 value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances.SetLongValueInt64">
            <summary>设置 NumericTokenStream.SetLongValue(Int64 value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimNumericTokenStream.AllInstances.ToString01">
            <summary>设置 NumericTokenStream.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper">
            <summary>Lucene.Net.Analysis.PerFieldAnalyzerWrapper 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.#ctor(Lucene.Net.Analysis.PerFieldAnalyzerWrapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.AddAnalyzerStringAnalyzer">
            <summary>设置 PerFieldAnalyzerWrapper.AddAnalyzer(String fieldName, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.ConstructorAnalyzer">
            <summary>设置 PerFieldAnalyzerWrapper.PerFieldAnalyzerWrapper(Analyzer defaultAnalyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.ConstructorAnalyzerIDictionaryOfStringAnalyzer">
            <summary>设置 PerFieldAnalyzerWrapper.PerFieldAnalyzerWrapper(Analyzer defaultAnalyzer, IDictionary`2&lt;String,Analyzer&gt; fieldAnalyzers) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.GetOffsetGapFieldable">
            <summary>设置 PerFieldAnalyzerWrapper.GetOffsetGap(Fieldable field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.GetPositionIncrementGapString">
            <summary>设置 PerFieldAnalyzerWrapper.GetPositionIncrementGap(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.ReusableTokenStreamStringTextReader">
            <summary>设置 PerFieldAnalyzerWrapper.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.ToString">
            <summary>设置 PerFieldAnalyzerWrapper.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.TokenStreamStringTextReader">
            <summary>设置 PerFieldAnalyzerWrapper.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.AllInstances.AddAnalyzerStringAnalyzer">
            <summary>设置 PerFieldAnalyzerWrapper.AddAnalyzer(String fieldName, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.AllInstances.GetOffsetGapFieldable">
            <summary>设置 PerFieldAnalyzerWrapper.GetOffsetGap(Fieldable field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.AllInstances.GetPositionIncrementGapString">
            <summary>设置 PerFieldAnalyzerWrapper.GetPositionIncrementGap(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.AllInstances.ReusableTokenStreamStringTextReader">
            <summary>设置 PerFieldAnalyzerWrapper.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.AllInstances.ToString01">
            <summary>设置 PerFieldAnalyzerWrapper.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPerFieldAnalyzerWrapper.AllInstances.TokenStreamStringTextReader">
            <summary>设置 PerFieldAnalyzerWrapper.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter">
            <summary>Lucene.Net.Analysis.PorterStemFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.#ctor(Lucene.Net.Analysis.PorterStemFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.ConstructorTokenStream">
            <summary>设置 PorterStemFilter.PorterStemFilter(TokenStream in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.IncrementToken">
            <summary>设置 PorterStemFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimPorterStemFilter.AllInstances.IncrementToken">
            <summary>设置 PorterStemFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer">
            <summary>Lucene.Net.Analysis.SimpleAnalyzer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.#ctor(Lucene.Net.Analysis.SimpleAnalyzer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.Constructor">
            <summary>设置 SimpleAnalyzer.SimpleAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.ReusableTokenStreamStringTextReader">
            <summary>设置 SimpleAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.TokenStreamStringTextReader">
            <summary>设置 SimpleAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.AllInstances.ReusableTokenStreamStringTextReader">
            <summary>设置 SimpleAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimSimpleAnalyzer.AllInstances.TokenStreamStringTextReader">
            <summary>设置 SimpleAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer">
            <summary>Lucene.Net.Analysis.StopAnalyzer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.#ctor(Lucene.Net.Analysis.StopAnalyzer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.Constructor">
            <summary>设置 StopAnalyzer.StopAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorBoolean">
            <summary>设置 StopAnalyzer.StopAnalyzer(Boolean enablePositionIncrements) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorFileInfo">
            <summary>设置 StopAnalyzer.StopAnalyzer(FileInfo stopwordsFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorFileInfoBoolean">
            <summary>设置 StopAnalyzer.StopAnalyzer(FileInfo stopwordsFile, Boolean enablePositionIncrements) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorICollectionOfString">
            <summary>设置 StopAnalyzer.StopAnalyzer(ICollection`1&lt;String&gt; stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorICollectionOfStringBoolean">
            <summary>设置 StopAnalyzer.StopAnalyzer(ICollection`1&lt;String&gt; stopWords, Boolean enablePositionIncrements) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorStringArray">
            <summary>设置 StopAnalyzer.StopAnalyzer(String[] stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorStringArrayBoolean">
            <summary>设置 StopAnalyzer.StopAnalyzer(String[] stopWords, Boolean enablePositionIncrements) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorTextReader">
            <summary>设置 StopAnalyzer.StopAnalyzer(TextReader stopwords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorTextReaderBoolean">
            <summary>设置 StopAnalyzer.StopAnalyzer(TextReader stopwords, Boolean enablePositionIncrements) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorVersion">
            <summary>设置 StopAnalyzer.StopAnalyzer(Version matchVersion) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorVersionFileInfo">
            <summary>设置 StopAnalyzer.StopAnalyzer(Version matchVersion, FileInfo stopwordsFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorVersionICollectionOfString">
            <summary>设置 StopAnalyzer.StopAnalyzer(Version matchVersion, ICollection`1&lt;String&gt; stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ConstructorVersionTextReader">
            <summary>设置 StopAnalyzer.StopAnalyzer(Version matchVersion, TextReader stopwords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.ReusableTokenStreamStringTextReader">
            <summary>设置 StopAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.StaticConstructor">
            <summary>设置 StopAnalyzer.StopAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.TokenStreamStringTextReader">
            <summary>设置 StopAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.AllInstances.ReusableTokenStreamStringTextReader">
            <summary>设置 StopAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopAnalyzer.AllInstances.TokenStreamStringTextReader">
            <summary>设置 StopAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimStopFilter">
            <summary>Lucene.Net.Analysis.StopFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopFilter.#ctor(Lucene.Net.Analysis.StopFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimStopFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.ConstructorBooleanTokenStreamICollectionOfString">
            <summary>设置 StopFilter.StopFilter(Boolean enablePositionIncrements, TokenStream in_Renamed, ICollection`1&lt;String&gt; stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.ConstructorBooleanTokenStreamICollectionOfStringBoolean">
            <summary>设置 StopFilter.StopFilter(Boolean enablePositionIncrements, TokenStream input, ICollection`1&lt;String&gt; stopWords, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.ConstructorBooleanTokenStreamStringArray">
            <summary>设置 StopFilter.StopFilter(Boolean enablePositionIncrements, TokenStream input, String[] stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.ConstructorBooleanTokenStreamStringArrayBoolean">
            <summary>设置 StopFilter.StopFilter(Boolean enablePositionIncrements, TokenStream in_Renamed, String[] stopWords, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.ConstructorTokenStreamICollectionOfString">
            <summary>设置 StopFilter.StopFilter(TokenStream in_Renamed, ICollection`1&lt;String&gt; stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.ConstructorTokenStreamICollectionOfStringBoolean">
            <summary>设置 StopFilter.StopFilter(TokenStream input, ICollection`1&lt;String&gt; stopWords, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.ConstructorTokenStreamStringArray">
            <summary>设置 StopFilter.StopFilter(TokenStream input, String[] stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.ConstructorTokenStreamStringArrayBoolean">
            <summary>设置 StopFilter.StopFilter(TokenStream in_Renamed, String[] stopWords, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.GetEnablePositionIncrements">
            <summary>设置 StopFilter.GetEnablePositionIncrements() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.GetEnablePositionIncrementsDefault">
            <summary>设置 StopFilter.GetEnablePositionIncrementsDefault() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.GetEnablePositionIncrementsVersionDefaultVersion">
            <summary>设置 StopFilter.GetEnablePositionIncrementsVersionDefault(Version matchVersion) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.IncrementToken">
            <summary>设置 StopFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.Init">
            <summary>设置 StopFilter.Init() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.MakeStopSetICollectionOfString">
            <summary>设置 StopFilter.MakeStopSet(ICollection`1&lt;String&gt; stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.MakeStopSetICollectionOfStringBoolean">
            <summary>设置 StopFilter.MakeStopSet(ICollection`1&lt;String&gt; stopWords, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.MakeStopSetStringArrayBoolean">
            <summary>设置 StopFilter.MakeStopSet(String[] stopWords, Boolean ignoreCase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.SetEnablePositionIncrementsBoolean">
            <summary>设置 StopFilter.SetEnablePositionIncrements(Boolean enable) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.SetEnablePositionIncrementsDefaultBoolean">
            <summary>设置 StopFilter.SetEnablePositionIncrementsDefault(Boolean defaultValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.StaticConstructor">
            <summary>设置 StopFilter.StopFilter() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimStopFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.AllInstances.GetEnablePositionIncrements">
            <summary>设置 StopFilter.GetEnablePositionIncrements() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.AllInstances.IncrementToken">
            <summary>设置 StopFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.AllInstances.Init">
            <summary>设置 StopFilter.Init() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimStopFilter.AllInstances.SetEnablePositionIncrementsBoolean">
            <summary>设置 StopFilter.SetEnablePositionIncrements(Boolean enable) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter">
            <summary>Lucene.Net.Analysis.TeeSinkTokenFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.#ctor(Lucene.Net.Analysis.TeeSinkTokenFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.AddSinkTokenStreamTeeSinkTokenFilterSinkTokenStream">
            <summary>设置 TeeSinkTokenFilter.AddSinkTokenStream(SinkTokenStream sink) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ConstructorTokenStream">
            <summary>设置 TeeSinkTokenFilter.TeeSinkTokenFilter(TokenStream input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ConsumeAllTokens">
            <summary>设置 TeeSinkTokenFilter.ConsumeAllTokens() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.End">
            <summary>设置 TeeSinkTokenFilter.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.IncrementToken">
            <summary>设置 TeeSinkTokenFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.NewSinkTokenStream">
            <summary>设置 TeeSinkTokenFilter.NewSinkTokenStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.NewSinkTokenStreamTeeSinkTokenFilterSinkFilter">
            <summary>设置 TeeSinkTokenFilter.NewSinkTokenStream(SinkFilter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.StaticConstructor">
            <summary>设置 TeeSinkTokenFilter.TeeSinkTokenFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter._cctorb__1AttributeSource">
            <summary>设置 TeeSinkTokenFilter.&lt;.cctor&gt;b__1(AttributeSource a) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.AllInstances.AddSinkTokenStreamTeeSinkTokenFilterSinkTokenStream">
            <summary>设置 TeeSinkTokenFilter.AddSinkTokenStream(SinkTokenStream sink) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.AllInstances.ConsumeAllTokens">
            <summary>设置 TeeSinkTokenFilter.ConsumeAllTokens() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.AllInstances.End">
            <summary>设置 TeeSinkTokenFilter.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.AllInstances.IncrementToken">
            <summary>设置 TeeSinkTokenFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.AllInstances.NewSinkTokenStream">
            <summary>设置 TeeSinkTokenFilter.NewSinkTokenStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.AllInstances.NewSinkTokenStreamTeeSinkTokenFilterSinkFilter">
            <summary>设置 TeeSinkTokenFilter.NewSinkTokenStream(SinkFilter filter) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter">
            <summary>Lucene.Net.Analysis.TeeSinkTokenFilter+SinkFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.#ctor(Lucene.Net.Analysis.TeeSinkTokenFilter.SinkFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.Constructor">
            <summary>设置 SinkFilter.SinkFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.Reset">
            <summary>设置 SinkFilter.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkFilter.AllInstances.Reset">
            <summary>设置 SinkFilter.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream">
            <summary>Lucene.Net.Analysis.TeeSinkTokenFilter+SinkTokenStream 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.#ctor(Lucene.Net.Analysis.TeeSinkTokenFilter.SinkTokenStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AcceptAttributeSource">
            <summary>设置 SinkTokenStream.Accept(AttributeSource source) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AddStateAttributeSourceState">
            <summary>设置 SinkTokenStream.AddState(State state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.ConstructorAttributeSourceTeeSinkTokenFilterSinkFilter">
            <summary>设置 SinkTokenStream.SinkTokenStream(AttributeSource source, SinkFilter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.End">
            <summary>设置 SinkTokenStream.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.IncrementToken">
            <summary>设置 SinkTokenStream.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.Reset">
            <summary>设置 SinkTokenStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.SetFinalStateAttributeSourceState">
            <summary>设置 SinkTokenStream.SetFinalState(State finalState) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AllInstances.AcceptAttributeSource">
            <summary>设置 SinkTokenStream.Accept(AttributeSource source) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AllInstances.AddStateAttributeSourceState">
            <summary>设置 SinkTokenStream.AddState(State state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AllInstances.End">
            <summary>设置 SinkTokenStream.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AllInstances.IncrementToken">
            <summary>设置 SinkTokenStream.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AllInstances.Reset">
            <summary>设置 SinkTokenStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTeeSinkTokenFilter.ShimSinkTokenStream.AllInstances.SetFinalStateAttributeSourceState">
            <summary>设置 SinkTokenStream.SetFinalState(State finalState) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimToken">
            <summary>Lucene.Net.Analysis.Token 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.#ctor(Lucene.Net.Analysis.Token)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.Bind(Lucene.Net.Analysis.Tokenattributes.FlagsAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.Bind(Lucene.Net.Analysis.Tokenattributes.OffsetAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.Bind(Lucene.Net.Analysis.Tokenattributes.PayloadAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.Bind(Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.Bind(Lucene.Net.Analysis.Tokenattributes.TermAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.Bind(Lucene.Net.Analysis.Tokenattributes.TypeAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.Bind(Lucene.Net.Util.IAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimToken.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.Clear">
            <summary>设置 Token.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ClearNoTermBuffer">
            <summary>设置 Token.ClearNoTermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.Clone">
            <summary>设置 Token.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.CloneCharArrayInt32Int32Int32Int32">
            <summary>设置 Token.Clone(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.Constructor">
            <summary>设置 Token.Token() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ConstructorCharArrayInt32Int32Int32Int32">
            <summary>设置 Token.Token(Char[] startTermBuffer, Int32 termBufferOffset, Int32 termBufferLength, Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ConstructorInt32Int32">
            <summary>设置 Token.Token(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ConstructorInt32Int32Int32">
            <summary>设置 Token.Token(Int32 start, Int32 end, Int32 flags) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ConstructorInt32Int32String">
            <summary>设置 Token.Token(Int32 start, Int32 end, String typ) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ConstructorStringInt32Int32">
            <summary>设置 Token.Token(String text, Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ConstructorStringInt32Int32Int32">
            <summary>设置 Token.Token(String text, Int32 start, Int32 end, Int32 flags) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ConstructorStringInt32Int32String">
            <summary>设置 Token.Token(String text, Int32 start, Int32 end, String typ) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.CopyToAttributeImpl">
            <summary>设置 Token.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.EndOffset">
            <summary>设置 Token.EndOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.EqualsObject">
            <summary>设置 Token.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.GetFlags">
            <summary>设置 Token.GetFlags() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.GetHashCode">
            <summary>设置 Token.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.GetPayload">
            <summary>设置 Token.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.GetPositionIncrement">
            <summary>设置 Token.GetPositionIncrement() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.GrowTermBufferInt32">
            <summary>设置 Token.GrowTermBuffer(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.InitTermBuffer">
            <summary>设置 Token.InitTermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitCharArrayInt32Int32Int32Int32">
            <summary>设置 Token.Reinit(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitCharArrayInt32Int32Int32Int32String">
            <summary>设置 Token.Reinit(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitStringInt32Int32">
            <summary>设置 Token.Reinit(String newTerm, Int32 newStartOffset, Int32 newEndOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitStringInt32Int32Int32Int32">
            <summary>设置 Token.Reinit(String newTerm, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitStringInt32Int32Int32Int32String">
            <summary>设置 Token.Reinit(String newTerm, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitStringInt32Int32String">
            <summary>设置 Token.Reinit(String newTerm, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitToken">
            <summary>设置 Token.Reinit(Token prototype) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitTokenCharArrayInt32Int32">
            <summary>设置 Token.Reinit(Token prototype, Char[] newTermBuffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ReinitTokenString">
            <summary>设置 Token.Reinit(Token prototype, String newTerm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ResizeTermBufferInt32">
            <summary>设置 Token.ResizeTermBuffer(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetEndOffsetInt32">
            <summary>设置 Token.SetEndOffset(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetFlagsInt32">
            <summary>设置 Token.SetFlags(Int32 flags) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetOffsetInt32Int32">
            <summary>设置 Token.SetOffset(Int32 startOffset, Int32 endOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetPayloadPayload">
            <summary>设置 Token.SetPayload(Payload payload) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetPositionIncrementInt32">
            <summary>设置 Token.SetPositionIncrement(Int32 positionIncrement) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetStartOffsetInt32">
            <summary>设置 Token.SetStartOffset(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetTermBufferCharArrayInt32Int32">
            <summary>设置 Token.SetTermBuffer(Char[] buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetTermBufferString">
            <summary>设置 Token.SetTermBuffer(String buffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetTermBufferStringInt32Int32">
            <summary>设置 Token.SetTermBuffer(String buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetTermLengthInt32">
            <summary>设置 Token.SetTermLength(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetTermTextString">
            <summary>设置 Token.SetTermText(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SetTypeString">
            <summary>设置 Token.SetType(String type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.StartOffset">
            <summary>设置 Token.StartOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.StaticConstructor">
            <summary>设置 Token.Token() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.SubEqualObjectObject">
            <summary>设置 Token.SubEqual(Object o1, Object o2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.Term">
            <summary>设置 Token.Term() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.TermBuffer">
            <summary>设置 Token.TermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.TermLength">
            <summary>设置 Token.TermLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.TermText">
            <summary>设置 Token.TermText() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.ToString">
            <summary>设置 Token.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.Type">
            <summary>设置 Token.Type() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.Clear">
            <summary>设置 Token.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ClearNoTermBuffer">
            <summary>设置 Token.ClearNoTermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.Clone">
            <summary>设置 Token.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.CloneCharArrayInt32Int32Int32Int32">
            <summary>设置 Token.Clone(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.CopyToAttributeImpl">
            <summary>设置 Token.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.EndOffset">
            <summary>设置 Token.EndOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.EqualsObject">
            <summary>设置 Token.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.GetFlags">
            <summary>设置 Token.GetFlags() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.GetHashCode01">
            <summary>设置 Token.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.GetPayload">
            <summary>设置 Token.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.GetPositionIncrement">
            <summary>设置 Token.GetPositionIncrement() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.GrowTermBufferInt32">
            <summary>设置 Token.GrowTermBuffer(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.InitTermBuffer">
            <summary>设置 Token.InitTermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitCharArrayInt32Int32Int32Int32">
            <summary>设置 Token.Reinit(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitCharArrayInt32Int32Int32Int32String">
            <summary>设置 Token.Reinit(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitStringInt32Int32">
            <summary>设置 Token.Reinit(String newTerm, Int32 newStartOffset, Int32 newEndOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitStringInt32Int32Int32Int32">
            <summary>设置 Token.Reinit(String newTerm, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitStringInt32Int32Int32Int32String">
            <summary>设置 Token.Reinit(String newTerm, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitStringInt32Int32String">
            <summary>设置 Token.Reinit(String newTerm, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitToken">
            <summary>设置 Token.Reinit(Token prototype) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitTokenCharArrayInt32Int32">
            <summary>设置 Token.Reinit(Token prototype, Char[] newTermBuffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ReinitTokenString">
            <summary>设置 Token.Reinit(Token prototype, String newTerm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ResizeTermBufferInt32">
            <summary>设置 Token.ResizeTermBuffer(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetEndOffsetInt32">
            <summary>设置 Token.SetEndOffset(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetFlagsInt32">
            <summary>设置 Token.SetFlags(Int32 flags) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetOffsetInt32Int32">
            <summary>设置 Token.SetOffset(Int32 startOffset, Int32 endOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetPayloadPayload">
            <summary>设置 Token.SetPayload(Payload payload) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetPositionIncrementInt32">
            <summary>设置 Token.SetPositionIncrement(Int32 positionIncrement) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetStartOffsetInt32">
            <summary>设置 Token.SetStartOffset(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetTermBufferCharArrayInt32Int32">
            <summary>设置 Token.SetTermBuffer(Char[] buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetTermBufferString">
            <summary>设置 Token.SetTermBuffer(String buffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetTermBufferStringInt32Int32">
            <summary>设置 Token.SetTermBuffer(String buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetTermLengthInt32">
            <summary>设置 Token.SetTermLength(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetTermTextString">
            <summary>设置 Token.SetTermText(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SetTypeString">
            <summary>设置 Token.SetType(String type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.StartOffset">
            <summary>设置 Token.StartOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.SubEqualObjectObject">
            <summary>设置 Token.SubEqual(Object o1, Object o2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.Term">
            <summary>设置 Token.Term() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.TermBuffer">
            <summary>设置 Token.TermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.TermLength">
            <summary>设置 Token.TermLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.TermText">
            <summary>设置 Token.TermText() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.ToString01">
            <summary>设置 Token.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimToken.AllInstances.Type">
            <summary>设置 Token.Type() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTokenFilter">
            <summary>Lucene.Net.Analysis.TokenFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenFilter.#ctor(Lucene.Net.Analysis.TokenFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenFilter.Close">
            <summary>设置 TokenFilter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenFilter.ConstructorTokenStream">
            <summary>设置 TokenFilter.TokenFilter(TokenStream input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenFilter.End">
            <summary>设置 TokenFilter.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenFilter.Reset">
            <summary>设置 TokenFilter.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTokenFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenFilter.AllInstances.Close">
            <summary>设置 TokenFilter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenFilter.AllInstances.End">
            <summary>设置 TokenFilter.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenFilter.AllInstances.Reset">
            <summary>设置 TokenFilter.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTokenStream">
            <summary>Lucene.Net.Analysis.TokenStream 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenStream.#ctor(Lucene.Net.Analysis.TokenStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.Check">
            <summary>设置 TokenStream.Check() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.Close">
            <summary>设置 TokenStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.Constructor">
            <summary>设置 TokenStream.TokenStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.ConstructorAttributeSource">
            <summary>设置 TokenStream.TokenStream(AttributeSource input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.ConstructorAttributeSourceAttributeFactory">
            <summary>设置 TokenStream.TokenStream(AttributeFactory factory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.End">
            <summary>设置 TokenStream.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.GetOnlyUseNewAPI">
            <summary>设置 TokenStream.GetOnlyUseNewAPI() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.IncrementToken">
            <summary>设置 TokenStream.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.InitBlock">
            <summary>设置 TokenStream.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.InitTokenWrapperAttributeSource">
            <summary>设置 TokenStream.InitTokenWrapper(AttributeSource input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.Next">
            <summary>设置 TokenStream.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.NextToken">
            <summary>设置 TokenStream.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.Reset">
            <summary>设置 TokenStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.SetOnlyUseNewAPIBoolean">
            <summary>设置 TokenStream.SetOnlyUseNewAPI(Boolean onlyUseNewAPI) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.StaticConstructor">
            <summary>设置 TokenStream.TokenStream() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.Check">
            <summary>设置 TokenStream.Check() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.Close">
            <summary>设置 TokenStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.End">
            <summary>设置 TokenStream.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.IncrementToken">
            <summary>设置 TokenStream.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.InitBlock">
            <summary>设置 TokenStream.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.InitTokenWrapperAttributeSource">
            <summary>设置 TokenStream.InitTokenWrapper(AttributeSource input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.Next">
            <summary>设置 TokenStream.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.NextToken">
            <summary>设置 TokenStream.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenStream.AllInstances.Reset">
            <summary>设置 TokenStream.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTokenizer">
            <summary>Lucene.Net.Analysis.Tokenizer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenizer.#ctor(Lucene.Net.Analysis.Tokenizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimTokenizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.Close">
            <summary>设置 Tokenizer.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.Constructor">
            <summary>设置 Tokenizer.Tokenizer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.ConstructorAttributeSource">
            <summary>设置 Tokenizer.Tokenizer(AttributeSource source) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.ConstructorAttributeSourceAttributeFactory">
            <summary>设置 Tokenizer.Tokenizer(AttributeFactory factory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.ConstructorAttributeSourceAttributeFactoryTextReader">
            <summary>设置 Tokenizer.Tokenizer(AttributeFactory factory, TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.ConstructorAttributeSourceTextReader">
            <summary>设置 Tokenizer.Tokenizer(AttributeSource source, TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.ConstructorTextReader">
            <summary>设置 Tokenizer.Tokenizer(TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.CorrectOffsetInt32">
            <summary>设置 Tokenizer.CorrectOffset(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.ResetTextReader">
            <summary>设置 Tokenizer.Reset(TextReader input) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimTokenizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.AllInstances.Close">
            <summary>设置 Tokenizer.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.AllInstances.CorrectOffsetInt32">
            <summary>设置 Tokenizer.CorrectOffset(Int32 currentOff) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimTokenizer.AllInstances.ResetTextReader">
            <summary>设置 Tokenizer.Reset(TextReader input) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer">
            <summary>Lucene.Net.Analysis.WhitespaceAnalyzer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.#ctor(Lucene.Net.Analysis.WhitespaceAnalyzer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.Constructor">
            <summary>设置 WhitespaceAnalyzer.WhitespaceAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.ReusableTokenStreamStringTextReader">
            <summary>设置 WhitespaceAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.TokenStreamStringTextReader">
            <summary>设置 WhitespaceAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.AllInstances.ReusableTokenStreamStringTextReader">
            <summary>设置 WhitespaceAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceAnalyzer.AllInstances.TokenStreamStringTextReader">
            <summary>设置 WhitespaceAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer">
            <summary>Lucene.Net.Analysis.WhitespaceTokenizer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.#ctor(Lucene.Net.Analysis.WhitespaceTokenizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.ConstructorAttributeSourceAttributeFactoryTextReader">
            <summary>设置 WhitespaceTokenizer.WhitespaceTokenizer(AttributeFactory factory, TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.ConstructorAttributeSourceTextReader">
            <summary>设置 WhitespaceTokenizer.WhitespaceTokenizer(AttributeSource source, TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.ConstructorTextReader">
            <summary>设置 WhitespaceTokenizer.WhitespaceTokenizer(TextReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.IsTokenCharChar">
            <summary>设置 WhitespaceTokenizer.IsTokenChar(Char c) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWhitespaceTokenizer.AllInstances.IsTokenCharChar">
            <summary>设置 WhitespaceTokenizer.IsTokenChar(Char c) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimWordlistLoader">
            <summary>Lucene.Net.Analysis.WordlistLoader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.#ctor(Lucene.Net.Analysis.WordlistLoader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.Constructor">
            <summary>设置 WordlistLoader.WordlistLoader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.GetStemDictFileInfo">
            <summary>设置 WordlistLoader.GetStemDict(FileInfo wordstemfile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.GetWordSetFileInfo">
            <summary>设置 WordlistLoader.GetWordSet(FileInfo wordfile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.GetWordSetFileInfoString">
            <summary>设置 WordlistLoader.GetWordSet(FileInfo wordfile, String comment) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.GetWordSetTextReader">
            <summary>设置 WordlistLoader.GetWordSet(TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.GetWordSetTextReaderString">
            <summary>设置 WordlistLoader.GetWordSet(TextReader reader, String comment) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.ShimWordlistLoader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter">
            <summary>Lucene.Net.Analysis.CachingTokenFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.#ctor(Lucene.Net.Analysis.TokenStream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.Close">
            <summary>设置 TokenFilter.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.Close01">
            <summary>设置 TokenFilter.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.End">
            <summary>设置 CachingTokenFilter.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.End01">
            <summary>设置 CachingTokenFilter.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.IncrementToken">
            <summary>设置 CachingTokenFilter.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.IncrementToken01">
            <summary>设置 CachingTokenFilter.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.InitializeStub">
            <summary>初始化 type StubCachingTokenFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.Next">
            <summary>设置 CachingTokenFilter.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 CachingTokenFilter.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.Next01">
            <summary>设置 CachingTokenFilter.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.NextToken">
            <summary>设置 CachingTokenFilter.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.Reset">
            <summary>设置 CachingTokenFilter.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.Reset01">
            <summary>设置 CachingTokenFilter.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCachingTokenFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubCharArraySet">
            <summary>Lucene.Net.Analysis.CharArraySet 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharArraySet.#ctor(System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharArraySet.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharArraySet.Contains(System.Char[])">
            <summary>设置 CharArraySet.Contains(Char[] text) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharArraySet.Contains(System.Char[],System.Int32,System.Int32)">
            <summary>设置 CharArraySet.Contains(Char[] text, Int32 off, Int32 len) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharArraySet.ContainsCharArray">
            <summary>设置 CharArraySet.Contains(Char[] text) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharArraySet.ContainsCharArrayInt32Int32">
            <summary>设置 CharArraySet.Contains(Char[] text, Int32 off, Int32 len) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharArraySet.InitializeStub">
            <summary>初始化 type StubCharArraySet 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCharArraySet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCharArraySet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCharArraySet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubCharTokenizer">
            <summary>Lucene.Net.Analysis.CharTokenizer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.#ctor(Lucene.Net.Util.AttributeSource,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Close">
            <summary>设置 Tokenizer.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Close01">
            <summary>设置 Tokenizer.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.End">
            <summary>设置 CharTokenizer.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.End01">
            <summary>设置 CharTokenizer.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.IncrementToken">
            <summary>设置 CharTokenizer.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.IncrementToken01">
            <summary>设置 CharTokenizer.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.InitializeStub">
            <summary>初始化 type StubCharTokenizer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.IsTokenChar(System.Char)">
            <summary>设置 CharTokenizer.IsTokenChar(Char c) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.IsTokenCharChar">
            <summary>设置 CharTokenizer.IsTokenChar(Char c) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Next">
            <summary>设置 CharTokenizer.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 CharTokenizer.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Next01">
            <summary>设置 CharTokenizer.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.NextToken">
            <summary>设置 CharTokenizer.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Normalize(System.Char)">
            <summary>设置 CharTokenizer.Normalize(Char c) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.NormalizeChar">
            <summary>设置 CharTokenizer.Normalize(Char c) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Reset">
            <summary>设置 TokenStream.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.Reset01">
            <summary>设置 TokenStream.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubCharTokenizer.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubCharTokenizer.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCharTokenizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCharTokenizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubCharTokenizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer">
            <summary>Lucene.Net.Analysis.KeywordTokenizer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.#ctor(System.IO.TextReader,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.#ctor(Lucene.Net.Util.AttributeSource,System.IO.TextReader,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory,System.IO.TextReader,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.Close">
            <summary>设置 Tokenizer.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.Close01">
            <summary>设置 Tokenizer.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.End">
            <summary>设置 KeywordTokenizer.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.End01">
            <summary>设置 KeywordTokenizer.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.IncrementToken">
            <summary>设置 KeywordTokenizer.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.IncrementToken01">
            <summary>设置 KeywordTokenizer.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.InitializeStub">
            <summary>初始化 type StubKeywordTokenizer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.Next">
            <summary>设置 KeywordTokenizer.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 KeywordTokenizer.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.Next01">
            <summary>设置 KeywordTokenizer.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.NextToken">
            <summary>设置 KeywordTokenizer.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.Reset">
            <summary>设置 TokenStream.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.Reset01">
            <summary>设置 TokenStream.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubKeywordTokenizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubLetterTokenizer">
            <summary>Lucene.Net.Analysis.LetterTokenizer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.#ctor(Lucene.Net.Util.AttributeSource,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Close">
            <summary>设置 Tokenizer.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Close01">
            <summary>设置 Tokenizer.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.End">
            <summary>设置 CharTokenizer.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.End01">
            <summary>设置 CharTokenizer.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.IncrementToken">
            <summary>设置 CharTokenizer.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.IncrementToken01">
            <summary>设置 CharTokenizer.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.InitializeStub">
            <summary>初始化 type StubLetterTokenizer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.IsTokenChar(System.Char)">
            <summary>设置 LetterTokenizer.IsTokenChar(Char c) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.IsTokenCharChar">
            <summary>设置 LetterTokenizer.IsTokenChar(Char c) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Next">
            <summary>设置 CharTokenizer.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 CharTokenizer.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Next01">
            <summary>设置 CharTokenizer.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.NextToken">
            <summary>设置 CharTokenizer.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Normalize(System.Char)">
            <summary>设置 CharTokenizer.Normalize(Char c) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.NormalizeChar">
            <summary>设置 CharTokenizer.Normalize(Char c) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Reset">
            <summary>设置 TokenStream.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.Reset01">
            <summary>设置 TokenStream.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubLetterTokenizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubNormalizeCharMap">
            <summary>Lucene.Net.Analysis.NormalizeCharMap 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubNormalizeCharMap.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubNormalizeCharMap.Add(System.String,System.String)">
            <summary>设置 NormalizeCharMap.Add(String singleMatch, String replacement) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubNormalizeCharMap.AddStringString">
            <summary>设置 NormalizeCharMap.Add(String singleMatch, String replacement) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubNormalizeCharMap.InitializeStub">
            <summary>初始化 type StubNormalizeCharMap 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubNormalizeCharMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubNormalizeCharMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubNormalizeCharMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubToken">
            <summary>Lucene.Net.Analysis.Token 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.#ctor(System.String,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.#ctor(System.Int32,System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.#ctor(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Clear">
            <summary>设置 Token.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.Clear01">
            <summary>设置 Token.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Clone(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>设置 Token.Clone(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Clone">
            <summary>设置 Token.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.Clone01">
            <summary>设置 Token.Clone() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.CloneCharArrayInt32Int32Int32Int32">
            <summary>设置 Token.Clone(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.CopyTo(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 Token.CopyTo(AttributeImpl target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.CopyToAttributeImpl">
            <summary>设置 Token.CopyTo(AttributeImpl target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Equals(System.Object)">
            <summary>设置 Token.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.EqualsObject">
            <summary>设置 Token.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.GetFlags">
            <summary>设置 Token.GetFlags() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.GetFlags01">
            <summary>设置 Token.GetFlags() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.GetHashCode">
            <summary>设置 Token.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.GetHashCode01">
            <summary>设置 Token.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.GetPayload">
            <summary>设置 Token.GetPayload() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.GetPayload01">
            <summary>设置 Token.GetPayload() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.GetPositionIncrement">
            <summary>设置 Token.GetPositionIncrement() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.GetPositionIncrement01">
            <summary>设置 Token.GetPositionIncrement() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.InitializeStub">
            <summary>初始化 type StubToken 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(Lucene.Net.Analysis.Token,System.String)">
            <summary>设置 Token.Reinit(Token prototype, String newTerm) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(System.String,System.Int32,System.Int32)">
            <summary>设置 Token.Reinit(String newTerm, Int32 newStartOffset, Int32 newEndOffset) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(Lucene.Net.Analysis.Token)">
            <summary>设置 Token.Reinit(Token prototype) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(System.String,System.Int32,System.Int32,System.String)">
            <summary>设置 Token.Reinit(String newTerm, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>设置 Token.Reinit(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>设置 Token.Reinit(String newTerm, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(Lucene.Net.Analysis.Token,System.Char[],System.Int32,System.Int32)">
            <summary>设置 Token.Reinit(Token prototype, Char[] newTermBuffer, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>设置 Token.Reinit(String newTerm, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.Reinit(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>设置 Token.Reinit(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitCharArrayInt32Int32Int32Int32">
            <summary>设置 Token.Reinit(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitCharArrayInt32Int32Int32Int32String">
            <summary>设置 Token.Reinit(Char[] newTermBuffer, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitStringInt32Int32">
            <summary>设置 Token.Reinit(String newTerm, Int32 newStartOffset, Int32 newEndOffset) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitStringInt32Int32Int32Int32">
            <summary>设置 Token.Reinit(String newTerm, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitStringInt32Int32Int32Int32String">
            <summary>设置 Token.Reinit(String newTerm, Int32 newTermOffset, Int32 newTermLength, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitStringInt32Int32String">
            <summary>设置 Token.Reinit(String newTerm, Int32 newStartOffset, Int32 newEndOffset, String newType) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitToken">
            <summary>设置 Token.Reinit(Token prototype) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitTokenCharArrayInt32Int32">
            <summary>设置 Token.Reinit(Token prototype, Char[] newTermBuffer, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ReinitTokenString">
            <summary>设置 Token.Reinit(Token prototype, String newTerm) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.ResizeTermBuffer(System.Int32)">
            <summary>设置 Token.ResizeTermBuffer(Int32 newSize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ResizeTermBufferInt32">
            <summary>设置 Token.ResizeTermBuffer(Int32 newSize) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.SetEndOffset(System.Int32)">
            <summary>设置 Token.SetEndOffset(Int32 offset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.SetEndOffsetInt32">
            <summary>设置 Token.SetEndOffset(Int32 offset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.SetFlags(System.Int32)">
            <summary>设置 Token.SetFlags(Int32 flags) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.SetFlagsInt32">
            <summary>设置 Token.SetFlags(Int32 flags) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.SetOffset(System.Int32,System.Int32)">
            <summary>设置 Token.SetOffset(Int32 startOffset, Int32 endOffset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.SetOffsetInt32Int32">
            <summary>设置 Token.SetOffset(Int32 startOffset, Int32 endOffset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.SetPayload(Lucene.Net.Index.Payload)">
            <summary>设置 Token.SetPayload(Payload payload) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.SetPayloadPayload">
            <summary>设置 Token.SetPayload(Payload payload) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.SetPositionIncrement(System.Int32)">
            <summary>设置 Token.SetPositionIncrement(Int32 positionIncrement) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.SetPositionIncrementInt32">
            <summary>设置 Token.SetPositionIncrement(Int32 positionIncrement) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.SetStartOffset(System.Int32)">
            <summary>设置 Token.SetStartOffset(Int32 offset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.SetStartOffsetInt32">
            <summary>设置 Token.SetStartOffset(Int32 offset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.SetTermText(System.String)">
            <summary>设置 Token.SetTermText(String text) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.SetTermTextString">
            <summary>设置 Token.SetTermText(String text) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubToken.ToString">
            <summary>设置 Token.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubToken.ToString01">
            <summary>设置 Token.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubToken.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubToken.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubToken.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubTokenFilter">
            <summary>Lucene.Net.Analysis.TokenFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.#ctor(Lucene.Net.Analysis.TokenStream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.Close">
            <summary>设置 TokenFilter.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.Close01">
            <summary>设置 TokenFilter.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.End">
            <summary>设置 TokenFilter.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.End01">
            <summary>设置 TokenFilter.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.IncrementToken">
            <summary>设置 TokenStream.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.IncrementToken01">
            <summary>设置 TokenStream.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.InitializeStub">
            <summary>初始化 type StubTokenFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.Next">
            <summary>设置 TokenStream.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 TokenStream.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.Next01">
            <summary>设置 TokenStream.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.NextToken">
            <summary>设置 TokenStream.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.Reset">
            <summary>设置 TokenFilter.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.Reset01">
            <summary>设置 TokenFilter.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenFilter.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenFilter.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubTokenStream">
            <summary>Lucene.Net.Analysis.TokenStream 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.#ctor(Lucene.Net.Util.AttributeSource)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.Close">
            <summary>设置 TokenStream.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.Close01">
            <summary>设置 TokenStream.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.End">
            <summary>设置 TokenStream.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.End01">
            <summary>设置 TokenStream.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.IncrementToken">
            <summary>设置 TokenStream.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.IncrementToken01">
            <summary>设置 TokenStream.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.InitializeStub">
            <summary>初始化 type StubTokenStream 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.Next">
            <summary>设置 TokenStream.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 TokenStream.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.Next01">
            <summary>设置 TokenStream.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.NextToken">
            <summary>设置 TokenStream.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.Reset">
            <summary>设置 TokenStream.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.Reset01">
            <summary>设置 TokenStream.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenStream.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenStream.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubTokenizer">
            <summary>Lucene.Net.Analysis.Tokenizer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.#ctor(Lucene.Net.Util.AttributeSource)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.#ctor(Lucene.Net.Util.AttributeSource,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.Close">
            <summary>设置 Tokenizer.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.Close01">
            <summary>设置 Tokenizer.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.End">
            <summary>设置 TokenStream.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.End01">
            <summary>设置 TokenStream.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.IncrementToken">
            <summary>设置 TokenStream.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.IncrementToken01">
            <summary>设置 TokenStream.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.InitializeStub">
            <summary>初始化 type StubTokenizer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.Next">
            <summary>设置 TokenStream.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 TokenStream.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.Next01">
            <summary>设置 TokenStream.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.NextToken">
            <summary>设置 TokenStream.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.Reset">
            <summary>设置 TokenStream.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.Reset01">
            <summary>设置 TokenStream.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubTokenizer.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubTokenizer.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubTokenizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer">
            <summary>Lucene.Net.Analysis.WhitespaceTokenizer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.#ctor(Lucene.Net.Util.AttributeSource,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Close">
            <summary>设置 Tokenizer.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Close01">
            <summary>设置 Tokenizer.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.End">
            <summary>设置 CharTokenizer.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.End01">
            <summary>设置 CharTokenizer.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.IncrementToken">
            <summary>设置 CharTokenizer.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.IncrementToken01">
            <summary>设置 CharTokenizer.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.InitializeStub">
            <summary>初始化 type StubWhitespaceTokenizer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.IsTokenChar(System.Char)">
            <summary>设置 WhitespaceTokenizer.IsTokenChar(Char c) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.IsTokenCharChar">
            <summary>设置 WhitespaceTokenizer.IsTokenChar(Char c) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Next">
            <summary>设置 CharTokenizer.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 CharTokenizer.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Next01">
            <summary>设置 CharTokenizer.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.NextToken">
            <summary>设置 CharTokenizer.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Normalize(System.Char)">
            <summary>设置 CharTokenizer.Normalize(Char c) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.NormalizeChar">
            <summary>设置 CharTokenizer.Normalize(Char c) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Reset">
            <summary>设置 TokenStream.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.Reset01">
            <summary>设置 TokenStream.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubWhitespaceTokenizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Fakes.StubWordlistLoader">
            <summary>Lucene.Net.Analysis.WordlistLoader 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWordlistLoader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Fakes.StubWordlistLoader.InitializeStub">
            <summary>初始化 type StubWordlistLoader 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubWordlistLoader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubWordlistLoader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Fakes.StubWordlistLoader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer">
            <summary>Lucene.Net.Analysis.Standard.StandardAnalyzer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.#ctor(Lucene.Net.Analysis.Standard.StandardAnalyzer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.Constructor">
            <summary>设置 StandardAnalyzer.StandardAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorBoolean">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorFileInfo">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(FileInfo stopwords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorFileInfoBoolean">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(FileInfo stopwords, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorICollectionOfString">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(ICollection`1&lt;String&gt; stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorListOfStringBoolean">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(List`1&lt;String&gt; stopwords, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorStringArray">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(String[] stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorStringArrayBoolean">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(String[] stopwords, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorTextReader">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(TextReader stopwords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorTextReaderBoolean">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(TextReader stopwords, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorVersion">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(Version matchVersion) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorVersionFileInfo">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(Version matchVersion, FileInfo stopwords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorVersionICollectionOfString">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(Version matchVersion, ICollection`1&lt;String&gt; stopWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ConstructorVersionTextReader">
            <summary>设置 StandardAnalyzer.StandardAnalyzer(Version matchVersion, TextReader stopwords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.GetDefaultReplaceInvalidAcronym">
            <summary>设置 StandardAnalyzer.GetDefaultReplaceInvalidAcronym() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.GetMaxTokenLength">
            <summary>设置 StandardAnalyzer.GetMaxTokenLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.InitVersion">
            <summary>设置 StandardAnalyzer.Init(Version matchVersion) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.IsReplaceInvalidAcronym">
            <summary>设置 StandardAnalyzer.IsReplaceInvalidAcronym() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.ReusableTokenStreamStringTextReader">
            <summary>设置 StandardAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.SetDefaultReplaceInvalidAcronymBoolean">
            <summary>设置 StandardAnalyzer.SetDefaultReplaceInvalidAcronym(Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.SetMaxTokenLengthInt32">
            <summary>设置 StandardAnalyzer.SetMaxTokenLength(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.SetReplaceInvalidAcronymBoolean">
            <summary>设置 StandardAnalyzer.SetReplaceInvalidAcronym(Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.StaticConstructor">
            <summary>设置 StandardAnalyzer.StandardAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.TokenStreamStringTextReader">
            <summary>设置 StandardAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.AllInstances.GetMaxTokenLength">
            <summary>设置 StandardAnalyzer.GetMaxTokenLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.AllInstances.InitVersion">
            <summary>设置 StandardAnalyzer.Init(Version matchVersion) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.AllInstances.IsReplaceInvalidAcronym">
            <summary>设置 StandardAnalyzer.IsReplaceInvalidAcronym() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.AllInstances.ReusableTokenStreamStringTextReader">
            <summary>设置 StandardAnalyzer.ReusableTokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.AllInstances.SetMaxTokenLengthInt32">
            <summary>设置 StandardAnalyzer.SetMaxTokenLength(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.AllInstances.SetReplaceInvalidAcronymBoolean">
            <summary>设置 StandardAnalyzer.SetReplaceInvalidAcronym(Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardAnalyzer.AllInstances.TokenStreamStringTextReader">
            <summary>设置 StandardAnalyzer.TokenStream(String fieldName, TextReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter">
            <summary>Lucene.Net.Analysis.Standard.StandardFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.#ctor(Lucene.Net.Analysis.Standard.StandardFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.ConstructorTokenStream">
            <summary>设置 StandardFilter.StandardFilter(TokenStream in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.IncrementToken">
            <summary>设置 StandardFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.StaticConstructor">
            <summary>设置 StandardFilter.StandardFilter() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardFilter.AllInstances.IncrementToken">
            <summary>设置 StandardFilter.IncrementToken() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer">
            <summary>Lucene.Net.Analysis.Standard.StandardTokenizer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.#ctor(Lucene.Net.Analysis.Standard.StandardTokenizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.ConstructorAttributeSourceAttributeFactoryTextReaderBoolean">
            <summary>设置 StandardTokenizer.StandardTokenizer(AttributeFactory factory, TextReader input, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.ConstructorAttributeSourceTextReaderBoolean">
            <summary>设置 StandardTokenizer.StandardTokenizer(AttributeSource source, TextReader input, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.ConstructorTextReader">
            <summary>设置 StandardTokenizer.StandardTokenizer(TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.ConstructorTextReaderBoolean">
            <summary>设置 StandardTokenizer.StandardTokenizer(TextReader input, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.ConstructorVersionAttributeSourceAttributeFactoryTextReader">
            <summary>设置 StandardTokenizer.StandardTokenizer(Version matchVersion, AttributeFactory factory, TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.ConstructorVersionAttributeSourceTextReader">
            <summary>设置 StandardTokenizer.StandardTokenizer(Version matchVersion, AttributeSource source, TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.ConstructorVersionTextReader">
            <summary>设置 StandardTokenizer.StandardTokenizer(Version matchVersion, TextReader input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.End">
            <summary>设置 StandardTokenizer.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.GetMaxTokenLength">
            <summary>设置 StandardTokenizer.GetMaxTokenLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.IncrementToken">
            <summary>设置 StandardTokenizer.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.InitBlock">
            <summary>设置 StandardTokenizer.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.InitTextReaderBoolean">
            <summary>设置 StandardTokenizer.Init(TextReader input, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.InitTextReaderVersion">
            <summary>设置 StandardTokenizer.Init(TextReader input, Version matchVersion) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.IsReplaceInvalidAcronym">
            <summary>设置 StandardTokenizer.IsReplaceInvalidAcronym() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.Next">
            <summary>设置 StandardTokenizer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.NextToken">
            <summary>设置 StandardTokenizer.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.ResetTextReader">
            <summary>设置 StandardTokenizer.Reset(TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.SetMaxTokenLengthInt32">
            <summary>设置 StandardTokenizer.SetMaxTokenLength(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.SetReplaceInvalidAcronymBoolean">
            <summary>设置 StandardTokenizer.SetReplaceInvalidAcronym(Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.StaticConstructor">
            <summary>设置 StandardTokenizer.StandardTokenizer() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.End">
            <summary>设置 StandardTokenizer.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.GetMaxTokenLength">
            <summary>设置 StandardTokenizer.GetMaxTokenLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.IncrementToken">
            <summary>设置 StandardTokenizer.IncrementToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.InitBlock">
            <summary>设置 StandardTokenizer.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.InitTextReaderBoolean">
            <summary>设置 StandardTokenizer.Init(TextReader input, Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.InitTextReaderVersion">
            <summary>设置 StandardTokenizer.Init(TextReader input, Version matchVersion) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.IsReplaceInvalidAcronym">
            <summary>设置 StandardTokenizer.IsReplaceInvalidAcronym() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.Next">
            <summary>设置 StandardTokenizer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.NextToken">
            <summary>设置 StandardTokenizer.Next(Token reusableToken) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.ResetTextReader">
            <summary>设置 StandardTokenizer.Reset(TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.SetMaxTokenLengthInt32">
            <summary>设置 StandardTokenizer.SetMaxTokenLength(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.ShimStandardTokenizer.AllInstances.SetReplaceInvalidAcronymBoolean">
            <summary>设置 StandardTokenizer.SetReplaceInvalidAcronym(Boolean replaceInvalidAcronym) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer">
            <summary>Lucene.Net.Analysis.Standard.StandardTokenizer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.#ctor(System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.#ctor(Lucene.Net.Util.Version,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.#ctor(System.IO.TextReader,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.#ctor(Lucene.Net.Util.AttributeSource,System.IO.TextReader,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.#ctor(Lucene.Net.Util.Version,Lucene.Net.Util.AttributeSource,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.#ctor(Lucene.Net.Util.Version,Lucene.Net.Util.AttributeSource.AttributeFactory,System.IO.TextReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory,System.IO.TextReader,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.Close">
            <summary>设置 Tokenizer.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.Close01">
            <summary>设置 Tokenizer.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.End">
            <summary>设置 StandardTokenizer.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.End01">
            <summary>设置 StandardTokenizer.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetMaxTokenLength">
            <summary>设置 StandardTokenizer.GetMaxTokenLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.GetMaxTokenLength01">
            <summary>设置 StandardTokenizer.GetMaxTokenLength() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.IncrementToken">
            <summary>设置 StandardTokenizer.IncrementToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.IncrementToken01">
            <summary>设置 StandardTokenizer.IncrementToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.InitializeStub">
            <summary>初始化 type StubStandardTokenizer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.IsReplaceInvalidAcronym">
            <summary>设置 StandardTokenizer.IsReplaceInvalidAcronym() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.IsReplaceInvalidAcronym01">
            <summary>设置 StandardTokenizer.IsReplaceInvalidAcronym() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.Next">
            <summary>设置 StandardTokenizer.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.Next(Lucene.Net.Analysis.Token)">
            <summary>设置 StandardTokenizer.Next(Token reusableToken) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.Next01">
            <summary>设置 StandardTokenizer.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.NextToken">
            <summary>设置 StandardTokenizer.Next(Token reusableToken) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.Reset">
            <summary>设置 TokenStream.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.Reset01">
            <summary>设置 TokenStream.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.SetMaxTokenLength(System.Int32)">
            <summary>设置 StandardTokenizer.SetMaxTokenLength(Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.SetMaxTokenLengthInt32">
            <summary>设置 StandardTokenizer.SetMaxTokenLength(Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.SetReplaceInvalidAcronym(System.Boolean)">
            <summary>设置 StandardTokenizer.SetReplaceInvalidAcronym(Boolean replaceInvalidAcronym) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.SetReplaceInvalidAcronymBoolean">
            <summary>设置 StandardTokenizer.SetReplaceInvalidAcronym(Boolean replaceInvalidAcronym) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Standard.Fakes.StubStandardTokenizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.FlagsAttributeImpl 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.#ctor(Lucene.Net.Analysis.Tokenattributes.FlagsAttributeImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.Bind(Lucene.Net.Analysis.Tokenattributes.FlagsAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.Bind(Lucene.Net.Util.IAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.Clear">
            <summary>设置 FlagsAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.Clone">
            <summary>设置 FlagsAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.Constructor">
            <summary>设置 FlagsAttributeImpl.FlagsAttributeImpl() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.CopyToAttributeImpl">
            <summary>设置 FlagsAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.EqualsObject">
            <summary>设置 FlagsAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.GetFlags">
            <summary>设置 FlagsAttributeImpl.GetFlags() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.GetHashCode">
            <summary>设置 FlagsAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.SetFlagsInt32">
            <summary>设置 FlagsAttributeImpl.SetFlags(Int32 flags) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.AllInstances.Clear">
            <summary>设置 FlagsAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.AllInstances.Clone">
            <summary>设置 FlagsAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.AllInstances.CopyToAttributeImpl">
            <summary>设置 FlagsAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.AllInstances.EqualsObject">
            <summary>设置 FlagsAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.AllInstances.GetFlags">
            <summary>设置 FlagsAttributeImpl.GetFlags() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.AllInstances.GetHashCode01">
            <summary>设置 FlagsAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimFlagsAttributeImpl.AllInstances.SetFlagsInt32">
            <summary>设置 FlagsAttributeImpl.SetFlags(Int32 flags) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.OffsetAttributeImpl 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.#ctor(Lucene.Net.Analysis.Tokenattributes.OffsetAttributeImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.Bind(Lucene.Net.Analysis.Tokenattributes.OffsetAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.Bind(Lucene.Net.Util.IAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.Clear">
            <summary>设置 OffsetAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.Clone">
            <summary>设置 OffsetAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.Constructor">
            <summary>设置 OffsetAttributeImpl.OffsetAttributeImpl() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.CopyToAttributeImpl">
            <summary>设置 OffsetAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.EndOffset">
            <summary>设置 OffsetAttributeImpl.EndOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.EqualsObject">
            <summary>设置 OffsetAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.GetHashCode">
            <summary>设置 OffsetAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.SetOffsetInt32Int32">
            <summary>设置 OffsetAttributeImpl.SetOffset(Int32 startOffset, Int32 endOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.StartOffset">
            <summary>设置 OffsetAttributeImpl.StartOffset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances.Clear">
            <summary>设置 OffsetAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances.Clone">
            <summary>设置 OffsetAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances.CopyToAttributeImpl">
            <summary>设置 OffsetAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances.EndOffset">
            <summary>设置 OffsetAttributeImpl.EndOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances.EqualsObject">
            <summary>设置 OffsetAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances.GetHashCode01">
            <summary>设置 OffsetAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances.SetOffsetInt32Int32">
            <summary>设置 OffsetAttributeImpl.SetOffset(Int32 startOffset, Int32 endOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimOffsetAttributeImpl.AllInstances.StartOffset">
            <summary>设置 OffsetAttributeImpl.StartOffset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.PayloadAttributeImpl 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.#ctor(Lucene.Net.Analysis.Tokenattributes.PayloadAttributeImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.Bind(Lucene.Net.Analysis.Tokenattributes.PayloadAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.Bind(Lucene.Net.Util.IAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.Clear">
            <summary>设置 PayloadAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.Clone">
            <summary>设置 PayloadAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.Constructor">
            <summary>设置 PayloadAttributeImpl.PayloadAttributeImpl() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.ConstructorPayload">
            <summary>设置 PayloadAttributeImpl.PayloadAttributeImpl(Payload payload) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.CopyToAttributeImpl">
            <summary>设置 PayloadAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.EqualsObject">
            <summary>设置 PayloadAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.GetHashCode">
            <summary>设置 PayloadAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.GetPayload">
            <summary>设置 PayloadAttributeImpl.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.SetPayloadPayload">
            <summary>设置 PayloadAttributeImpl.SetPayload(Payload payload) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.AllInstances.Clear">
            <summary>设置 PayloadAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.AllInstances.Clone">
            <summary>设置 PayloadAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.AllInstances.CopyToAttributeImpl">
            <summary>设置 PayloadAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.AllInstances.EqualsObject">
            <summary>设置 PayloadAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.AllInstances.GetHashCode01">
            <summary>设置 PayloadAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.AllInstances.GetPayload">
            <summary>设置 PayloadAttributeImpl.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPayloadAttributeImpl.AllInstances.SetPayloadPayload">
            <summary>设置 PayloadAttributeImpl.SetPayload(Payload payload) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttributeImpl 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.#ctor(Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttributeImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.Bind(Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.Bind(Lucene.Net.Util.IAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.Clear">
            <summary>设置 PositionIncrementAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.Clone">
            <summary>设置 PositionIncrementAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.Constructor">
            <summary>设置 PositionIncrementAttributeImpl.PositionIncrementAttributeImpl() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.CopyToAttributeImpl">
            <summary>设置 PositionIncrementAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.EqualsObject">
            <summary>设置 PositionIncrementAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.GetHashCode">
            <summary>设置 PositionIncrementAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.GetPositionIncrement">
            <summary>设置 PositionIncrementAttributeImpl.GetPositionIncrement() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.SetPositionIncrementInt32">
            <summary>设置 PositionIncrementAttributeImpl.SetPositionIncrement(Int32 positionIncrement) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.AllInstances.Clear">
            <summary>设置 PositionIncrementAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.AllInstances.Clone">
            <summary>设置 PositionIncrementAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.AllInstances.CopyToAttributeImpl">
            <summary>设置 PositionIncrementAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.AllInstances.EqualsObject">
            <summary>设置 PositionIncrementAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.AllInstances.GetHashCode01">
            <summary>设置 PositionIncrementAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.AllInstances.GetPositionIncrement">
            <summary>设置 PositionIncrementAttributeImpl.GetPositionIncrement() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimPositionIncrementAttributeImpl.AllInstances.SetPositionIncrementInt32">
            <summary>设置 PositionIncrementAttributeImpl.SetPositionIncrement(Int32 positionIncrement) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.TermAttributeImpl 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.#ctor(Lucene.Net.Analysis.Tokenattributes.TermAttributeImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.Bind(Lucene.Net.Analysis.Tokenattributes.TermAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.Bind(Lucene.Net.Util.IAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.Clear">
            <summary>设置 TermAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.Clone">
            <summary>设置 TermAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.Constructor">
            <summary>设置 TermAttributeImpl.TermAttributeImpl() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.CopyToAttributeImpl">
            <summary>设置 TermAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.EqualsObject">
            <summary>设置 TermAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.GetHashCode">
            <summary>设置 TermAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.GrowTermBufferInt32">
            <summary>设置 TermAttributeImpl.GrowTermBuffer(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.InitTermBuffer">
            <summary>设置 TermAttributeImpl.InitTermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.ResizeTermBufferInt32">
            <summary>设置 TermAttributeImpl.ResizeTermBuffer(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.SetTermBufferCharArrayInt32Int32">
            <summary>设置 TermAttributeImpl.SetTermBuffer(Char[] buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.SetTermBufferString">
            <summary>设置 TermAttributeImpl.SetTermBuffer(String buffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.SetTermBufferStringInt32Int32">
            <summary>设置 TermAttributeImpl.SetTermBuffer(String buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.SetTermLengthInt32">
            <summary>设置 TermAttributeImpl.SetTermLength(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.StaticConstructor">
            <summary>设置 TermAttributeImpl.TermAttributeImpl() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.Term">
            <summary>设置 TermAttributeImpl.Term() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.TermBuffer">
            <summary>设置 TermAttributeImpl.TermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.TermLength">
            <summary>设置 TermAttributeImpl.TermLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.ToString">
            <summary>设置 TermAttributeImpl.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.Clear">
            <summary>设置 TermAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.Clone">
            <summary>设置 TermAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.CopyToAttributeImpl">
            <summary>设置 TermAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.EqualsObject">
            <summary>设置 TermAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.GetHashCode01">
            <summary>设置 TermAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.GrowTermBufferInt32">
            <summary>设置 TermAttributeImpl.GrowTermBuffer(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.InitTermBuffer">
            <summary>设置 TermAttributeImpl.InitTermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.ResizeTermBufferInt32">
            <summary>设置 TermAttributeImpl.ResizeTermBuffer(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.SetTermBufferCharArrayInt32Int32">
            <summary>设置 TermAttributeImpl.SetTermBuffer(Char[] buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.SetTermBufferString">
            <summary>设置 TermAttributeImpl.SetTermBuffer(String buffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.SetTermBufferStringInt32Int32">
            <summary>设置 TermAttributeImpl.SetTermBuffer(String buffer, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.SetTermLengthInt32">
            <summary>设置 TermAttributeImpl.SetTermLength(Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.Term">
            <summary>设置 TermAttributeImpl.Term() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.TermBuffer">
            <summary>设置 TermAttributeImpl.TermBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.TermLength">
            <summary>设置 TermAttributeImpl.TermLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTermAttributeImpl.AllInstances.ToString01">
            <summary>设置 TermAttributeImpl.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.TypeAttributeImpl 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.#ctor(Lucene.Net.Analysis.Tokenattributes.TypeAttributeImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.Bind(Lucene.Net.Analysis.Tokenattributes.TypeAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.Bind(Lucene.Net.Util.IAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.Clear">
            <summary>设置 TypeAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.Clone">
            <summary>设置 TypeAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.Constructor">
            <summary>设置 TypeAttributeImpl.TypeAttributeImpl() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.ConstructorString">
            <summary>设置 TypeAttributeImpl.TypeAttributeImpl(String type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.CopyToAttributeImpl">
            <summary>设置 TypeAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.EqualsObject">
            <summary>设置 TypeAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.GetHashCode">
            <summary>设置 TypeAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.SetTypeString">
            <summary>设置 TypeAttributeImpl.SetType(String type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.Type">
            <summary>设置 TypeAttributeImpl.Type() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.AllInstances.Clear">
            <summary>设置 TypeAttributeImpl.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.AllInstances.Clone">
            <summary>设置 TypeAttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.AllInstances.CopyToAttributeImpl">
            <summary>设置 TypeAttributeImpl.CopyTo(AttributeImpl target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.AllInstances.EqualsObject">
            <summary>设置 TypeAttributeImpl.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.AllInstances.GetHashCode01">
            <summary>设置 TypeAttributeImpl.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.AllInstances.SetTypeString">
            <summary>设置 TypeAttributeImpl.SetType(String type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.ShimTypeAttributeImpl.AllInstances.Type">
            <summary>设置 TypeAttributeImpl.Type() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttribute">
            <summary>Lucene.Net.Analysis.Tokenattributes.FlagsAttribute 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttribute.#ctor">
            <summary>初始化 type StubFlagsAttribute 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttribute.GetFlags">
            <summary>设置 FlagsAttribute.GetFlags() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttribute.ln::Lucene#Net#Analysis#Tokenattributes#FlagsAttribute#GetFlags">
            <summary>设置 FlagsAttribute.GetFlags() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttribute.ln::Lucene#Net#Analysis#Tokenattributes#FlagsAttribute#SetFlags(System.Int32)">
            <summary>设置 FlagsAttribute.SetFlags(Int32 flags) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttribute.SetFlagsInt32">
            <summary>设置 FlagsAttribute.SetFlags(Int32 flags) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.FlagsAttributeImpl 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.Clear">
            <summary>设置 FlagsAttributeImpl.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.Clear01">
            <summary>设置 FlagsAttributeImpl.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.Clone">
            <summary>设置 FlagsAttributeImpl.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.Clone01">
            <summary>设置 FlagsAttributeImpl.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.CopyTo(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 FlagsAttributeImpl.CopyTo(AttributeImpl target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.CopyToAttributeImpl">
            <summary>设置 FlagsAttributeImpl.CopyTo(AttributeImpl target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.Equals(System.Object)">
            <summary>设置 FlagsAttributeImpl.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.EqualsObject">
            <summary>设置 FlagsAttributeImpl.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.GetFlags">
            <summary>设置 FlagsAttributeImpl.GetFlags() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.GetFlags01">
            <summary>设置 FlagsAttributeImpl.GetFlags() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.GetHashCode">
            <summary>设置 FlagsAttributeImpl.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.GetHashCode01">
            <summary>设置 FlagsAttributeImpl.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.InitializeStub">
            <summary>初始化 type StubFlagsAttributeImpl 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.SetFlags(System.Int32)">
            <summary>设置 FlagsAttributeImpl.SetFlags(Int32 flags) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.SetFlagsInt32">
            <summary>设置 FlagsAttributeImpl.SetFlags(Int32 flags) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.ToString">
            <summary>设置 AttributeImpl.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.ToString01">
            <summary>设置 AttributeImpl.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubFlagsAttributeImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttribute">
            <summary>Lucene.Net.Analysis.Tokenattributes.OffsetAttribute 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttribute.#ctor">
            <summary>初始化 type StubOffsetAttribute 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttribute.EndOffset">
            <summary>设置 OffsetAttribute.EndOffset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttribute.ln::Lucene#Net#Analysis#Tokenattributes#OffsetAttribute#EndOffset">
            <summary>设置 OffsetAttribute.EndOffset() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttribute.ln::Lucene#Net#Analysis#Tokenattributes#OffsetAttribute#SetOffset(System.Int32,System.Int32)">
            <summary>设置 OffsetAttribute.SetOffset(Int32 startOffset, Int32 endOffset) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttribute.ln::Lucene#Net#Analysis#Tokenattributes#OffsetAttribute#StartOffset">
            <summary>设置 OffsetAttribute.StartOffset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttribute.SetOffsetInt32Int32">
            <summary>设置 OffsetAttribute.SetOffset(Int32 startOffset, Int32 endOffset) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttribute.StartOffset">
            <summary>设置 OffsetAttribute.StartOffset() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.OffsetAttributeImpl 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.Clear">
            <summary>设置 OffsetAttributeImpl.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.Clear01">
            <summary>设置 OffsetAttributeImpl.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.Clone">
            <summary>设置 OffsetAttributeImpl.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.Clone01">
            <summary>设置 OffsetAttributeImpl.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.CopyTo(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 OffsetAttributeImpl.CopyTo(AttributeImpl target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.CopyToAttributeImpl">
            <summary>设置 OffsetAttributeImpl.CopyTo(AttributeImpl target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.EndOffset">
            <summary>设置 OffsetAttributeImpl.EndOffset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.EndOffset01">
            <summary>设置 OffsetAttributeImpl.EndOffset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.Equals(System.Object)">
            <summary>设置 OffsetAttributeImpl.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.EqualsObject">
            <summary>设置 OffsetAttributeImpl.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.GetHashCode">
            <summary>设置 OffsetAttributeImpl.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.GetHashCode01">
            <summary>设置 OffsetAttributeImpl.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.InitializeStub">
            <summary>初始化 type StubOffsetAttributeImpl 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.SetOffset(System.Int32,System.Int32)">
            <summary>设置 OffsetAttributeImpl.SetOffset(Int32 startOffset, Int32 endOffset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.SetOffsetInt32Int32">
            <summary>设置 OffsetAttributeImpl.SetOffset(Int32 startOffset, Int32 endOffset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.StartOffset">
            <summary>设置 OffsetAttributeImpl.StartOffset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.StartOffset01">
            <summary>设置 OffsetAttributeImpl.StartOffset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.ToString">
            <summary>设置 AttributeImpl.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.ToString01">
            <summary>设置 AttributeImpl.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubOffsetAttributeImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttribute">
            <summary>Lucene.Net.Analysis.Tokenattributes.PayloadAttribute 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttribute.#ctor">
            <summary>初始化 type StubPayloadAttribute 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttribute.GetPayload">
            <summary>设置 PayloadAttribute.GetPayload() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttribute.ln::Lucene#Net#Analysis#Tokenattributes#PayloadAttribute#GetPayload">
            <summary>设置 PayloadAttribute.GetPayload() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttribute.ln::Lucene#Net#Analysis#Tokenattributes#PayloadAttribute#SetPayload(Lucene.Net.Index.Payload)">
            <summary>设置 PayloadAttribute.SetPayload(Payload payload) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttribute.SetPayloadPayload">
            <summary>设置 PayloadAttribute.SetPayload(Payload payload) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.PayloadAttributeImpl 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.#ctor(Lucene.Net.Index.Payload)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.Clear">
            <summary>设置 PayloadAttributeImpl.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.Clear01">
            <summary>设置 PayloadAttributeImpl.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.Clone">
            <summary>设置 PayloadAttributeImpl.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.Clone01">
            <summary>设置 PayloadAttributeImpl.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.CopyTo(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 PayloadAttributeImpl.CopyTo(AttributeImpl target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.CopyToAttributeImpl">
            <summary>设置 PayloadAttributeImpl.CopyTo(AttributeImpl target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.Equals(System.Object)">
            <summary>设置 PayloadAttributeImpl.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.EqualsObject">
            <summary>设置 PayloadAttributeImpl.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.GetHashCode">
            <summary>设置 PayloadAttributeImpl.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.GetHashCode01">
            <summary>设置 PayloadAttributeImpl.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.GetPayload">
            <summary>设置 PayloadAttributeImpl.GetPayload() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.GetPayload01">
            <summary>设置 PayloadAttributeImpl.GetPayload() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.InitializeStub">
            <summary>初始化 type StubPayloadAttributeImpl 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.SetPayload(Lucene.Net.Index.Payload)">
            <summary>设置 PayloadAttributeImpl.SetPayload(Payload payload) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.SetPayloadPayload">
            <summary>设置 PayloadAttributeImpl.SetPayload(Payload payload) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.ToString">
            <summary>设置 AttributeImpl.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.ToString01">
            <summary>设置 AttributeImpl.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPayloadAttributeImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttribute">
            <summary>Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttribute 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttribute.#ctor">
            <summary>初始化 type StubPositionIncrementAttribute 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttribute.GetPositionIncrement">
            <summary>设置 PositionIncrementAttribute.GetPositionIncrement() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttribute.ln::Lucene#Net#Analysis#Tokenattributes#PositionIncrementAttribute#GetPositionIncrement">
            <summary>设置 PositionIncrementAttribute.GetPositionIncrement() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttribute.ln::Lucene#Net#Analysis#Tokenattributes#PositionIncrementAttribute#SetPositionIncrement(System.Int32)">
            <summary>设置 PositionIncrementAttribute.SetPositionIncrement(Int32 positionIncrement) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttribute.SetPositionIncrementInt32">
            <summary>设置 PositionIncrementAttribute.SetPositionIncrement(Int32 positionIncrement) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.PositionIncrementAttributeImpl 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.Clear">
            <summary>设置 PositionIncrementAttributeImpl.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.Clear01">
            <summary>设置 PositionIncrementAttributeImpl.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.Clone">
            <summary>设置 PositionIncrementAttributeImpl.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.Clone01">
            <summary>设置 PositionIncrementAttributeImpl.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.CopyTo(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 PositionIncrementAttributeImpl.CopyTo(AttributeImpl target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.CopyToAttributeImpl">
            <summary>设置 PositionIncrementAttributeImpl.CopyTo(AttributeImpl target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.Equals(System.Object)">
            <summary>设置 PositionIncrementAttributeImpl.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.EqualsObject">
            <summary>设置 PositionIncrementAttributeImpl.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.GetHashCode">
            <summary>设置 PositionIncrementAttributeImpl.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.GetHashCode01">
            <summary>设置 PositionIncrementAttributeImpl.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.GetPositionIncrement">
            <summary>设置 PositionIncrementAttributeImpl.GetPositionIncrement() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.GetPositionIncrement01">
            <summary>设置 PositionIncrementAttributeImpl.GetPositionIncrement() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.InitializeStub">
            <summary>初始化 type StubPositionIncrementAttributeImpl 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.SetPositionIncrement(System.Int32)">
            <summary>设置 PositionIncrementAttributeImpl.SetPositionIncrement(Int32 positionIncrement) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.SetPositionIncrementInt32">
            <summary>设置 PositionIncrementAttributeImpl.SetPositionIncrement(Int32 positionIncrement) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.ToString">
            <summary>设置 AttributeImpl.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.ToString01">
            <summary>设置 AttributeImpl.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubPositionIncrementAttributeImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute">
            <summary>Lucene.Net.Analysis.Tokenattributes.TermAttribute 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.#ctor">
            <summary>初始化 type StubTermAttribute 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TermAttribute#ResizeTermBuffer(System.Int32)">
            <summary>设置 TermAttribute.ResizeTermBuffer(Int32 newSize) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TermAttribute#SetTermBuffer(System.String)">
            <summary>设置 TermAttribute.SetTermBuffer(String buffer) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TermAttribute#SetTermBuffer(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TermAttribute.SetTermBuffer(Char[] buffer, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TermAttribute#SetTermBuffer(System.String,System.Int32,System.Int32)">
            <summary>设置 TermAttribute.SetTermBuffer(String buffer, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TermAttribute#SetTermLength(System.Int32)">
            <summary>设置 TermAttribute.SetTermLength(Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TermAttribute#Term">
            <summary>设置 TermAttribute.Term() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TermAttribute#TermBuffer">
            <summary>设置 TermAttribute.TermBuffer() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TermAttribute#TermLength">
            <summary>设置 TermAttribute.TermLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.ResizeTermBufferInt32">
            <summary>设置 TermAttribute.ResizeTermBuffer(Int32 newSize) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.SetTermBufferCharArrayInt32Int32">
            <summary>设置 TermAttribute.SetTermBuffer(Char[] buffer, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.SetTermBufferString">
            <summary>设置 TermAttribute.SetTermBuffer(String buffer) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.SetTermBufferStringInt32Int32">
            <summary>设置 TermAttribute.SetTermBuffer(String buffer, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.SetTermLengthInt32">
            <summary>设置 TermAttribute.SetTermLength(Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.Term">
            <summary>设置 TermAttribute.Term() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.TermBuffer">
            <summary>设置 TermAttribute.TermBuffer() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttribute.TermLength">
            <summary>设置 TermAttribute.TermLength() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.TermAttributeImpl 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.Clear">
            <summary>设置 TermAttributeImpl.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.Clear01">
            <summary>设置 TermAttributeImpl.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.Clone">
            <summary>设置 TermAttributeImpl.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.Clone01">
            <summary>设置 TermAttributeImpl.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.CopyTo(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 TermAttributeImpl.CopyTo(AttributeImpl target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.CopyToAttributeImpl">
            <summary>设置 TermAttributeImpl.CopyTo(AttributeImpl target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.Equals(System.Object)">
            <summary>设置 TermAttributeImpl.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.EqualsObject">
            <summary>设置 TermAttributeImpl.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.GetHashCode">
            <summary>设置 TermAttributeImpl.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.GetHashCode01">
            <summary>设置 TermAttributeImpl.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.InitializeStub">
            <summary>初始化 type StubTermAttributeImpl 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.ResizeTermBuffer(System.Int32)">
            <summary>设置 TermAttributeImpl.ResizeTermBuffer(Int32 newSize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.ResizeTermBufferInt32">
            <summary>设置 TermAttributeImpl.ResizeTermBuffer(Int32 newSize) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.SetTermBuffer(System.String)">
            <summary>设置 TermAttributeImpl.SetTermBuffer(String buffer) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.SetTermBuffer(System.String,System.Int32,System.Int32)">
            <summary>设置 TermAttributeImpl.SetTermBuffer(String buffer, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.SetTermBuffer(System.Char[],System.Int32,System.Int32)">
            <summary>设置 TermAttributeImpl.SetTermBuffer(Char[] buffer, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.SetTermBufferCharArrayInt32Int32">
            <summary>设置 TermAttributeImpl.SetTermBuffer(Char[] buffer, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.SetTermBufferString">
            <summary>设置 TermAttributeImpl.SetTermBuffer(String buffer) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.SetTermBufferStringInt32Int32">
            <summary>设置 TermAttributeImpl.SetTermBuffer(String buffer, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.SetTermLength(System.Int32)">
            <summary>设置 TermAttributeImpl.SetTermLength(Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.SetTermLengthInt32">
            <summary>设置 TermAttributeImpl.SetTermLength(Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.Term">
            <summary>设置 TermAttributeImpl.Term() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.Term01">
            <summary>设置 TermAttributeImpl.Term() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.TermBuffer">
            <summary>设置 TermAttributeImpl.TermBuffer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.TermBuffer01">
            <summary>设置 TermAttributeImpl.TermBuffer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.TermLength">
            <summary>设置 TermAttributeImpl.TermLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.TermLength01">
            <summary>设置 TermAttributeImpl.TermLength() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.ToString">
            <summary>设置 TermAttributeImpl.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.ToString01">
            <summary>设置 TermAttributeImpl.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTermAttributeImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttribute">
            <summary>Lucene.Net.Analysis.Tokenattributes.TypeAttribute 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttribute.#ctor">
            <summary>初始化 type StubTypeAttribute 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TypeAttribute#SetType(System.String)">
            <summary>设置 TypeAttribute.SetType(String type) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttribute.ln::Lucene#Net#Analysis#Tokenattributes#TypeAttribute#Type">
            <summary>设置 TypeAttribute.Type() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttribute.SetTypeString">
            <summary>设置 TypeAttribute.SetType(String type) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttribute.Type">
            <summary>设置 TypeAttribute.Type() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl">
            <summary>Lucene.Net.Analysis.Tokenattributes.TypeAttributeImpl 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.Clear">
            <summary>设置 TypeAttributeImpl.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.Clear01">
            <summary>设置 TypeAttributeImpl.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.Clone">
            <summary>设置 TypeAttributeImpl.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.Clone01">
            <summary>设置 TypeAttributeImpl.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.CopyTo(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 TypeAttributeImpl.CopyTo(AttributeImpl target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.CopyToAttributeImpl">
            <summary>设置 TypeAttributeImpl.CopyTo(AttributeImpl target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.Equals(System.Object)">
            <summary>设置 TypeAttributeImpl.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.EqualsObject">
            <summary>设置 TypeAttributeImpl.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.GetHashCode">
            <summary>设置 TypeAttributeImpl.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.GetHashCode01">
            <summary>设置 TypeAttributeImpl.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.InitializeStub">
            <summary>初始化 type StubTypeAttributeImpl 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.SetType(System.String)">
            <summary>设置 TypeAttributeImpl.SetType(String type) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.SetTypeString">
            <summary>设置 TypeAttributeImpl.SetType(String type) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.ToString">
            <summary>设置 AttributeImpl.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.ToString01">
            <summary>设置 AttributeImpl.ToString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.Type">
            <summary>设置 TypeAttributeImpl.Type() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.Type01">
            <summary>设置 TypeAttributeImpl.Type() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Analysis.Tokenattributes.Fakes.StubTypeAttributeImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimAbstractField">
            <summary>Lucene.Net.Documents.AbstractField 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimAbstractField.#ctor(Lucene.Net.Documents.AbstractField)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimAbstractField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimAbstractField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimAbstractField.Bind(Lucene.Net.Documents.Fieldable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.Constructor">
            <summary>设置 AbstractField.AbstractField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.ConstructorStringFieldStoreFieldIndexFieldTermVector">
            <summary>设置 AbstractField.AbstractField(String name, Store store, Index index, TermVector termVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.GetBinaryLength">
            <summary>设置 AbstractField.GetBinaryLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.GetBinaryOffset">
            <summary>设置 AbstractField.GetBinaryOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.GetBinaryValue">
            <summary>设置 AbstractField.GetBinaryValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.GetBinaryValueByteArray">
            <summary>设置 AbstractField.GetBinaryValue(Byte[] result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.GetBoost">
            <summary>设置 AbstractField.GetBoost() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.GetOmitNorms">
            <summary>设置 AbstractField.GetOmitNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.GetOmitTermFreqAndPositions">
            <summary>设置 AbstractField.GetOmitTermFreqAndPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.GetOmitTf">
            <summary>设置 AbstractField.GetOmitTf() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsBinary">
            <summary>设置 AbstractField.IsBinary() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsCompressed">
            <summary>设置 AbstractField.IsCompressed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsIndexed">
            <summary>设置 AbstractField.IsIndexed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsLazy">
            <summary>设置 AbstractField.IsLazy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsStoreOffsetWithTermVector">
            <summary>设置 AbstractField.IsStoreOffsetWithTermVector() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsStorePositionWithTermVector">
            <summary>设置 AbstractField.IsStorePositionWithTermVector() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsStored">
            <summary>设置 AbstractField.IsStored() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsTermVectorStored">
            <summary>设置 AbstractField.IsTermVectorStored() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.IsTokenized">
            <summary>设置 AbstractField.IsTokenized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.Name">
            <summary>设置 AbstractField.Name() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.SetBoostSingle">
            <summary>设置 AbstractField.SetBoost(Single boost) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.SetOmitNormsBoolean">
            <summary>设置 AbstractField.SetOmitNorms(Boolean omitNorms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.SetOmitTermFreqAndPositionsBoolean">
            <summary>设置 AbstractField.SetOmitTermFreqAndPositions(Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.SetOmitTfBoolean">
            <summary>设置 AbstractField.SetOmitTf(Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.SetStoreTermVectorFieldTermVector">
            <summary>设置 AbstractField.SetStoreTermVector(TermVector termVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.ToString">
            <summary>设置 AbstractField.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.GetBinaryLength">
            <summary>设置 AbstractField.GetBinaryLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.GetBinaryOffset">
            <summary>设置 AbstractField.GetBinaryOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.GetBinaryValue">
            <summary>设置 AbstractField.GetBinaryValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.GetBinaryValueByteArray">
            <summary>设置 AbstractField.GetBinaryValue(Byte[] result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.GetBoost">
            <summary>设置 AbstractField.GetBoost() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.GetOmitNorms">
            <summary>设置 AbstractField.GetOmitNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.GetOmitTermFreqAndPositions">
            <summary>设置 AbstractField.GetOmitTermFreqAndPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.GetOmitTf">
            <summary>设置 AbstractField.GetOmitTf() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsBinary">
            <summary>设置 AbstractField.IsBinary() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsCompressed">
            <summary>设置 AbstractField.IsCompressed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsIndexed">
            <summary>设置 AbstractField.IsIndexed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsLazy">
            <summary>设置 AbstractField.IsLazy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsStoreOffsetWithTermVector">
            <summary>设置 AbstractField.IsStoreOffsetWithTermVector() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsStorePositionWithTermVector">
            <summary>设置 AbstractField.IsStorePositionWithTermVector() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsStored">
            <summary>设置 AbstractField.IsStored() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsTermVectorStored">
            <summary>设置 AbstractField.IsTermVectorStored() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.IsTokenized">
            <summary>设置 AbstractField.IsTokenized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.Name">
            <summary>设置 AbstractField.Name() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.SetBoostSingle">
            <summary>设置 AbstractField.SetBoost(Single boost) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.SetOmitNormsBoolean">
            <summary>设置 AbstractField.SetOmitNorms(Boolean omitNorms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.SetOmitTermFreqAndPositionsBoolean">
            <summary>设置 AbstractField.SetOmitTermFreqAndPositions(Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.SetOmitTfBoolean">
            <summary>设置 AbstractField.SetOmitTf(Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.SetStoreTermVectorFieldTermVector">
            <summary>设置 AbstractField.SetStoreTermVector(TermVector termVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimAbstractField.AllInstances.ToString01">
            <summary>设置 AbstractField.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimCompressionTools">
            <summary>Lucene.Net.Documents.CompressionTools 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimCompressionTools.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimCompressionTools.#ctor(Lucene.Net.Documents.CompressionTools)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimCompressionTools.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimCompressionTools.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.CompressByteArray">
            <summary>设置 CompressionTools.Compress(Byte[] value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.CompressByteArrayInt32Int32">
            <summary>设置 CompressionTools.Compress(Byte[] value_Renamed, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.CompressByteArrayInt32Int32Int32">
            <summary>设置 CompressionTools.Compress(Byte[] value_Renamed, Int32 offset, Int32 length, Int32 compressionLevel) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.CompressStringString">
            <summary>设置 CompressionTools.CompressString(String value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.CompressStringStringInt32">
            <summary>设置 CompressionTools.CompressString(String value_Renamed, Int32 compressionLevel) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.Constructor">
            <summary>设置 CompressionTools.CompressionTools() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.DecompressByteArray">
            <summary>设置 CompressionTools.Decompress(Byte[] value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimCompressionTools.DecompressStringByteArray">
            <summary>设置 CompressionTools.DecompressString(Byte[] value_Renamed) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimCompressionTools.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimDateTools">
            <summary>Lucene.Net.Documents.DateTools 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDateTools.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDateTools.#ctor(Lucene.Net.Documents.DateTools)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDateTools.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDateTools.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.Constructor">
            <summary>设置 DateTools.DateTools() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.DateToStringDateTimeDateToolsResolution">
            <summary>设置 DateTools.DateToString(DateTime date, Resolution resolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.RoundDateTimeDateToolsResolution">
            <summary>设置 DateTools.Round(DateTime date, Resolution resolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.RoundInt64DateToolsResolution">
            <summary>设置 DateTools.Round(Int64 time, Resolution resolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.StaticConstructor">
            <summary>设置 DateTools.DateTools() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.StringToDateString">
            <summary>设置 DateTools.StringToDate(String dateString) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.StringToTimeString">
            <summary>设置 DateTools.StringToTime(String dateString) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.TimeToStringInt64DateToolsResolution">
            <summary>设置 DateTools.TimeToString(Int64 time, Resolution resolution) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimDateTools.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution">
            <summary>Lucene.Net.Documents.DateTools+Resolution 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.#ctor(Lucene.Net.Documents.DateTools.Resolution)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.Constructor">
            <summary>设置 Resolution.Resolution() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.ConstructorString">
            <summary>设置 Resolution.Resolution(String resolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.StaticConstructor">
            <summary>设置 Resolution.Resolution() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.ToString">
            <summary>设置 Resolution.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDateTools.ShimResolution.AllInstances.ToString01">
            <summary>设置 Resolution.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimDocument">
            <summary>Lucene.Net.Documents.Document 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDocument.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDocument.#ctor(Lucene.Net.Documents.Document)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDocument.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimDocument.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AddFieldable">
            <summary>设置 Document.Add(Fieldable field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.Constructor">
            <summary>设置 Document.Document() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.Fields">
            <summary>设置 Document.Fields() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetBinaryValueString">
            <summary>设置 Document.GetBinaryValue(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetBinaryValuesString">
            <summary>设置 Document.GetBinaryValues(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetBoost">
            <summary>设置 Document.GetBoost() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetFieldString">
            <summary>设置 Document.GetField(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetFieldableString">
            <summary>设置 Document.GetFieldable(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetFieldablesString">
            <summary>设置 Document.GetFieldables(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetFields">
            <summary>设置 Document.GetFields() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetFieldsString">
            <summary>设置 Document.GetFields(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetString">
            <summary>设置 Document.Get(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.GetValuesString">
            <summary>设置 Document.GetValues(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.RemoveFieldString">
            <summary>设置 Document.RemoveField(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.RemoveFieldsString">
            <summary>设置 Document.RemoveFields(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.SetBoostSingle">
            <summary>设置 Document.SetBoost(Single boost) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.StaticConstructor">
            <summary>设置 Document.Document() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.ToString">
            <summary>设置 Document.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.fields_ForNUnitGet">
            <summary>设置 Document.get_fields_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.AddFieldable">
            <summary>设置 Document.Add(Fieldable field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.Fields">
            <summary>设置 Document.Fields() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetBinaryValueString">
            <summary>设置 Document.GetBinaryValue(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetBinaryValuesString">
            <summary>设置 Document.GetBinaryValues(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetBoost">
            <summary>设置 Document.GetBoost() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetFieldString">
            <summary>设置 Document.GetField(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetFieldableString">
            <summary>设置 Document.GetFieldable(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetFieldablesString">
            <summary>设置 Document.GetFieldables(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetFields">
            <summary>设置 Document.GetFields() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetFieldsString">
            <summary>设置 Document.GetFields(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetString">
            <summary>设置 Document.Get(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.GetValuesString">
            <summary>设置 Document.GetValues(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.RemoveFieldString">
            <summary>设置 Document.RemoveField(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.RemoveFieldsString">
            <summary>设置 Document.RemoveFields(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.SetBoostSingle">
            <summary>设置 Document.SetBoost(Single boost) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.ToString01">
            <summary>设置 Document.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimDocument.AllInstances.fields_ForNUnitGet">
            <summary>设置 Document.get_fields_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimField">
            <summary>Lucene.Net.Documents.Field 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.#ctor(Lucene.Net.Documents.Field)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.Bind(Lucene.Net.Documents.Fieldable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.BinaryValue">
            <summary>设置 Field.BinaryValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringBooleanStringFieldStoreFieldIndexFieldTermVector">
            <summary>设置 Field.Field(String name, Boolean internName, String value_Renamed, Store store, Index index, TermVector termVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringByteArrayFieldStore">
            <summary>设置 Field.Field(String name, Byte[] value_Renamed, Store store) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringByteArrayInt32Int32FieldStore">
            <summary>设置 Field.Field(String name, Byte[] value_Renamed, Int32 offset, Int32 length, Store store) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringStringFieldStoreFieldIndex">
            <summary>设置 Field.Field(String name, String value_Renamed, Store store, Index index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringStringFieldStoreFieldIndexFieldTermVector">
            <summary>设置 Field.Field(String name, String value_Renamed, Store store, Index index, TermVector termVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringTextReader">
            <summary>设置 Field.Field(String name, TextReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringTextReaderFieldTermVector">
            <summary>设置 Field.Field(String name, TextReader reader, TermVector termVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringTokenStream">
            <summary>设置 Field.Field(String name, TokenStream tokenStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ConstructorStringTokenStreamFieldTermVector">
            <summary>设置 Field.Field(String name, TokenStream tokenStream, TermVector termVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ReaderValue">
            <summary>设置 Field.ReaderValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.SetTokenStreamTokenStream">
            <summary>设置 Field.SetTokenStream(TokenStream tokenStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.SetValueByteArray">
            <summary>设置 Field.SetValue(Byte[] value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.SetValueByteArrayInt32Int32">
            <summary>设置 Field.SetValue(Byte[] value_Renamed, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.SetValueString">
            <summary>设置 Field.SetValue(String value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.SetValueTextReader">
            <summary>设置 Field.SetValue(TextReader value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.SetValueTokenStream">
            <summary>设置 Field.SetValue(TokenStream value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.StringValue">
            <summary>设置 Field.StringValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.TokenStreamValue">
            <summary>设置 Field.TokenStreamValue() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.BinaryValue">
            <summary>设置 Field.BinaryValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.ReaderValue">
            <summary>设置 Field.ReaderValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.SetTokenStreamTokenStream">
            <summary>设置 Field.SetTokenStream(TokenStream tokenStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.SetValueByteArray">
            <summary>设置 Field.SetValue(Byte[] value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.SetValueByteArrayInt32Int32">
            <summary>设置 Field.SetValue(Byte[] value_Renamed, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.SetValueString">
            <summary>设置 Field.SetValue(String value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.SetValueTextReader">
            <summary>设置 Field.SetValue(TextReader value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.SetValueTokenStream">
            <summary>设置 Field.SetValue(TokenStream value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.StringValue">
            <summary>设置 Field.StringValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.AllInstances.TokenStreamValue">
            <summary>设置 Field.TokenStreamValue() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimField.ShimIndex">
            <summary>Lucene.Net.Documents.Field+Index 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimIndex.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimIndex.#ctor(Lucene.Net.Documents.Field.Index)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimIndex.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimIndex.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimIndex.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimIndex.ConstructorString">
            <summary>设置 Index.Index(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimIndex.StaticConstructor">
            <summary>设置 Index.Index() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimField.ShimIndex.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimField.ShimStore">
            <summary>Lucene.Net.Documents.Field+Store 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimStore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimStore.#ctor(Lucene.Net.Documents.Field.Store)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimStore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimStore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimStore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimStore.ConstructorString">
            <summary>设置 Store.Store(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimStore.StaticConstructor">
            <summary>设置 Store.Store() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimField.ShimStore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector">
            <summary>Lucene.Net.Documents.Field+TermVector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector.#ctor(Lucene.Net.Documents.Field.TermVector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector.ConstructorString">
            <summary>设置 TermVector.TermVector(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector.StaticConstructor">
            <summary>设置 TermVector.TermVector() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimField.ShimTermVector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector">
            <summary>Lucene.Net.Documents.LoadFirstFieldSelector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.#ctor(Lucene.Net.Documents.LoadFirstFieldSelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.Bind(Lucene.Net.Documents.FieldSelector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.AcceptString">
            <summary>设置 LoadFirstFieldSelector.Accept(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.Constructor">
            <summary>设置 LoadFirstFieldSelector.LoadFirstFieldSelector() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimLoadFirstFieldSelector.AllInstances.AcceptString">
            <summary>设置 LoadFirstFieldSelector.Accept(String fieldName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimMapFieldSelector">
            <summary>Lucene.Net.Documents.MapFieldSelector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.#ctor(Lucene.Net.Documents.MapFieldSelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.Bind(Lucene.Net.Documents.FieldSelector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.AcceptString">
            <summary>设置 MapFieldSelector.Accept(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.ConstructorDictionaryOfStringFieldSelectorResult">
            <summary>设置 MapFieldSelector.MapFieldSelector(Dictionary`2&lt;String,FieldSelectorResult&gt; fieldSelections) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.ConstructorIListOfString">
            <summary>设置 MapFieldSelector.MapFieldSelector(IList`1&lt;String&gt; fields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.ConstructorStringArray">
            <summary>设置 MapFieldSelector.MapFieldSelector(String[] fields) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimMapFieldSelector.AllInstances.AcceptString">
            <summary>设置 MapFieldSelector.Accept(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimNumericField">
            <summary>Lucene.Net.Documents.NumericField 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimNumericField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimNumericField.#ctor(Lucene.Net.Documents.NumericField)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimNumericField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimNumericField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimNumericField.Bind(Lucene.Net.Documents.Fieldable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.BinaryValue">
            <summary>设置 NumericField.BinaryValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.ConstructorString">
            <summary>设置 NumericField.NumericField(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.ConstructorStringFieldStoreBoolean">
            <summary>设置 NumericField.NumericField(String name, Store store, Boolean index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.ConstructorStringInt32">
            <summary>设置 NumericField.NumericField(String name, Int32 precisionStep) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.ConstructorStringInt32FieldStoreBoolean">
            <summary>设置 NumericField.NumericField(String name, Int32 precisionStep, Store store, Boolean index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.GetBinaryValueByteArray">
            <summary>设置 NumericField.GetBinaryValue(Byte[] result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.GetNumericValue">
            <summary>设置 NumericField.GetNumericValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.ReaderValue">
            <summary>设置 NumericField.ReaderValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.SetDoubleValueDouble">
            <summary>设置 NumericField.SetDoubleValue(Double value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.SetFloatValueSingle">
            <summary>设置 NumericField.SetFloatValue(Single value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.SetIntValueInt32">
            <summary>设置 NumericField.SetIntValue(Int32 value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.SetLongValueInt64">
            <summary>设置 NumericField.SetLongValue(Int64 value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.StringValue">
            <summary>设置 NumericField.StringValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.TokenStreamValue">
            <summary>设置 NumericField.TokenStreamValue() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.BinaryValue">
            <summary>设置 NumericField.BinaryValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.GetBinaryValueByteArray">
            <summary>设置 NumericField.GetBinaryValue(Byte[] result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.GetNumericValue">
            <summary>设置 NumericField.GetNumericValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.ReaderValue">
            <summary>设置 NumericField.ReaderValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.SetDoubleValueDouble">
            <summary>设置 NumericField.SetDoubleValue(Double value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.SetFloatValueSingle">
            <summary>设置 NumericField.SetFloatValue(Single value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.SetIntValueInt32">
            <summary>设置 NumericField.SetIntValue(Int32 value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.SetLongValueInt64">
            <summary>设置 NumericField.SetLongValue(Int64 value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.StringValue">
            <summary>设置 NumericField.StringValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimNumericField.AllInstances.TokenStreamValue">
            <summary>设置 NumericField.TokenStreamValue() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector">
            <summary>Lucene.Net.Documents.SetBasedFieldSelector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.#ctor(Lucene.Net.Documents.SetBasedFieldSelector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.Bind(Lucene.Net.Documents.FieldSelector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.AcceptString">
            <summary>设置 SetBasedFieldSelector.Accept(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.ConstructorSetOfStringSetOfString">
            <summary>设置 SetBasedFieldSelector.SetBasedFieldSelector(Set`1&lt;String&gt; fieldsToLoad, Set`1&lt;String&gt; lazyFieldsToLoad) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.ShimSetBasedFieldSelector.AllInstances.AcceptString">
            <summary>设置 SetBasedFieldSelector.Accept(String fieldName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.StubFieldSelector">
            <summary>Lucene.Net.Documents.FieldSelector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubFieldSelector.#ctor">
            <summary>初始化 type StubFieldSelector 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Documents.Fakes.StubFieldSelector.AcceptString">
            <summary>设置 FieldSelector.Accept(String fieldName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubFieldSelector.ln::Lucene#Net#Documents#FieldSelector#Accept(System.String)">
            <summary>设置 FieldSelector.Accept(String fieldName) 的 存根</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.StubLoadFirstFieldSelector">
            <summary>Lucene.Net.Documents.LoadFirstFieldSelector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubLoadFirstFieldSelector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubLoadFirstFieldSelector.Accept(System.String)">
            <summary>设置 LoadFirstFieldSelector.Accept(String fieldName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Documents.Fakes.StubLoadFirstFieldSelector.AcceptString">
            <summary>设置 LoadFirstFieldSelector.Accept(String fieldName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubLoadFirstFieldSelector.InitializeStub">
            <summary>初始化 type StubLoadFirstFieldSelector 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubLoadFirstFieldSelector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubLoadFirstFieldSelector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubLoadFirstFieldSelector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.StubMapFieldSelector">
            <summary>Lucene.Net.Documents.MapFieldSelector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubMapFieldSelector.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubMapFieldSelector.#ctor(System.Collections.Generic.Dictionary{System.String,Lucene.Net.Documents.FieldSelectorResult})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubMapFieldSelector.#ctor(System.String[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubMapFieldSelector.Accept(System.String)">
            <summary>设置 MapFieldSelector.Accept(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Documents.Fakes.StubMapFieldSelector.AcceptString">
            <summary>设置 MapFieldSelector.Accept(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubMapFieldSelector.InitializeStub">
            <summary>初始化 type StubMapFieldSelector 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubMapFieldSelector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubMapFieldSelector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubMapFieldSelector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Documents.Fakes.StubSetBasedFieldSelector">
            <summary>Lucene.Net.Documents.SetBasedFieldSelector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubSetBasedFieldSelector.#ctor(Lucene.Net.Support.Set{System.String},Lucene.Net.Support.Set{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubSetBasedFieldSelector.Accept(System.String)">
            <summary>设置 SetBasedFieldSelector.Accept(String fieldName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Documents.Fakes.StubSetBasedFieldSelector.AcceptString">
            <summary>设置 SetBasedFieldSelector.Accept(String fieldName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Documents.Fakes.StubSetBasedFieldSelector.InitializeStub">
            <summary>初始化 type StubSetBasedFieldSelector 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubSetBasedFieldSelector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubSetBasedFieldSelector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Documents.Fakes.StubSetBasedFieldSelector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3">
            <summary>Lucene.Net.CorruptionCheckerForPreLucene3 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3.#ctor(Lucene.Net.CorruptionCheckerForPreLucene3)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3.CheckLastCommitOkFSDirectory">
            <summary>设置 CorruptionCheckerForPreLucene3.CheckLastCommitOk(FSDirectory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3.Constructor">
            <summary>设置 CorruptionCheckerForPreLucene3.CorruptionCheckerForPreLucene3() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Fakes.ShimCorruptionCheckerForPreLucene3.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Fakes.StubCorruptionCheckerForPreLucene3">
            <summary>Lucene.Net.CorruptionCheckerForPreLucene3 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Fakes.StubCorruptionCheckerForPreLucene3.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Fakes.StubCorruptionCheckerForPreLucene3.InitializeStub">
            <summary>初始化 type StubCorruptionCheckerForPreLucene3 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Fakes.StubCorruptionCheckerForPreLucene3.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Fakes.StubCorruptionCheckerForPreLucene3.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Fakes.StubCorruptionCheckerForPreLucene3.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs">
            <summary>Lucene.Net.Index.AbstractAllTermDocs 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.#ctor(Lucene.Net.Index.AbstractAllTermDocs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.Bind(Lucene.Net.Index.TermDocs)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.Close">
            <summary>设置 AbstractAllTermDocs.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.ConstructorInt32">
            <summary>设置 AbstractAllTermDocs.AbstractAllTermDocs(Int32 maxDoc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.Doc">
            <summary>设置 AbstractAllTermDocs.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.Freq">
            <summary>设置 AbstractAllTermDocs.Freq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.Next">
            <summary>设置 AbstractAllTermDocs.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.ReadInt32ArrayInt32Array">
            <summary>设置 AbstractAllTermDocs.Read(Int32[] docs, Int32[] freqs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.SeekTerm">
            <summary>设置 AbstractAllTermDocs.Seek(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.SeekTermEnum">
            <summary>设置 AbstractAllTermDocs.Seek(TermEnum termEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.SkipToInt32">
            <summary>设置 AbstractAllTermDocs.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances.Close">
            <summary>设置 AbstractAllTermDocs.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances.Doc">
            <summary>设置 AbstractAllTermDocs.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances.Freq">
            <summary>设置 AbstractAllTermDocs.Freq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances.Next">
            <summary>设置 AbstractAllTermDocs.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances.ReadInt32ArrayInt32Array">
            <summary>设置 AbstractAllTermDocs.Read(Int32[] docs, Int32[] freqs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances.SeekTerm">
            <summary>设置 AbstractAllTermDocs.Seek(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances.SeekTermEnum">
            <summary>设置 AbstractAllTermDocs.Seek(TermEnum termEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimAbstractAllTermDocs.AllInstances.SkipToInt32">
            <summary>设置 AbstractAllTermDocs.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimByteBlockPool">
            <summary>Lucene.Net.Index.ByteBlockPool 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteBlockPool.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteBlockPool.#ctor(Lucene.Net.Index.ByteBlockPool)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteBlockPool.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteBlockPool.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.AllocSliceByteArrayInt32">
            <summary>设置 ByteBlockPool.AllocSlice(Byte[] slice, Int32 upto) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.ConstructorByteBlockPoolAllocatorBoolean">
            <summary>设置 ByteBlockPool.ByteBlockPool(Allocator allocator, Boolean trackAllocations) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.FIRST_LEVEL_SIZE_ForNUnitGet">
            <summary>设置 ByteBlockPool.get_FIRST_LEVEL_SIZE_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.InitBlock">
            <summary>设置 ByteBlockPool.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.NewSliceInt32">
            <summary>设置 ByteBlockPool.NewSlice(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.NextBuffer">
            <summary>设置 ByteBlockPool.NextBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.Reset">
            <summary>设置 ByteBlockPool.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.StaticConstructor">
            <summary>设置 ByteBlockPool.ByteBlockPool() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimByteBlockPool.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.AllInstances.AllocSliceByteArrayInt32">
            <summary>设置 ByteBlockPool.AllocSlice(Byte[] slice, Int32 upto) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.AllInstances.InitBlock">
            <summary>设置 ByteBlockPool.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.AllInstances.NewSliceInt32">
            <summary>设置 ByteBlockPool.NewSlice(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.AllInstances.NextBuffer">
            <summary>设置 ByteBlockPool.NextBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.AllInstances.Reset">
            <summary>设置 ByteBlockPool.Reset() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimByteBlockPool.ShimAllocator">
            <summary>Lucene.Net.Index.ByteBlockPool+Allocator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteBlockPool.ShimAllocator.#ctor(Lucene.Net.Index.ByteBlockPool.Allocator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteBlockPool.ShimAllocator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteBlockPool.ShimAllocator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.ShimAllocator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteBlockPool.ShimAllocator.Constructor">
            <summary>设置 Allocator.Allocator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimByteBlockPool.ShimAllocator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimByteSliceReader">
            <summary>Lucene.Net.Index.ByteSliceReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceReader.#ctor(Lucene.Net.Index.ByteSliceReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.Clone">
            <summary>设置 ByteSliceReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.Close">
            <summary>设置 ByteSliceReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.Constructor">
            <summary>设置 ByteSliceReader.ByteSliceReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.Eof">
            <summary>设置 ByteSliceReader.Eof() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.GetFilePointer">
            <summary>设置 ByteSliceReader.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.InitByteBlockPoolInt32Int32">
            <summary>设置 ByteSliceReader.Init(ByteBlockPool pool, Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.Length">
            <summary>设置 ByteSliceReader.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.NextSlice">
            <summary>设置 ByteSliceReader.NextSlice() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.ReadByte">
            <summary>设置 ByteSliceReader.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.ReadBytesByteArrayInt32Int32">
            <summary>设置 ByteSliceReader.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.SeekInt64">
            <summary>设置 ByteSliceReader.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.WriteToIndexOutput">
            <summary>设置 ByteSliceReader.WriteTo(IndexOutput out_Renamed) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.Clone">
            <summary>设置 ByteSliceReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.Close">
            <summary>设置 ByteSliceReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.Eof">
            <summary>设置 ByteSliceReader.Eof() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.GetFilePointer">
            <summary>设置 ByteSliceReader.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.InitByteBlockPoolInt32Int32">
            <summary>设置 ByteSliceReader.Init(ByteBlockPool pool, Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.Length">
            <summary>设置 ByteSliceReader.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.NextSlice">
            <summary>设置 ByteSliceReader.NextSlice() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.ReadByte">
            <summary>设置 ByteSliceReader.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.ReadBytesByteArrayInt32Int32">
            <summary>设置 ByteSliceReader.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.SeekInt64">
            <summary>设置 ByteSliceReader.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceReader.AllInstances.WriteToIndexOutput">
            <summary>设置 ByteSliceReader.WriteTo(IndexOutput out_Renamed) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimByteSliceWriter">
            <summary>Lucene.Net.Index.ByteSliceWriter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceWriter.#ctor(Lucene.Net.Index.ByteSliceWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimByteSliceWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.ConstructorByteBlockPool">
            <summary>设置 ByteSliceWriter.ByteSliceWriter(ByteBlockPool pool) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.GetAddress">
            <summary>设置 ByteSliceWriter.GetAddress() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.InitInt32">
            <summary>设置 ByteSliceWriter.Init(Int32 address) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.WriteByteByte">
            <summary>设置 ByteSliceWriter.WriteByte(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.WriteBytesByteArrayInt32Int32">
            <summary>设置 ByteSliceWriter.WriteBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.WriteVIntInt32">
            <summary>设置 ByteSliceWriter.WriteVInt(Int32 i) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimByteSliceWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.AllInstances.GetAddress">
            <summary>设置 ByteSliceWriter.GetAddress() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.AllInstances.InitInt32">
            <summary>设置 ByteSliceWriter.Init(Int32 address) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.AllInstances.WriteByteByte">
            <summary>设置 ByteSliceWriter.WriteByte(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.AllInstances.WriteBytesByteArrayInt32Int32">
            <summary>设置 ByteSliceWriter.WriteBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimByteSliceWriter.AllInstances.WriteVIntInt32">
            <summary>设置 ByteSliceWriter.WriteVInt(Int32 i) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex">
            <summary>Lucene.Net.Index.CheckIndex 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.#ctor(Lucene.Net.Index.CheckIndex)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.AssertsOn">
            <summary>设置 CheckIndex.AssertsOn() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.CheckDirectoryBoolean">
            <summary>设置 CheckIndex.Check(Directory dir, Boolean doFix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.CheckDirectoryBooleanIListOfString">
            <summary>设置 CheckIndex.Check(Directory dir, Boolean doFix, IList`1&lt;String&gt; onlySegments) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.CheckIndex_Renamed_Method">
            <summary>设置 CheckIndex.CheckIndex_Renamed_Method() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.CheckIndex_Renamed_MethodIListOfString">
            <summary>设置 CheckIndex.CheckIndex_Renamed_Method(IList`1&lt;String&gt; onlySegments) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ConstructorDirectory">
            <summary>设置 CheckIndex.CheckIndex(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.FixIndexCheckIndexStatus">
            <summary>设置 CheckIndex.FixIndex(Status result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.MainStringArray">
            <summary>设置 CheckIndex.Main(String[] args) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.MsgString">
            <summary>设置 CheckIndex.Msg(String msg) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.SetInfoStreamStreamWriter">
            <summary>设置 CheckIndex.SetInfoStream(StreamWriter out_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.StaticConstructor">
            <summary>设置 CheckIndex.CheckIndex() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.TestAsserts">
            <summary>设置 CheckIndex.TestAsserts() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.TestFieldNormsICollectionOfStringSegmentReader">
            <summary>设置 CheckIndex.TestFieldNorms(ICollection`1&lt;String&gt; fieldNames, SegmentReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.TestTermIndexSegmentInfoSegmentReader">
            <summary>设置 CheckIndex.TestTermIndex(SegmentInfo info, SegmentReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.AllInstances.CheckIndex_Renamed_Method">
            <summary>设置 CheckIndex.CheckIndex_Renamed_Method() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.AllInstances.CheckIndex_Renamed_MethodIListOfString">
            <summary>设置 CheckIndex.CheckIndex_Renamed_Method(IList`1&lt;String&gt; onlySegments) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.AllInstances.FixIndexCheckIndexStatus">
            <summary>设置 CheckIndex.FixIndex(Status result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.AllInstances.MsgString">
            <summary>设置 CheckIndex.Msg(String msg) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.AllInstances.SetInfoStreamStreamWriter">
            <summary>设置 CheckIndex.SetInfoStream(StreamWriter out_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.AllInstances.TestFieldNormsICollectionOfStringSegmentReader">
            <summary>设置 CheckIndex.TestFieldNorms(ICollection`1&lt;String&gt; fieldNames, SegmentReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.AllInstances.TestTermIndexSegmentInfoSegmentReader">
            <summary>设置 CheckIndex.TestTermIndex(SegmentInfo info, SegmentReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus">
            <summary>Lucene.Net.Index.CheckIndex+Status 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.#ctor(Lucene.Net.Index.CheckIndex.Status)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.Constructor">
            <summary>设置 Status.Status() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimFieldNormStatus">
            <summary>Lucene.Net.Index.CheckIndex+Status+FieldNormStatus 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimFieldNormStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimFieldNormStatus.#ctor(Lucene.Net.Index.CheckIndex.Status.FieldNormStatus)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimFieldNormStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimFieldNormStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimFieldNormStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimFieldNormStatus.Constructor">
            <summary>设置 FieldNormStatus.FieldNormStatus() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimFieldNormStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimSegmentInfoStatus">
            <summary>Lucene.Net.Index.CheckIndex+Status+SegmentInfoStatus 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimSegmentInfoStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimSegmentInfoStatus.#ctor(Lucene.Net.Index.CheckIndex.Status.SegmentInfoStatus)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimSegmentInfoStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimSegmentInfoStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimSegmentInfoStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimSegmentInfoStatus.Constructor">
            <summary>设置 SegmentInfoStatus.SegmentInfoStatus() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimSegmentInfoStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimStoredFieldStatus">
            <summary>Lucene.Net.Index.CheckIndex+Status+StoredFieldStatus 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimStoredFieldStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimStoredFieldStatus.#ctor(Lucene.Net.Index.CheckIndex.Status.StoredFieldStatus)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimStoredFieldStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimStoredFieldStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimStoredFieldStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimStoredFieldStatus.Constructor">
            <summary>设置 StoredFieldStatus.StoredFieldStatus() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimStoredFieldStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermIndexStatus">
            <summary>Lucene.Net.Index.CheckIndex+Status+TermIndexStatus 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermIndexStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermIndexStatus.#ctor(Lucene.Net.Index.CheckIndex.Status.TermIndexStatus)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermIndexStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermIndexStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermIndexStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermIndexStatus.Constructor">
            <summary>设置 TermIndexStatus.TermIndexStatus() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermIndexStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermVectorStatus">
            <summary>Lucene.Net.Index.CheckIndex+Status+TermVectorStatus 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermVectorStatus.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermVectorStatus.#ctor(Lucene.Net.Index.CheckIndex.Status.TermVectorStatus)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermVectorStatus.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermVectorStatus.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermVectorStatus.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermVectorStatus.Constructor">
            <summary>设置 TermVectorStatus.TermVectorStatus() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCheckIndex.ShimStatus.ShimTermVectorStatus.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCompoundFileReader">
            <summary>Lucene.Net.Index.CompoundFileReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.#ctor(Lucene.Net.Index.CompoundFileReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.Close">
            <summary>设置 CompoundFileReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ConstructorDirectoryString">
            <summary>设置 CompoundFileReader.CompoundFileReader(Directory dir, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ConstructorDirectoryStringInt32">
            <summary>设置 CompoundFileReader.CompoundFileReader(Directory dir, String name, Int32 readBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.CreateOutputString">
            <summary>设置 CompoundFileReader.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.DeleteFileString">
            <summary>设置 CompoundFileReader.DeleteFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.Dispose">
            <summary>设置 CompoundFileReader.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.FileExistsString">
            <summary>设置 CompoundFileReader.FileExists(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.FileLengthString">
            <summary>设置 CompoundFileReader.FileLength(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.FileModifiedString">
            <summary>设置 CompoundFileReader.FileModified(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.GetDirectory">
            <summary>设置 CompoundFileReader.GetDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.GetName">
            <summary>设置 CompoundFileReader.GetName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.List">
            <summary>设置 CompoundFileReader.List() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.MakeLockString">
            <summary>设置 CompoundFileReader.MakeLock(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.OpenInputString">
            <summary>设置 CompoundFileReader.OpenInput(String id) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.OpenInputStringInt32">
            <summary>设置 CompoundFileReader.OpenInput(String id, Int32 readBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.RenameFileStringString">
            <summary>设置 CompoundFileReader.RenameFile(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.TouchFileString">
            <summary>设置 CompoundFileReader.TouchFile(String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.Close">
            <summary>设置 CompoundFileReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.CreateOutputString">
            <summary>设置 CompoundFileReader.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.DeleteFileString">
            <summary>设置 CompoundFileReader.DeleteFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.Dispose">
            <summary>设置 CompoundFileReader.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.FileExistsString">
            <summary>设置 CompoundFileReader.FileExists(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.FileLengthString">
            <summary>设置 CompoundFileReader.FileLength(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.FileModifiedString">
            <summary>设置 CompoundFileReader.FileModified(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.GetDirectory">
            <summary>设置 CompoundFileReader.GetDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.GetName">
            <summary>设置 CompoundFileReader.GetName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.List">
            <summary>设置 CompoundFileReader.List() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.MakeLockString">
            <summary>设置 CompoundFileReader.MakeLock(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.OpenInputString">
            <summary>设置 CompoundFileReader.OpenInput(String id) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.OpenInputStringInt32">
            <summary>设置 CompoundFileReader.OpenInput(String id, Int32 readBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.RenameFileStringString">
            <summary>设置 CompoundFileReader.RenameFile(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.AllInstances.TouchFileString">
            <summary>设置 CompoundFileReader.TouchFile(String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput">
            <summary>Lucene.Net.Index.CompoundFileReader+CSIndexInput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.#ctor(Lucene.Net.Index.CompoundFileReader.CSIndexInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.Clone">
            <summary>设置 CSIndexInput.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.Close">
            <summary>设置 CSIndexInput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.ConstructorIndexInputInt64Int64">
            <summary>设置 CSIndexInput.CSIndexInput(IndexInput base_Renamed, Int64 fileOffset, Int64 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.ConstructorIndexInputInt64Int64Int32">
            <summary>设置 CSIndexInput.CSIndexInput(IndexInput base_Renamed, Int64 fileOffset, Int64 length, Int32 readBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.Length">
            <summary>设置 CSIndexInput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.ReadInternalByteArrayInt32Int32">
            <summary>设置 CSIndexInput.ReadInternal(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.SeekInternalInt64">
            <summary>设置 CSIndexInput.SeekInternal(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.base_Renamed_ForNUnitGet">
            <summary>设置 CSIndexInput.get_base_Renamed_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.AllInstances.Clone">
            <summary>设置 CSIndexInput.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.AllInstances.Close">
            <summary>设置 CSIndexInput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.AllInstances.Length">
            <summary>设置 CSIndexInput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.AllInstances.ReadInternalByteArrayInt32Int32">
            <summary>设置 CSIndexInput.ReadInternal(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.AllInstances.SeekInternalInt64">
            <summary>设置 CSIndexInput.SeekInternal(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileReader.ShimCSIndexInput.AllInstances.base_Renamed_ForNUnitGet">
            <summary>设置 CSIndexInput.get_base_Renamed_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCompoundFileWriter">
            <summary>Lucene.Net.Index.CompoundFileWriter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.#ctor(Lucene.Net.Index.CompoundFileWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.AddFileString">
            <summary>设置 CompoundFileWriter.AddFile(String file) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.Close">
            <summary>设置 CompoundFileWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.ConstructorDirectoryString">
            <summary>设置 CompoundFileWriter.CompoundFileWriter(Directory dir, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.GetDirectory">
            <summary>设置 CompoundFileWriter.GetDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.GetName">
            <summary>设置 CompoundFileWriter.GetName() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.AllInstances.AddFileString">
            <summary>设置 CompoundFileWriter.AddFile(String file) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.AllInstances.Close">
            <summary>设置 CompoundFileWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.AllInstances.GetDirectory">
            <summary>设置 CompoundFileWriter.GetDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCompoundFileWriter.AllInstances.GetName">
            <summary>设置 CompoundFileWriter.GetName() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler">
            <summary>Lucene.Net.Index.ConcurrentMergeScheduler 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.#ctor(Lucene.Net.Index.ConcurrentMergeScheduler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AddMyself">
            <summary>设置 ConcurrentMergeScheduler.AddMyself() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AnyUnhandledExceptions">
            <summary>设置 ConcurrentMergeScheduler.AnyUnhandledExceptions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ClearSuppressExceptions">
            <summary>设置 ConcurrentMergeScheduler.ClearSuppressExceptions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ClearUnhandledExceptions">
            <summary>设置 ConcurrentMergeScheduler.ClearUnhandledExceptions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.Close">
            <summary>设置 ConcurrentMergeScheduler.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.Constructor">
            <summary>设置 ConcurrentMergeScheduler.ConcurrentMergeScheduler() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.DoMergeMergePolicyOneMerge">
            <summary>设置 ConcurrentMergeScheduler.DoMerge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.GetMaxThreadCount">
            <summary>设置 ConcurrentMergeScheduler.GetMaxThreadCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.GetMergeThreadIndexWriterMergePolicyOneMerge">
            <summary>设置 ConcurrentMergeScheduler.GetMergeThread(IndexWriter writer, OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.GetMergeThreadPriority">
            <summary>设置 ConcurrentMergeScheduler.GetMergeThreadPriority() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.HandleMergeExceptionException">
            <summary>设置 ConcurrentMergeScheduler.HandleMergeException(Exception exc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.InitMergeThreadPriority">
            <summary>设置 ConcurrentMergeScheduler.InitMergeThreadPriority() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.MergeIndexWriter">
            <summary>设置 ConcurrentMergeScheduler.Merge(IndexWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.MergeThreadCount">
            <summary>设置 ConcurrentMergeScheduler.MergeThreadCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.MergeThreadCountBoolean">
            <summary>设置 ConcurrentMergeScheduler.MergeThreadCount(Boolean excludeDone) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.MessageString">
            <summary>设置 ConcurrentMergeScheduler.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.SetMaxThreadCountInt32">
            <summary>设置 ConcurrentMergeScheduler.SetMaxThreadCount(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.SetMergeThreadPriorityInt32">
            <summary>设置 ConcurrentMergeScheduler.SetMergeThreadPriority(Int32 pri) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.SetSuppressExceptions">
            <summary>设置 ConcurrentMergeScheduler.SetSuppressExceptions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.SetTestMode">
            <summary>设置 ConcurrentMergeScheduler.SetTestMode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.StaticConstructor">
            <summary>设置 ConcurrentMergeScheduler.ConcurrentMergeScheduler() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.Sync">
            <summary>设置 ConcurrentMergeScheduler.Sync() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.Verbose">
            <summary>设置 ConcurrentMergeScheduler.Verbose() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.AddMyself">
            <summary>设置 ConcurrentMergeScheduler.AddMyself() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.ClearSuppressExceptions">
            <summary>设置 ConcurrentMergeScheduler.ClearSuppressExceptions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.Close">
            <summary>设置 ConcurrentMergeScheduler.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.DoMergeMergePolicyOneMerge">
            <summary>设置 ConcurrentMergeScheduler.DoMerge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.GetMaxThreadCount">
            <summary>设置 ConcurrentMergeScheduler.GetMaxThreadCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.GetMergeThreadIndexWriterMergePolicyOneMerge">
            <summary>设置 ConcurrentMergeScheduler.GetMergeThread(IndexWriter writer, OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.GetMergeThreadPriority">
            <summary>设置 ConcurrentMergeScheduler.GetMergeThreadPriority() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.HandleMergeExceptionException">
            <summary>设置 ConcurrentMergeScheduler.HandleMergeException(Exception exc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.InitMergeThreadPriority">
            <summary>设置 ConcurrentMergeScheduler.InitMergeThreadPriority() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.MergeIndexWriter">
            <summary>设置 ConcurrentMergeScheduler.Merge(IndexWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.MergeThreadCount">
            <summary>设置 ConcurrentMergeScheduler.MergeThreadCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.MergeThreadCountBoolean">
            <summary>设置 ConcurrentMergeScheduler.MergeThreadCount(Boolean excludeDone) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.MessageString">
            <summary>设置 ConcurrentMergeScheduler.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.SetMaxThreadCountInt32">
            <summary>设置 ConcurrentMergeScheduler.SetMaxThreadCount(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.SetMergeThreadPriorityInt32">
            <summary>设置 ConcurrentMergeScheduler.SetMergeThreadPriority(Int32 pri) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.SetSuppressExceptions">
            <summary>设置 ConcurrentMergeScheduler.SetSuppressExceptions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.Sync">
            <summary>设置 ConcurrentMergeScheduler.Sync() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.AllInstances.Verbose">
            <summary>设置 ConcurrentMergeScheduler.Verbose() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread">
            <summary>Lucene.Net.Index.ConcurrentMergeScheduler+MergeThread 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.#ctor(Lucene.Net.Index.ConcurrentMergeScheduler.MergeThread)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.Bind(IThreadRunnable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.ConstructorConcurrentMergeSchedulerIndexWriterMergePolicyOneMerge">
            <summary>设置 MergeThread.MergeThread(ConcurrentMergeScheduler enclosingInstance, IndexWriter writer, OneMerge startMerge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.Enclosing_InstanceGet">
            <summary>设置 MergeThread.get_Enclosing_Instance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.GetRunningMerge">
            <summary>设置 MergeThread.GetRunningMerge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.InitBlockConcurrentMergeScheduler">
            <summary>设置 MergeThread.InitBlock(ConcurrentMergeScheduler enclosingInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.Run">
            <summary>设置 MergeThread.Run() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.SetRunningMergeMergePolicyOneMerge">
            <summary>设置 MergeThread.SetRunningMerge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.SetThreadPriorityInt32">
            <summary>设置 MergeThread.SetThreadPriority(Int32 pri) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.ToString">
            <summary>设置 MergeThread.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.AllInstances.Enclosing_InstanceGet">
            <summary>设置 MergeThread.get_Enclosing_Instance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.AllInstances.GetRunningMerge">
            <summary>设置 MergeThread.GetRunningMerge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.AllInstances.InitBlockConcurrentMergeScheduler">
            <summary>设置 MergeThread.InitBlock(ConcurrentMergeScheduler enclosingInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.AllInstances.Run">
            <summary>设置 MergeThread.Run() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.AllInstances.SetRunningMergeMergePolicyOneMerge">
            <summary>设置 MergeThread.SetRunningMerge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.AllInstances.SetThreadPriorityInt32">
            <summary>设置 MergeThread.SetThreadPriority(Int32 pri) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimConcurrentMergeScheduler.ShimMergeThread.AllInstances.ToString01">
            <summary>设置 MergeThread.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCorruptIndexException">
            <summary>Lucene.Net.Index.CorruptIndexException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCorruptIndexException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCorruptIndexException.#ctor(Lucene.Net.Index.CorruptIndexException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCorruptIndexException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCorruptIndexException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimCorruptIndexException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCorruptIndexException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCorruptIndexException.ConstructorString">
            <summary>设置 CorruptIndexException.CorruptIndexException(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimCorruptIndexException.ConstructorStringException">
            <summary>设置 CorruptIndexException.CorruptIndexException(String message, Exception exp) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimCorruptIndexException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimDirectoryReader">
            <summary>Lucene.Net.Index.DirectoryReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDirectoryReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDirectoryReader.#ctor(Lucene.Net.Index.DirectoryReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDirectoryReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDirectoryReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDirectoryReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDirectoryReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AcquireWriteLock">
            <summary>设置 DirectoryReader.AcquireWriteLock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.Clone">
            <summary>设置 DirectoryReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.CloneBoolean">
            <summary>设置 DirectoryReader.Clone(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.ConstructorDirectorySegmentInfosIndexDeletionPolicyBooleanInt32">
            <summary>设置 DirectoryReader.DirectoryReader(Directory directory, SegmentInfos sis, IndexDeletionPolicy deletionPolicy, Boolean readOnly, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.ConstructorDirectorySegmentInfosSegmentReaderArrayInt32ArrayIDictionaryOfStringByteArrayBooleanBooleanInt32">
            <summary>设置 DirectoryReader.DirectoryReader(Directory directory, SegmentInfos infos, SegmentReader[] oldReaders, Int32[] oldStarts, IDictionary`2&lt;String,Byte[]&gt; oldNormsCache, Boolean readOnly, Boolean doClone, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.ConstructorIndexWriterSegmentInfosInt32">
            <summary>设置 DirectoryReader.DirectoryReader(IndexWriter writer, SegmentInfos infos, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.Directory">
            <summary>设置 DirectoryReader.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoClose">
            <summary>设置 DirectoryReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoCommit">
            <summary>设置 DirectoryReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoCommitIDictionaryOfStringString">
            <summary>设置 DirectoryReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoDeleteInt32">
            <summary>设置 DirectoryReader.DoDelete(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoReopenBooleanIndexCommit">
            <summary>设置 DirectoryReader.DoReopen(Boolean openReadOnly, IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoReopenFromWriterBooleanIndexCommit">
            <summary>设置 DirectoryReader.DoReopenFromWriter(Boolean openReadOnly, IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoReopenNoWriterBooleanIndexCommit">
            <summary>设置 DirectoryReader.DoReopenNoWriter(Boolean openReadOnly, IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoReopenSegmentInfosBooleanBoolean">
            <summary>设置 DirectoryReader.DoReopen(SegmentInfos infos, Boolean doClone, Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoSetNormInt32StringByte">
            <summary>设置 DirectoryReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DoUndeleteAll">
            <summary>设置 DirectoryReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DocFreqTerm">
            <summary>设置 DirectoryReader.DocFreq(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.DocumentInt32FieldSelector">
            <summary>设置 DirectoryReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.FakeNorms">
            <summary>设置 DirectoryReader.FakeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetCommitUserData">
            <summary>设置 DirectoryReader.GetCommitUserData() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 DirectoryReader.GetFieldNames(FieldOption fieldNames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetFieldNamesIndexReaderFieldOptionIndexReaderArray">
            <summary>设置 DirectoryReader.GetFieldNames(FieldOption fieldNames, IndexReader[] subReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetIndexCommit">
            <summary>设置 DirectoryReader.GetIndexCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetSequentialSubReaders">
            <summary>设置 DirectoryReader.GetSequentialSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetTermFreqVectorInt32String">
            <summary>设置 DirectoryReader.GetTermFreqVector(Int32 n, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 DirectoryReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 DirectoryReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetTermFreqVectorsInt32">
            <summary>设置 DirectoryReader.GetTermFreqVectors(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetTermInfosIndexDivisor">
            <summary>设置 DirectoryReader.GetTermInfosIndexDivisor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.GetVersion">
            <summary>设置 DirectoryReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.HasDeletions">
            <summary>设置 DirectoryReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.HasNormsString">
            <summary>设置 DirectoryReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.InitializeSegmentReaderArray">
            <summary>设置 DirectoryReader.Initialize(SegmentReader[] subReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.IsCurrent">
            <summary>设置 DirectoryReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.IsDeletedInt32">
            <summary>设置 DirectoryReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.IsOptimized">
            <summary>设置 DirectoryReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.ListCommitsDirectory">
            <summary>设置 DirectoryReader.ListCommits(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.MaxDoc">
            <summary>设置 DirectoryReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.NormsString">
            <summary>设置 DirectoryReader.Norms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.NormsStringByteArrayInt32">
            <summary>设置 DirectoryReader.Norms(String field, Byte[] result, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.NumDocs">
            <summary>设置 DirectoryReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.OpenDirectoryIndexDeletionPolicyIndexCommitBooleanInt32">
            <summary>设置 DirectoryReader.Open(Directory directory, IndexDeletionPolicy deletionPolicy, IndexCommit commit, Boolean readOnly, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.ReaderIndexInt32">
            <summary>设置 DirectoryReader.ReaderIndex(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.ReaderIndexInt32Int32ArrayInt32">
            <summary>设置 DirectoryReader.ReaderIndex(Int32 n, Int32[] starts, Int32 numSubReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.Reopen">
            <summary>设置 DirectoryReader.Reopen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.ReopenBoolean">
            <summary>设置 DirectoryReader.Reopen(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.ReopenIndexCommit">
            <summary>设置 DirectoryReader.Reopen(IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.RollbackCommit">
            <summary>设置 DirectoryReader.RollbackCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.SetDisableFakeNormsBoolean">
            <summary>设置 DirectoryReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.StartCommit">
            <summary>设置 DirectoryReader.StartCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.TermDocs">
            <summary>设置 DirectoryReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.TermPositions">
            <summary>设置 DirectoryReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.Terms">
            <summary>设置 DirectoryReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.TermsTerm">
            <summary>设置 DirectoryReader.Terms(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.AcquireWriteLock">
            <summary>设置 DirectoryReader.AcquireWriteLock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.Clone">
            <summary>设置 DirectoryReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.CloneBoolean">
            <summary>设置 DirectoryReader.Clone(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.Directory">
            <summary>设置 DirectoryReader.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoClose">
            <summary>设置 DirectoryReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoCommit">
            <summary>设置 DirectoryReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoCommitIDictionaryOfStringString">
            <summary>设置 DirectoryReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoDeleteInt32">
            <summary>设置 DirectoryReader.DoDelete(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoReopenBooleanIndexCommit">
            <summary>设置 DirectoryReader.DoReopen(Boolean openReadOnly, IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoReopenFromWriterBooleanIndexCommit">
            <summary>设置 DirectoryReader.DoReopenFromWriter(Boolean openReadOnly, IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoReopenNoWriterBooleanIndexCommit">
            <summary>设置 DirectoryReader.DoReopenNoWriter(Boolean openReadOnly, IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoReopenSegmentInfosBooleanBoolean">
            <summary>设置 DirectoryReader.DoReopen(SegmentInfos infos, Boolean doClone, Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoSetNormInt32StringByte">
            <summary>设置 DirectoryReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DoUndeleteAll">
            <summary>设置 DirectoryReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DocFreqTerm">
            <summary>设置 DirectoryReader.DocFreq(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.DocumentInt32FieldSelector">
            <summary>设置 DirectoryReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.FakeNorms">
            <summary>设置 DirectoryReader.FakeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetCommitUserData">
            <summary>设置 DirectoryReader.GetCommitUserData() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 DirectoryReader.GetFieldNames(FieldOption fieldNames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetIndexCommit">
            <summary>设置 DirectoryReader.GetIndexCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetSequentialSubReaders">
            <summary>设置 DirectoryReader.GetSequentialSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetTermFreqVectorInt32String">
            <summary>设置 DirectoryReader.GetTermFreqVector(Int32 n, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 DirectoryReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 DirectoryReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetTermFreqVectorsInt32">
            <summary>设置 DirectoryReader.GetTermFreqVectors(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetTermInfosIndexDivisor">
            <summary>设置 DirectoryReader.GetTermInfosIndexDivisor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.GetVersion">
            <summary>设置 DirectoryReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.HasDeletions">
            <summary>设置 DirectoryReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.HasNormsString">
            <summary>设置 DirectoryReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.InitializeSegmentReaderArray">
            <summary>设置 DirectoryReader.Initialize(SegmentReader[] subReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.IsCurrent">
            <summary>设置 DirectoryReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.IsDeletedInt32">
            <summary>设置 DirectoryReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.IsOptimized">
            <summary>设置 DirectoryReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.MaxDoc">
            <summary>设置 DirectoryReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.NormsString">
            <summary>设置 DirectoryReader.Norms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.NormsStringByteArrayInt32">
            <summary>设置 DirectoryReader.Norms(String field, Byte[] result, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.NumDocs">
            <summary>设置 DirectoryReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.ReaderIndexInt32">
            <summary>设置 DirectoryReader.ReaderIndex(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.Reopen">
            <summary>设置 DirectoryReader.Reopen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.ReopenBoolean">
            <summary>设置 DirectoryReader.Reopen(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.ReopenIndexCommit">
            <summary>设置 DirectoryReader.Reopen(IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.RollbackCommit">
            <summary>设置 DirectoryReader.RollbackCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.SetDisableFakeNormsBoolean">
            <summary>设置 DirectoryReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.StartCommit">
            <summary>设置 DirectoryReader.StartCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.TermDocs">
            <summary>设置 DirectoryReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.TermPositions">
            <summary>设置 DirectoryReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.Terms">
            <summary>设置 DirectoryReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDirectoryReader.AllInstances.TermsTerm">
            <summary>设置 DirectoryReader.Terms(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimDocumentsWriter">
            <summary>Lucene.Net.Index.DocumentsWriter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDocumentsWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDocumentsWriter.#ctor(Lucene.Net.Index.DocumentsWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.Abort">
            <summary>设置 DocumentsWriter.Abort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AbortedFiles">
            <summary>设置 DocumentsWriter.AbortedFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AddDeleteDocIDInt32">
            <summary>设置 DocumentsWriter.AddDeleteDocID(Int32 docID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AddDeleteQueryQueryInt32">
            <summary>设置 DocumentsWriter.AddDeleteQuery(Query query, Int32 docID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AddDeleteTermTermInt32">
            <summary>设置 DocumentsWriter.AddDeleteTerm(Term term, Int32 docCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AddDocumentDocumentAnalyzer">
            <summary>设置 DocumentsWriter.AddDocument(Document doc, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AddOpenFileString">
            <summary>设置 DocumentsWriter.AddOpenFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllThreadsIdle">
            <summary>设置 DocumentsWriter.AllThreadsIdle() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AnyChanges">
            <summary>设置 DocumentsWriter.AnyChanges() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.ApplyDeletesIndexReaderInt32">
            <summary>设置 DocumentsWriter.ApplyDeletes(IndexReader reader, Int32 docIDStart) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.ApplyDeletesSegmentInfos">
            <summary>设置 DocumentsWriter.ApplyDeletes(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BYTE_BLOCK_SIZE_ForNUnitGet">
            <summary>设置 DocumentsWriter.get_BYTE_BLOCK_SIZE_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BalanceRAM">
            <summary>设置 DocumentsWriter.BalanceRAM() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BufferDeleteQueriesQueryArray">
            <summary>设置 DocumentsWriter.BufferDeleteQueries(Query[] queries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BufferDeleteQueryQuery">
            <summary>设置 DocumentsWriter.BufferDeleteQuery(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BufferDeleteTermTerm">
            <summary>设置 DocumentsWriter.BufferDeleteTerm(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BufferDeleteTermsTermArray">
            <summary>设置 DocumentsWriter.BufferDeleteTerms(Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BytesAllocatedInt64">
            <summary>设置 DocumentsWriter.BytesAllocated(Int64 numBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.BytesUsedInt64">
            <summary>设置 DocumentsWriter.BytesUsed(Int64 numBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.CHAR_BLOCK_SIZE_ForNUnitGet">
            <summary>设置 DocumentsWriter.get_CHAR_BLOCK_SIZE_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.CheckDeleteTermTerm">
            <summary>设置 DocumentsWriter.CheckDeleteTerm(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.ClearFlushPending">
            <summary>设置 DocumentsWriter.ClearFlushPending() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.Close">
            <summary>设置 DocumentsWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.CloseDocStore">
            <summary>设置 DocumentsWriter.CloseDocStore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.ClosedFiles">
            <summary>设置 DocumentsWriter.ClosedFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.CreateCompoundFileString">
            <summary>设置 DocumentsWriter.CreateCompoundFile(String segment) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.DeletesFull">
            <summary>设置 DocumentsWriter.DeletesFull() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.DoAfterFlush">
            <summary>设置 DocumentsWriter.DoAfterFlush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.DoApplyDeletes">
            <summary>设置 DocumentsWriter.DoApplyDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.DoBalanceRAM">
            <summary>设置 DocumentsWriter.DoBalanceRAM() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.FlushBoolean">
            <summary>设置 DocumentsWriter.Flush(Boolean closeDocStore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetCharBlock">
            <summary>设置 DocumentsWriter.GetCharBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetDocStoreOffset">
            <summary>设置 DocumentsWriter.GetDocStoreOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetDocStoreSegment">
            <summary>设置 DocumentsWriter.GetDocStoreSegment() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetFlushedDocCount">
            <summary>设置 DocumentsWriter.GetFlushedDocCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetFlushedFiles">
            <summary>设置 DocumentsWriter.GetFlushedFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetIntBlockBoolean">
            <summary>设置 DocumentsWriter.GetIntBlock(Boolean trackAllocations) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetMaxBufferedDeleteTerms">
            <summary>设置 DocumentsWriter.GetMaxBufferedDeleteTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetMaxBufferedDocs">
            <summary>设置 DocumentsWriter.GetMaxBufferedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetNumBufferedDeleteTerms">
            <summary>设置 DocumentsWriter.GetNumBufferedDeleteTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetNumDocsInRAM">
            <summary>设置 DocumentsWriter.GetNumDocsInRAM() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetRAMBufferSizeMB">
            <summary>设置 DocumentsWriter.GetRAMBufferSizeMB() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetRAMUsed">
            <summary>设置 DocumentsWriter.GetRAMUsed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.GetSegment">
            <summary>设置 DocumentsWriter.GetSegment() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.HasDeletes">
            <summary>设置 DocumentsWriter.HasDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.HasProx">
            <summary>设置 DocumentsWriter.HasProx() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.InitBlock">
            <summary>设置 DocumentsWriter.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.InitFlushStateBoolean">
            <summary>设置 DocumentsWriter.InitFlushState(Boolean onlyDocStore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.InitSegmentNameBoolean">
            <summary>设置 DocumentsWriter.InitSegmentName(Boolean onlyDocStore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.MessageString">
            <summary>设置 DocumentsWriter.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.OpenFiles">
            <summary>设置 DocumentsWriter.OpenFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.PauseAllThreads">
            <summary>设置 DocumentsWriter.PauseAllThreads() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.PushDeletes">
            <summary>设置 DocumentsWriter.PushDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.RecycleCharBlocksCharArrayArrayInt32">
            <summary>设置 DocumentsWriter.RecycleCharBlocks(Char[][] blocks, Int32 numBlocks) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.RecycleIntBlocksInt32ArrayArrayInt32Int32">
            <summary>设置 DocumentsWriter.RecycleIntBlocks(Int32[][] blocks, Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.RemapDeletesSegmentInfosInt32ArrayArrayInt32ArrayMergePolicyOneMergeInt32">
            <summary>设置 DocumentsWriter.RemapDeletes(SegmentInfos infos, Int32[][] docMaps, Int32[] delCounts, OneMerge merge, Int32 mergeDocCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.RemoveOpenFileString">
            <summary>设置 DocumentsWriter.RemoveOpenFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.ResumeAllThreads">
            <summary>设置 DocumentsWriter.ResumeAllThreads() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetAborting">
            <summary>设置 DocumentsWriter.SetAborting() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetAllowMinus1Position">
            <summary>设置 DocumentsWriter.SetAllowMinus1Position() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetFlushPending">
            <summary>设置 DocumentsWriter.SetFlushPending() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetFlushedDocCountInt32">
            <summary>设置 DocumentsWriter.SetFlushedDocCount(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetInfoStreamStreamWriter">
            <summary>设置 DocumentsWriter.SetInfoStream(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetMaxBufferedDeleteTermsInt32">
            <summary>设置 DocumentsWriter.SetMaxBufferedDeleteTerms(Int32 maxBufferedDeleteTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetMaxBufferedDocsInt32">
            <summary>设置 DocumentsWriter.SetMaxBufferedDocs(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetMaxFieldLengthInt32">
            <summary>设置 DocumentsWriter.SetMaxFieldLength(Int32 maxFieldLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetRAMBufferSizeMBDouble">
            <summary>设置 DocumentsWriter.SetRAMBufferSizeMB(Double mb) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.SetSimilaritySimilarity">
            <summary>设置 DocumentsWriter.SetSimilarity(Similarity similarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.StaticConstructor">
            <summary>设置 DocumentsWriter.DocumentsWriter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.TimeToFlushDeletes">
            <summary>设置 DocumentsWriter.TimeToFlushDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.ToMBInt64">
            <summary>设置 DocumentsWriter.ToMB(Int64 v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.UpdateDocumentDocumentAnalyzerTerm">
            <summary>设置 DocumentsWriter.UpdateDocument(Document doc, Analyzer analyzer, Term delTerm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.UpdateDocumentTermDocumentAnalyzer">
            <summary>设置 DocumentsWriter.UpdateDocument(Term t, Document doc, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.UpdateFlushedDocCountInt32">
            <summary>设置 DocumentsWriter.UpdateFlushedDocCount(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.WaitForWaitQueue">
            <summary>设置 DocumentsWriter.WaitForWaitQueue() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.Abort">
            <summary>设置 DocumentsWriter.Abort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.AbortedFiles">
            <summary>设置 DocumentsWriter.AbortedFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.AddDeleteDocIDInt32">
            <summary>设置 DocumentsWriter.AddDeleteDocID(Int32 docID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.AddDeleteQueryQueryInt32">
            <summary>设置 DocumentsWriter.AddDeleteQuery(Query query, Int32 docID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.AddDeleteTermTermInt32">
            <summary>设置 DocumentsWriter.AddDeleteTerm(Term term, Int32 docCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.AddDocumentDocumentAnalyzer">
            <summary>设置 DocumentsWriter.AddDocument(Document doc, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.AddOpenFileString">
            <summary>设置 DocumentsWriter.AddOpenFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.AllThreadsIdle">
            <summary>设置 DocumentsWriter.AllThreadsIdle() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.AnyChanges">
            <summary>设置 DocumentsWriter.AnyChanges() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.ApplyDeletesIndexReaderInt32">
            <summary>设置 DocumentsWriter.ApplyDeletes(IndexReader reader, Int32 docIDStart) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.ApplyDeletesSegmentInfos">
            <summary>设置 DocumentsWriter.ApplyDeletes(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.BalanceRAM">
            <summary>设置 DocumentsWriter.BalanceRAM() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.BufferDeleteQueriesQueryArray">
            <summary>设置 DocumentsWriter.BufferDeleteQueries(Query[] queries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.BufferDeleteQueryQuery">
            <summary>设置 DocumentsWriter.BufferDeleteQuery(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.BufferDeleteTermTerm">
            <summary>设置 DocumentsWriter.BufferDeleteTerm(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.BufferDeleteTermsTermArray">
            <summary>设置 DocumentsWriter.BufferDeleteTerms(Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.BytesAllocatedInt64">
            <summary>设置 DocumentsWriter.BytesAllocated(Int64 numBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.BytesUsedInt64">
            <summary>设置 DocumentsWriter.BytesUsed(Int64 numBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.CheckDeleteTermTerm">
            <summary>设置 DocumentsWriter.CheckDeleteTerm(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.ClearFlushPending">
            <summary>设置 DocumentsWriter.ClearFlushPending() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.Close">
            <summary>设置 DocumentsWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.CloseDocStore">
            <summary>设置 DocumentsWriter.CloseDocStore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.ClosedFiles">
            <summary>设置 DocumentsWriter.ClosedFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.CreateCompoundFileString">
            <summary>设置 DocumentsWriter.CreateCompoundFile(String segment) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.DeletesFull">
            <summary>设置 DocumentsWriter.DeletesFull() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.DoAfterFlush">
            <summary>设置 DocumentsWriter.DoAfterFlush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.DoApplyDeletes">
            <summary>设置 DocumentsWriter.DoApplyDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.DoBalanceRAM">
            <summary>设置 DocumentsWriter.DoBalanceRAM() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.FlushBoolean">
            <summary>设置 DocumentsWriter.Flush(Boolean closeDocStore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetCharBlock">
            <summary>设置 DocumentsWriter.GetCharBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetDocStoreOffset">
            <summary>设置 DocumentsWriter.GetDocStoreOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetDocStoreSegment">
            <summary>设置 DocumentsWriter.GetDocStoreSegment() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetFlushedDocCount">
            <summary>设置 DocumentsWriter.GetFlushedDocCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetFlushedFiles">
            <summary>设置 DocumentsWriter.GetFlushedFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetIntBlockBoolean">
            <summary>设置 DocumentsWriter.GetIntBlock(Boolean trackAllocations) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetMaxBufferedDeleteTerms">
            <summary>设置 DocumentsWriter.GetMaxBufferedDeleteTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetMaxBufferedDocs">
            <summary>设置 DocumentsWriter.GetMaxBufferedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetNumBufferedDeleteTerms">
            <summary>设置 DocumentsWriter.GetNumBufferedDeleteTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetNumDocsInRAM">
            <summary>设置 DocumentsWriter.GetNumDocsInRAM() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetRAMBufferSizeMB">
            <summary>设置 DocumentsWriter.GetRAMBufferSizeMB() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetRAMUsed">
            <summary>设置 DocumentsWriter.GetRAMUsed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.GetSegment">
            <summary>设置 DocumentsWriter.GetSegment() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.HasDeletes">
            <summary>设置 DocumentsWriter.HasDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.HasProx">
            <summary>设置 DocumentsWriter.HasProx() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.InitBlock">
            <summary>设置 DocumentsWriter.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.InitFlushStateBoolean">
            <summary>设置 DocumentsWriter.InitFlushState(Boolean onlyDocStore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.InitSegmentNameBoolean">
            <summary>设置 DocumentsWriter.InitSegmentName(Boolean onlyDocStore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.MessageString">
            <summary>设置 DocumentsWriter.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.OpenFiles">
            <summary>设置 DocumentsWriter.OpenFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.PauseAllThreads">
            <summary>设置 DocumentsWriter.PauseAllThreads() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.PushDeletes">
            <summary>设置 DocumentsWriter.PushDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.RecycleCharBlocksCharArrayArrayInt32">
            <summary>设置 DocumentsWriter.RecycleCharBlocks(Char[][] blocks, Int32 numBlocks) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.RecycleIntBlocksInt32ArrayArrayInt32Int32">
            <summary>设置 DocumentsWriter.RecycleIntBlocks(Int32[][] blocks, Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.RemapDeletesSegmentInfosInt32ArrayArrayInt32ArrayMergePolicyOneMergeInt32">
            <summary>设置 DocumentsWriter.RemapDeletes(SegmentInfos infos, Int32[][] docMaps, Int32[] delCounts, OneMerge merge, Int32 mergeDocCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.RemoveOpenFileString">
            <summary>设置 DocumentsWriter.RemoveOpenFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.ResumeAllThreads">
            <summary>设置 DocumentsWriter.ResumeAllThreads() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetAborting">
            <summary>设置 DocumentsWriter.SetAborting() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetAllowMinus1Position">
            <summary>设置 DocumentsWriter.SetAllowMinus1Position() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetFlushPending">
            <summary>设置 DocumentsWriter.SetFlushPending() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetFlushedDocCountInt32">
            <summary>设置 DocumentsWriter.SetFlushedDocCount(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetInfoStreamStreamWriter">
            <summary>设置 DocumentsWriter.SetInfoStream(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetMaxBufferedDeleteTermsInt32">
            <summary>设置 DocumentsWriter.SetMaxBufferedDeleteTerms(Int32 maxBufferedDeleteTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetMaxBufferedDocsInt32">
            <summary>设置 DocumentsWriter.SetMaxBufferedDocs(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetMaxFieldLengthInt32">
            <summary>设置 DocumentsWriter.SetMaxFieldLength(Int32 maxFieldLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetRAMBufferSizeMBDouble">
            <summary>设置 DocumentsWriter.SetRAMBufferSizeMB(Double mb) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.SetSimilaritySimilarity">
            <summary>设置 DocumentsWriter.SetSimilarity(Similarity similarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.TimeToFlushDeletes">
            <summary>设置 DocumentsWriter.TimeToFlushDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.ToMBInt64">
            <summary>设置 DocumentsWriter.ToMB(Int64 v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.UpdateDocumentDocumentAnalyzerTerm">
            <summary>设置 DocumentsWriter.UpdateDocument(Document doc, Analyzer analyzer, Term delTerm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.UpdateDocumentTermDocumentAnalyzer">
            <summary>设置 DocumentsWriter.UpdateDocument(Term t, Document doc, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.UpdateFlushedDocCountInt32">
            <summary>设置 DocumentsWriter.UpdateFlushedDocCount(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimDocumentsWriter.AllInstances.WaitForWaitQueue">
            <summary>设置 DocumentsWriter.WaitForWaitQueue() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldInfo">
            <summary>Lucene.Net.Index.FieldInfo 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfo.#ctor(Lucene.Net.Index.FieldInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfo.Bind(System.ICloneable{Lucene.Net.Index.FieldInfo})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.Clone">
            <summary>设置 FieldInfo.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.ConstructorStringBooleanInt32BooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfo.FieldInfo(String na, Boolean tk, Int32 nu, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms, Boolean storePayloads, Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.UpdateBooleanBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfo.Update(Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms, Boolean storePayloads, Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.isIndexed_ForNUnitGet">
            <summary>设置 FieldInfo.get_isIndexed_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.name_ForNUnitGet">
            <summary>设置 FieldInfo.get_name_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.omitNorms_ForNUnitGet">
            <summary>设置 FieldInfo.get_omitNorms_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.omitTermFreqAndPositions_ForNUnitGet">
            <summary>设置 FieldInfo.get_omitTermFreqAndPositions_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.storePayloads_ForNUnitGet">
            <summary>设置 FieldInfo.get_storePayloads_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.storeTermVector_ForNUnitGet">
            <summary>设置 FieldInfo.get_storeTermVector_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances.Clone">
            <summary>设置 FieldInfo.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances.UpdateBooleanBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfo.Update(Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms, Boolean storePayloads, Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances.isIndexed_ForNUnitGet">
            <summary>设置 FieldInfo.get_isIndexed_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances.name_ForNUnitGet">
            <summary>设置 FieldInfo.get_name_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances.omitNorms_ForNUnitGet">
            <summary>设置 FieldInfo.get_omitNorms_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances.omitTermFreqAndPositions_ForNUnitGet">
            <summary>设置 FieldInfo.get_omitTermFreqAndPositions_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances.storePayloads_ForNUnitGet">
            <summary>设置 FieldInfo.get_storePayloads_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfo.AllInstances.storeTermVector_ForNUnitGet">
            <summary>设置 FieldInfo.get_storeTermVector_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldInfos">
            <summary>Lucene.Net.Index.FieldInfos 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfos.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfos.#ctor(Lucene.Net.Index.FieldInfos)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfos.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfos.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInfos.Bind(System.ICloneable{Lucene.Net.Index.FieldInfos})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddDocument">
            <summary>设置 FieldInfos.Add(Document doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddICollectionOfStringBoolean">
            <summary>设置 FieldInfos.Add(ICollection`1&lt;String&gt; names, Boolean isIndexed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddIndexedIListOfStringBooleanBooleanBoolean">
            <summary>设置 FieldInfos.AddIndexed(IList`1&lt;String&gt; names, Boolean storeTermVectors, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddInternalStringBooleanBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfos.AddInternal(String name, Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms, Boolean storePayloads, Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddStringBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddStringBooleanBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed, Boolean storeTermVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddStringBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddStringBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AddStringBooleanBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms, Boolean storePayloads, Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.Clone">
            <summary>设置 FieldInfos.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.Constructor">
            <summary>设置 FieldInfos.FieldInfos() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.ConstructorDirectoryString">
            <summary>设置 FieldInfos.FieldInfos(Directory d, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.FieldInfoInt32">
            <summary>设置 FieldInfos.FieldInfo(Int32 fieldNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.FieldInfoString">
            <summary>设置 FieldInfos.FieldInfo(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.FieldNameInt32">
            <summary>设置 FieldInfos.FieldName(Int32 fieldNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.FieldNumberString">
            <summary>设置 FieldInfos.FieldNumber(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.HasProx">
            <summary>设置 FieldInfos.HasProx() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.HasVectors">
            <summary>设置 FieldInfos.HasVectors() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.ReadIndexInputString">
            <summary>设置 FieldInfos.Read(IndexInput input, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.Size">
            <summary>设置 FieldInfos.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.StaticConstructor">
            <summary>设置 FieldInfos.FieldInfos() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.WriteDirectoryString">
            <summary>设置 FieldInfos.Write(Directory d, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.WriteIndexOutput">
            <summary>设置 FieldInfos.Write(IndexOutput output) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddDocument">
            <summary>设置 FieldInfos.Add(Document doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddICollectionOfStringBoolean">
            <summary>设置 FieldInfos.Add(ICollection`1&lt;String&gt; names, Boolean isIndexed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddIndexedIListOfStringBooleanBooleanBoolean">
            <summary>设置 FieldInfos.AddIndexed(IList`1&lt;String&gt; names, Boolean storeTermVectors, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddInternalStringBooleanBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfos.AddInternal(String name, Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms, Boolean storePayloads, Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddStringBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddStringBooleanBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed, Boolean storeTermVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddStringBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddStringBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.AddStringBooleanBooleanBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 FieldInfos.Add(String name, Boolean isIndexed, Boolean storeTermVector, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean omitNorms, Boolean storePayloads, Boolean omitTermFreqAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.Clone">
            <summary>设置 FieldInfos.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.FieldInfoInt32">
            <summary>设置 FieldInfos.FieldInfo(Int32 fieldNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.FieldInfoString">
            <summary>设置 FieldInfos.FieldInfo(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.FieldNameInt32">
            <summary>设置 FieldInfos.FieldName(Int32 fieldNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.FieldNumberString">
            <summary>设置 FieldInfos.FieldNumber(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.HasProx">
            <summary>设置 FieldInfos.HasProx() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.HasVectors">
            <summary>设置 FieldInfos.HasVectors() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.ReadIndexInputString">
            <summary>设置 FieldInfos.Read(IndexInput input, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.Size">
            <summary>设置 FieldInfos.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.WriteDirectoryString">
            <summary>设置 FieldInfos.Write(Directory d, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInfos.AllInstances.WriteIndexOutput">
            <summary>设置 FieldInfos.Write(IndexOutput output) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldInvertState">
            <summary>Lucene.Net.Index.FieldInvertState 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInvertState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInvertState.#ctor(Lucene.Net.Index.FieldInvertState)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInvertState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldInvertState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.Constructor">
            <summary>设置 FieldInvertState.FieldInvertState() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.ConstructorInt32Int32Int32Int32Single">
            <summary>设置 FieldInvertState.FieldInvertState(Int32 position, Int32 length, Int32 numOverlap, Int32 offset, Single boost) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.GetAttributeSource">
            <summary>设置 FieldInvertState.GetAttributeSource() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.GetBoost">
            <summary>设置 FieldInvertState.GetBoost() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.GetLength">
            <summary>设置 FieldInvertState.GetLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.GetNumOverlap">
            <summary>设置 FieldInvertState.GetNumOverlap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.GetOffset">
            <summary>设置 FieldInvertState.GetOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.GetPosition">
            <summary>设置 FieldInvertState.GetPosition() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.ResetSingle">
            <summary>设置 FieldInvertState.Reset(Single docBoost) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldInvertState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.AllInstances.GetAttributeSource">
            <summary>设置 FieldInvertState.GetAttributeSource() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.AllInstances.GetBoost">
            <summary>设置 FieldInvertState.GetBoost() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.AllInstances.GetLength">
            <summary>设置 FieldInvertState.GetLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.AllInstances.GetNumOverlap">
            <summary>设置 FieldInvertState.GetNumOverlap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.AllInstances.GetOffset">
            <summary>设置 FieldInvertState.GetOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.AllInstances.GetPosition">
            <summary>设置 FieldInvertState.GetPosition() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldInvertState.AllInstances.ResetSingle">
            <summary>设置 FieldInvertState.Reset(Single docBoost) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldReaderException">
            <summary>Lucene.Net.Index.FieldReaderException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldReaderException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldReaderException.#ctor(Lucene.Net.Index.FieldReaderException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldReaderException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldReaderException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldReaderException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldReaderException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldReaderException.Constructor">
            <summary>设置 FieldReaderException.FieldReaderException() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldReaderException.ConstructorException">
            <summary>设置 FieldReaderException.FieldReaderException(Exception cause) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldReaderException.ConstructorString">
            <summary>设置 FieldReaderException.FieldReaderException(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldReaderException.ConstructorStringException">
            <summary>设置 FieldReaderException.FieldReaderException(String message, Exception cause) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldReaderException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper">
            <summary>Lucene.Net.Index.FieldSortedTermVectorMapper 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.#ctor(Lucene.Net.Index.FieldSortedTermVectorMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.ConstructorBooleanBooleanIComparerOfTermVectorEntry">
            <summary>设置 FieldSortedTermVectorMapper.FieldSortedTermVectorMapper(Boolean ignoringPositions, Boolean ignoringOffsets, IComparer`1&lt;TermVectorEntry&gt; comparator) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.ConstructorIComparerOfTermVectorEntry">
            <summary>设置 FieldSortedTermVectorMapper.FieldSortedTermVectorMapper(IComparer`1&lt;TermVectorEntry&gt; comparator) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.GetComparator">
            <summary>设置 FieldSortedTermVectorMapper.GetComparator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.GetFieldToTerms">
            <summary>设置 FieldSortedTermVectorMapper.GetFieldToTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 FieldSortedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 FieldSortedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.AllInstances.GetComparator">
            <summary>设置 FieldSortedTermVectorMapper.GetComparator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.AllInstances.GetFieldToTerms">
            <summary>设置 FieldSortedTermVectorMapper.GetFieldToTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.AllInstances.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 FieldSortedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldSortedTermVectorMapper.AllInstances.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 FieldSortedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldsReader">
            <summary>Lucene.Net.Index.FieldsReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldsReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldsReader.#ctor(Lucene.Net.Index.FieldsReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldsReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldsReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFieldsReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AddFieldDocumentFieldInfoBooleanBooleanBoolean">
            <summary>设置 FieldsReader.AddField(Document doc, FieldInfo fi, Boolean binary, Boolean compressed, Boolean tokenize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AddFieldForMergeDocumentFieldInfoBooleanBooleanBoolean">
            <summary>设置 FieldsReader.AddFieldForMerge(Document doc, FieldInfo fi, Boolean binary, Boolean compressed, Boolean tokenize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AddFieldLazyDocumentFieldInfoBooleanBooleanBoolean">
            <summary>设置 FieldsReader.AddFieldLazy(Document doc, FieldInfo fi, Boolean binary, Boolean compressed, Boolean tokenize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AddFieldSizeDocumentFieldInfoBooleanBoolean">
            <summary>设置 FieldsReader.AddFieldSize(Document doc, FieldInfo fi, Boolean binary, Boolean compressed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.CanReadRawDocs">
            <summary>设置 FieldsReader.CanReadRawDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.Clone">
            <summary>设置 FieldsReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.Close">
            <summary>设置 FieldsReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.ConstructorDirectoryStringFieldInfos">
            <summary>设置 FieldsReader.FieldsReader(Directory d, String segment, FieldInfos fn) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.ConstructorDirectoryStringFieldInfosInt32">
            <summary>设置 FieldsReader.FieldsReader(Directory d, String segment, FieldInfos fn, Int32 readBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.ConstructorDirectoryStringFieldInfosInt32Int32Int32">
            <summary>设置 FieldsReader.FieldsReader(Directory d, String segment, FieldInfos fn, Int32 readBufferSize, Int32 docStoreOffset, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.ConstructorFieldInfosInt32Int32Int32Int32Int32IndexInputIndexInput">
            <summary>设置 FieldsReader.FieldsReader(FieldInfos fieldInfos, Int32 numTotalDocs, Int32 size, Int32 format, Int32 formatSize, Int32 docStoreOffset, IndexInput cloneableFieldsStream, IndexInput cloneableIndexStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.DocInt32FieldSelector">
            <summary>设置 FieldsReader.Doc(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.EnsureOpen">
            <summary>设置 FieldsReader.EnsureOpen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.GetIndexTypeFieldInfoBoolean">
            <summary>设置 FieldsReader.GetIndexType(FieldInfo fi, Boolean tokenize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.GetTermVectorTypeFieldInfo">
            <summary>设置 FieldsReader.GetTermVectorType(FieldInfo fi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.RawDocsInt32ArrayInt32Int32">
            <summary>设置 FieldsReader.RawDocs(Int32[] lengths, Int32 startDocID, Int32 numDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.SeekIndexInt32">
            <summary>设置 FieldsReader.SeekIndex(Int32 docID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.Size">
            <summary>设置 FieldsReader.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.SkipFieldBooleanBoolean">
            <summary>设置 FieldsReader.SkipField(Boolean binary, Boolean compressed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.SkipFieldBooleanBooleanInt32">
            <summary>设置 FieldsReader.SkipField(Boolean binary, Boolean compressed, Int32 toRead) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.UncompressByteArray">
            <summary>设置 FieldsReader.Uncompress(Byte[] b) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.AddFieldDocumentFieldInfoBooleanBooleanBoolean">
            <summary>设置 FieldsReader.AddField(Document doc, FieldInfo fi, Boolean binary, Boolean compressed, Boolean tokenize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.AddFieldForMergeDocumentFieldInfoBooleanBooleanBoolean">
            <summary>设置 FieldsReader.AddFieldForMerge(Document doc, FieldInfo fi, Boolean binary, Boolean compressed, Boolean tokenize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.AddFieldLazyDocumentFieldInfoBooleanBooleanBoolean">
            <summary>设置 FieldsReader.AddFieldLazy(Document doc, FieldInfo fi, Boolean binary, Boolean compressed, Boolean tokenize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.AddFieldSizeDocumentFieldInfoBooleanBoolean">
            <summary>设置 FieldsReader.AddFieldSize(Document doc, FieldInfo fi, Boolean binary, Boolean compressed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.CanReadRawDocs">
            <summary>设置 FieldsReader.CanReadRawDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.Clone">
            <summary>设置 FieldsReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.Close">
            <summary>设置 FieldsReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.DocInt32FieldSelector">
            <summary>设置 FieldsReader.Doc(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.EnsureOpen">
            <summary>设置 FieldsReader.EnsureOpen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.GetIndexTypeFieldInfoBoolean">
            <summary>设置 FieldsReader.GetIndexType(FieldInfo fi, Boolean tokenize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.GetTermVectorTypeFieldInfo">
            <summary>设置 FieldsReader.GetTermVectorType(FieldInfo fi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.RawDocsInt32ArrayInt32Int32">
            <summary>设置 FieldsReader.RawDocs(Int32[] lengths, Int32 startDocID, Int32 numDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.SeekIndexInt32">
            <summary>设置 FieldsReader.SeekIndex(Int32 docID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.Size">
            <summary>设置 FieldsReader.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.SkipFieldBooleanBoolean">
            <summary>设置 FieldsReader.SkipField(Boolean binary, Boolean compressed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.SkipFieldBooleanBooleanInt32">
            <summary>设置 FieldsReader.SkipField(Boolean binary, Boolean compressed, Int32 toRead) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFieldsReader.AllInstances.UncompressByteArray">
            <summary>设置 FieldsReader.Uncompress(Byte[] b) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFilterIndexReader">
            <summary>Lucene.Net.Index.FilterIndexReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.#ctor(Lucene.Net.Index.FilterIndexReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.Clone">
            <summary>设置 FilterIndexReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ConstructorIndexReader">
            <summary>设置 FilterIndexReader.FilterIndexReader(IndexReader in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.Directory">
            <summary>设置 FilterIndexReader.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.DoClose">
            <summary>设置 FilterIndexReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.DoCommit">
            <summary>设置 FilterIndexReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.DoCommitIDictionaryOfStringString">
            <summary>设置 FilterIndexReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.DoDeleteInt32">
            <summary>设置 FilterIndexReader.DoDelete(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.DoSetNormInt32StringByte">
            <summary>设置 FilterIndexReader.DoSetNorm(Int32 d, String f, Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.DoUndeleteAll">
            <summary>设置 FilterIndexReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.DocFreqTerm">
            <summary>设置 FilterIndexReader.DocFreq(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.DocumentInt32FieldSelector">
            <summary>设置 FilterIndexReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetDeletesCacheKey">
            <summary>设置 FilterIndexReader.GetDeletesCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetFieldCacheKey">
            <summary>设置 FilterIndexReader.GetFieldCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 FilterIndexReader.GetFieldNames(FieldOption fieldNames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetSequentialSubReaders">
            <summary>设置 FilterIndexReader.GetSequentialSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetTermFreqVectorInt32String">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetTermFreqVectorsInt32">
            <summary>设置 FilterIndexReader.GetTermFreqVectors(Int32 docNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.GetVersion">
            <summary>设置 FilterIndexReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.HasDeletions">
            <summary>设置 FilterIndexReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.HasNormsString">
            <summary>设置 FilterIndexReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.IsCurrent">
            <summary>设置 FilterIndexReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.IsDeletedInt32">
            <summary>设置 FilterIndexReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.IsOptimized">
            <summary>设置 FilterIndexReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.MaxDoc">
            <summary>设置 FilterIndexReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.NormsString">
            <summary>设置 FilterIndexReader.Norms(String f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.NormsStringByteArrayInt32">
            <summary>设置 FilterIndexReader.Norms(String f, Byte[] bytes, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.NumDocs">
            <summary>设置 FilterIndexReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.TermDocs">
            <summary>设置 FilterIndexReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.TermDocsTerm">
            <summary>设置 FilterIndexReader.TermDocs(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.TermPositions">
            <summary>设置 FilterIndexReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.Terms">
            <summary>设置 FilterIndexReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.TermsTerm">
            <summary>设置 FilterIndexReader.Terms(Term t) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.Clone">
            <summary>设置 FilterIndexReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.Directory">
            <summary>设置 FilterIndexReader.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.DoClose">
            <summary>设置 FilterIndexReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.DoCommit">
            <summary>设置 FilterIndexReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.DoCommitIDictionaryOfStringString">
            <summary>设置 FilterIndexReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.DoDeleteInt32">
            <summary>设置 FilterIndexReader.DoDelete(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.DoSetNormInt32StringByte">
            <summary>设置 FilterIndexReader.DoSetNorm(Int32 d, String f, Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.DoUndeleteAll">
            <summary>设置 FilterIndexReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.DocFreqTerm">
            <summary>设置 FilterIndexReader.DocFreq(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.DocumentInt32FieldSelector">
            <summary>设置 FilterIndexReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetDeletesCacheKey">
            <summary>设置 FilterIndexReader.GetDeletesCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetFieldCacheKey">
            <summary>设置 FilterIndexReader.GetFieldCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 FilterIndexReader.GetFieldNames(FieldOption fieldNames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetSequentialSubReaders">
            <summary>设置 FilterIndexReader.GetSequentialSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetTermFreqVectorInt32String">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetTermFreqVectorsInt32">
            <summary>设置 FilterIndexReader.GetTermFreqVectors(Int32 docNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.GetVersion">
            <summary>设置 FilterIndexReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.HasDeletions">
            <summary>设置 FilterIndexReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.HasNormsString">
            <summary>设置 FilterIndexReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.IsCurrent">
            <summary>设置 FilterIndexReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.IsDeletedInt32">
            <summary>设置 FilterIndexReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.IsOptimized">
            <summary>设置 FilterIndexReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.MaxDoc">
            <summary>设置 FilterIndexReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.NormsString">
            <summary>设置 FilterIndexReader.Norms(String f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.NormsStringByteArrayInt32">
            <summary>设置 FilterIndexReader.Norms(String f, Byte[] bytes, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.NumDocs">
            <summary>设置 FilterIndexReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.TermDocs">
            <summary>设置 FilterIndexReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.TermDocsTerm">
            <summary>设置 FilterIndexReader.TermDocs(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.TermPositions">
            <summary>设置 FilterIndexReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.Terms">
            <summary>设置 FilterIndexReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.AllInstances.TermsTerm">
            <summary>设置 FilterIndexReader.Terms(Term t) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs">
            <summary>Lucene.Net.Index.FilterIndexReader+FilterTermDocs 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.#ctor(Lucene.Net.Index.FilterIndexReader.FilterTermDocs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.Bind(Lucene.Net.Index.TermDocs)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.Close">
            <summary>设置 FilterTermDocs.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.ConstructorTermDocs">
            <summary>设置 FilterTermDocs.FilterTermDocs(TermDocs in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.Doc">
            <summary>设置 FilterTermDocs.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.Freq">
            <summary>设置 FilterTermDocs.Freq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.Next">
            <summary>设置 FilterTermDocs.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.ReadInt32ArrayInt32Array">
            <summary>设置 FilterTermDocs.Read(Int32[] docs, Int32[] freqs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.SeekTerm">
            <summary>设置 FilterTermDocs.Seek(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.SeekTermEnum">
            <summary>设置 FilterTermDocs.Seek(TermEnum termEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.SkipToInt32">
            <summary>设置 FilterTermDocs.SkipTo(Int32 i) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances.Close">
            <summary>设置 FilterTermDocs.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances.Doc">
            <summary>设置 FilterTermDocs.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances.Freq">
            <summary>设置 FilterTermDocs.Freq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances.Next">
            <summary>设置 FilterTermDocs.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances.ReadInt32ArrayInt32Array">
            <summary>设置 FilterTermDocs.Read(Int32[] docs, Int32[] freqs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances.SeekTerm">
            <summary>设置 FilterTermDocs.Seek(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances.SeekTermEnum">
            <summary>设置 FilterTermDocs.Seek(TermEnum termEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermDocs.AllInstances.SkipToInt32">
            <summary>设置 FilterTermDocs.SkipTo(Int32 i) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum">
            <summary>Lucene.Net.Index.FilterIndexReader+FilterTermEnum 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.#ctor(Lucene.Net.Index.FilterIndexReader.FilterTermEnum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.Close">
            <summary>设置 FilterTermEnum.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.ConstructorTermEnum">
            <summary>设置 FilterTermEnum.FilterTermEnum(TermEnum in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.DocFreq">
            <summary>设置 FilterTermEnum.DocFreq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.Next">
            <summary>设置 FilterTermEnum.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.Term">
            <summary>设置 FilterTermEnum.Term() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.AllInstances.Close">
            <summary>设置 FilterTermEnum.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.AllInstances.DocFreq">
            <summary>设置 FilterTermEnum.DocFreq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.AllInstances.Next">
            <summary>设置 FilterTermEnum.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermEnum.AllInstances.Term">
            <summary>设置 FilterTermEnum.Term() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions">
            <summary>Lucene.Net.Index.FilterIndexReader+FilterTermPositions 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.#ctor(Lucene.Net.Index.FilterIndexReader.FilterTermPositions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.Bind(Lucene.Net.Index.TermDocs)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.Bind(Lucene.Net.Index.TermPositions)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.ConstructorTermPositions">
            <summary>设置 FilterTermPositions.FilterTermPositions(TermPositions in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.GetPayloadByteArrayInt32">
            <summary>设置 FilterTermPositions.GetPayload(Byte[] data, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.GetPayloadLength">
            <summary>设置 FilterTermPositions.GetPayloadLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.IsPayloadAvailable">
            <summary>设置 FilterTermPositions.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.NextPosition">
            <summary>设置 FilterTermPositions.NextPosition() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.AllInstances.GetPayloadByteArrayInt32">
            <summary>设置 FilterTermPositions.GetPayload(Byte[] data, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.AllInstances.GetPayloadLength">
            <summary>设置 FilterTermPositions.GetPayloadLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.AllInstances.IsPayloadAvailable">
            <summary>设置 FilterTermPositions.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimFilterIndexReader.ShimFilterTermPositions.AllInstances.NextPosition">
            <summary>设置 FilterTermPositions.NextPosition() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexCommit">
            <summary>Lucene.Net.Index.IndexCommit 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexCommit.#ctor(Lucene.Net.Index.IndexCommit)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexCommit.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexCommit.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexCommit.Bind(Lucene.Net.Index.IndexCommitPoint)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexCommit.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexCommit.Constructor">
            <summary>设置 IndexCommit.IndexCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexCommit.EqualsObject">
            <summary>设置 IndexCommit.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexCommit.GetHashCode">
            <summary>设置 IndexCommit.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexCommit.GetTimestamp">
            <summary>设置 IndexCommit.GetTimestamp() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexCommit.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexCommit.AllInstances.EqualsObject">
            <summary>设置 IndexCommit.Equals(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexCommit.AllInstances.GetHashCode01">
            <summary>设置 IndexCommit.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexCommit.AllInstances.GetTimestamp">
            <summary>设置 IndexCommit.GetTimestamp() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexFileDeleter">
            <summary>Lucene.Net.Index.IndexFileDeleter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.#ctor(Lucene.Net.Index.IndexFileDeleter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.CheckpointSegmentInfosBoolean">
            <summary>设置 IndexFileDeleter.Checkpoint(SegmentInfos segmentInfos, Boolean isCommit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.Close">
            <summary>设置 IndexFileDeleter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.ConstructorDirectoryIndexDeletionPolicySegmentInfosStreamWriterDocumentsWriterDictionaryOfStringString">
            <summary>设置 IndexFileDeleter.IndexFileDeleter(Directory directory, IndexDeletionPolicy policy, SegmentInfos segmentInfos, StreamWriter infoStream, DocumentsWriter docWriter, Dictionary`2&lt;String,String&gt; synced) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.DecRefICollectionOfString">
            <summary>设置 IndexFileDeleter.DecRef(ICollection`1&lt;String&gt; files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.DecRefSegmentInfos">
            <summary>设置 IndexFileDeleter.DecRef(SegmentInfos segmentInfos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.DecRefString">
            <summary>设置 IndexFileDeleter.DecRef(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.DeleteCommits">
            <summary>设置 IndexFileDeleter.DeleteCommits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.DeleteFileString">
            <summary>设置 IndexFileDeleter.DeleteFile(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.DeleteFilesIList">
            <summary>设置 IndexFileDeleter.DeleteFiles(IList files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.DeleteNewFilesICollectionOfString">
            <summary>设置 IndexFileDeleter.DeleteNewFiles(ICollection`1&lt;String&gt; files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.DeletePendingFiles">
            <summary>设置 IndexFileDeleter.DeletePendingFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.ExistsString">
            <summary>设置 IndexFileDeleter.Exists(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.GetLastSegmentInfos">
            <summary>设置 IndexFileDeleter.GetLastSegmentInfos() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.IncRefIListOfString">
            <summary>设置 IndexFileDeleter.IncRef(IList`1&lt;String&gt; files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.IncRefSegmentInfosBoolean">
            <summary>设置 IndexFileDeleter.IncRef(SegmentInfos segmentInfos, Boolean isCommit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.IncRefString">
            <summary>设置 IndexFileDeleter.IncRef(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.MessageString">
            <summary>设置 IndexFileDeleter.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.Refresh">
            <summary>设置 IndexFileDeleter.Refresh() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.RefreshString">
            <summary>设置 IndexFileDeleter.Refresh(String segmentName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.SetInfoStreamStreamWriter">
            <summary>设置 IndexFileDeleter.SetInfoStream(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.StaticConstructor">
            <summary>设置 IndexFileDeleter.IndexFileDeleter() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.CheckpointSegmentInfosBoolean">
            <summary>设置 IndexFileDeleter.Checkpoint(SegmentInfos segmentInfos, Boolean isCommit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.Close">
            <summary>设置 IndexFileDeleter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.DecRefICollectionOfString">
            <summary>设置 IndexFileDeleter.DecRef(ICollection`1&lt;String&gt; files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.DecRefSegmentInfos">
            <summary>设置 IndexFileDeleter.DecRef(SegmentInfos segmentInfos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.DecRefString">
            <summary>设置 IndexFileDeleter.DecRef(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.DeleteCommits">
            <summary>设置 IndexFileDeleter.DeleteCommits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.DeleteFileString">
            <summary>设置 IndexFileDeleter.DeleteFile(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.DeleteFilesIList">
            <summary>设置 IndexFileDeleter.DeleteFiles(IList files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.DeleteNewFilesICollectionOfString">
            <summary>设置 IndexFileDeleter.DeleteNewFiles(ICollection`1&lt;String&gt; files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.DeletePendingFiles">
            <summary>设置 IndexFileDeleter.DeletePendingFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.ExistsString">
            <summary>设置 IndexFileDeleter.Exists(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.GetLastSegmentInfos">
            <summary>设置 IndexFileDeleter.GetLastSegmentInfos() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.IncRefIListOfString">
            <summary>设置 IndexFileDeleter.IncRef(IList`1&lt;String&gt; files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.IncRefSegmentInfosBoolean">
            <summary>设置 IndexFileDeleter.IncRef(SegmentInfos segmentInfos, Boolean isCommit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.IncRefString">
            <summary>设置 IndexFileDeleter.IncRef(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.MessageString">
            <summary>设置 IndexFileDeleter.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.Refresh">
            <summary>设置 IndexFileDeleter.Refresh() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.RefreshString">
            <summary>设置 IndexFileDeleter.Refresh(String segmentName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileDeleter.AllInstances.SetInfoStreamStreamWriter">
            <summary>设置 IndexFileDeleter.SetInfoStream(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter">
            <summary>Lucene.Net.Index.IndexFileNameFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.#ctor(Lucene.Net.Index.IndexFileNameFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.AcceptFileInfoString">
            <summary>设置 IndexFileNameFilter.Accept(FileInfo dir, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.Constructor">
            <summary>设置 IndexFileNameFilter.IndexFileNameFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.GetFilter">
            <summary>设置 IndexFileNameFilter.GetFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.IsCFSFileString">
            <summary>设置 IndexFileNameFilter.IsCFSFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.StaticConstructor">
            <summary>设置 IndexFileNameFilter.IndexFileNameFilter() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.AllInstances.AcceptFileInfoString">
            <summary>设置 IndexFileNameFilter.Accept(FileInfo dir, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNameFilter.AllInstances.IsCFSFileString">
            <summary>设置 IndexFileNameFilter.IsCFSFile(String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexFileNames">
            <summary>Lucene.Net.Index.IndexFileNames 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileNames.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileNames.#ctor(Lucene.Net.Index.IndexFileNames)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileNames.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexFileNames.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNames.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNames.Constructor">
            <summary>设置 IndexFileNames.IndexFileNames() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNames.FileNameFromGenerationStringStringInt64">
            <summary>设置 IndexFileNames.FileNameFromGeneration(String base_Renamed, String extension, Int64 gen) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNames.IsDocStoreFileString">
            <summary>设置 IndexFileNames.IsDocStoreFile(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNames.SegmentFileNameStringString">
            <summary>设置 IndexFileNames.SegmentFileName(String segmentName, String ext) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexFileNames.StaticConstructor">
            <summary>设置 IndexFileNames.IndexFileNames() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexFileNames.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexReader">
            <summary>Lucene.Net.Index.IndexReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.#ctor(Lucene.Net.Index.IndexReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AcquireWriteLock">
            <summary>设置 IndexReader.AcquireWriteLock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Clone">
            <summary>设置 IndexReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.CloneBoolean">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Close">
            <summary>设置 IndexReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Commit">
            <summary>设置 IndexReader.Commit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.CommitIDictionaryOfStringString">
            <summary>设置 IndexReader.Commit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Constructor">
            <summary>设置 IndexReader.IndexReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ConstructorDirectory">
            <summary>设置 IndexReader.IndexReader(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.DecRef">
            <summary>设置 IndexReader.DecRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.DeleteDocumentInt32">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.DeleteDocumentsTerm">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Directory">
            <summary>设置 IndexReader.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Dispose">
            <summary>设置 IndexReader.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.DoCommitIDictionaryOfStringString">
            <summary>设置 IndexReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.DocumentInt32">
            <summary>设置 IndexReader.Document(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.EnsureOpen">
            <summary>设置 IndexReader.EnsureOpen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Flush">
            <summary>设置 IndexReader.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.FlushIDictionaryOfStringString">
            <summary>设置 IndexReader.Flush(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetCommitUserData">
            <summary>设置 IndexReader.GetCommitUserData() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetCommitUserDataDirectory">
            <summary>设置 IndexReader.GetCommitUserData(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetCurrentVersionDirectory">
            <summary>设置 IndexReader.GetCurrentVersion(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetCurrentVersionFileInfo">
            <summary>设置 IndexReader.GetCurrentVersion(FileInfo directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetCurrentVersionString">
            <summary>设置 IndexReader.GetCurrentVersion(String directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetDeletesCacheKey">
            <summary>设置 IndexReader.GetDeletesCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetDisableFakeNorms">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetFieldCacheKey">
            <summary>设置 IndexReader.GetFieldCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetIndexCommit">
            <summary>设置 IndexReader.GetIndexCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetRefCount">
            <summary>设置 IndexReader.GetRefCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetSequentialSubReaders">
            <summary>设置 IndexReader.GetSequentialSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetTermInfosIndexDivisor">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetUniqueTermCount">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.GetVersion">
            <summary>设置 IndexReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.HasNormsString">
            <summary>设置 IndexReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.IncRef">
            <summary>设置 IndexReader.IncRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.IndexExistsDirectory">
            <summary>设置 IndexReader.IndexExists(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.IndexExistsFileInfo">
            <summary>设置 IndexReader.IndexExists(FileInfo directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.IndexExistsString">
            <summary>设置 IndexReader.IndexExists(String directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.IsCurrent">
            <summary>设置 IndexReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.IsLockedDirectory">
            <summary>设置 IndexReader.IsLocked(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.IsLockedString">
            <summary>设置 IndexReader.IsLocked(String directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.IsOptimized">
            <summary>设置 IndexReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.LastModifiedDirectory">
            <summary>设置 IndexReader.LastModified(Directory directory2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.LastModifiedFileInfo">
            <summary>设置 IndexReader.LastModified(FileInfo fileDirectory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.LastModifiedString">
            <summary>设置 IndexReader.LastModified(String directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ListCommitsDirectory">
            <summary>设置 IndexReader.ListCommits(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.MainStringArray">
            <summary>设置 IndexReader.Main(String[] args) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.NumDeletedDocs">
            <summary>设置 IndexReader.NumDeletedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenDirectory">
            <summary>设置 IndexReader.Open(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenDirectoryBoolean">
            <summary>设置 IndexReader.Open(Directory directory, Boolean readOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenDirectoryIndexDeletionPolicy">
            <summary>设置 IndexReader.Open(Directory directory, IndexDeletionPolicy deletionPolicy) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenDirectoryIndexDeletionPolicyBoolean">
            <summary>设置 IndexReader.Open(Directory directory, IndexDeletionPolicy deletionPolicy, Boolean readOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenDirectoryIndexDeletionPolicyBooleanInt32">
            <summary>设置 IndexReader.Open(Directory directory, IndexDeletionPolicy deletionPolicy, Boolean readOnly, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenDirectoryIndexDeletionPolicyIndexCommitBooleanInt32">
            <summary>设置 IndexReader.Open(Directory directory, IndexDeletionPolicy deletionPolicy, IndexCommit commit, Boolean readOnly, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenFileInfo">
            <summary>设置 IndexReader.Open(FileInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenFileInfoBoolean">
            <summary>设置 IndexReader.Open(FileInfo path, Boolean readOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenIndexCommit">
            <summary>设置 IndexReader.Open(IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenIndexCommitBoolean">
            <summary>设置 IndexReader.Open(IndexCommit commit, Boolean readOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenIndexCommitIndexDeletionPolicy">
            <summary>设置 IndexReader.Open(IndexCommit commit, IndexDeletionPolicy deletionPolicy) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenIndexCommitIndexDeletionPolicyBoolean">
            <summary>设置 IndexReader.Open(IndexCommit commit, IndexDeletionPolicy deletionPolicy, Boolean readOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenIndexCommitIndexDeletionPolicyBooleanInt32">
            <summary>设置 IndexReader.Open(IndexCommit commit, IndexDeletionPolicy deletionPolicy, Boolean readOnly, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenString">
            <summary>设置 IndexReader.Open(String path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.OpenStringBoolean">
            <summary>设置 IndexReader.Open(String path, Boolean readOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.Reopen">
            <summary>设置 IndexReader.Reopen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ReopenBoolean">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ReopenIndexCommit">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.SetDisableFakeNormsBoolean">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.SetNormInt32StringByte">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.SetNormInt32StringSingle">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.SetTermInfosIndexDivisorInt32">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.StaticConstructor">
            <summary>设置 IndexReader.IndexReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.TermDocsTerm">
            <summary>设置 IndexReader.TermDocs(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.TermPositionsTerm">
            <summary>设置 IndexReader.TermPositions(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.UndeleteAll">
            <summary>设置 IndexReader.UndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.UnlockDirectory">
            <summary>设置 IndexReader.Unlock(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.hasChanges_ForNUnitGet">
            <summary>设置 IndexReader.get_hasChanges_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.AcquireWriteLock">
            <summary>设置 IndexReader.AcquireWriteLock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.Clone">
            <summary>设置 IndexReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.CloneBoolean">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.Close">
            <summary>设置 IndexReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.Commit">
            <summary>设置 IndexReader.Commit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.CommitIDictionaryOfStringString">
            <summary>设置 IndexReader.Commit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.DecRef">
            <summary>设置 IndexReader.DecRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.DeleteDocumentInt32">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.DeleteDocumentsTerm">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.Directory">
            <summary>设置 IndexReader.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.Dispose">
            <summary>设置 IndexReader.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.DoCommitIDictionaryOfStringString">
            <summary>设置 IndexReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.DocumentInt32">
            <summary>设置 IndexReader.Document(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.EnsureOpen">
            <summary>设置 IndexReader.EnsureOpen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.Flush">
            <summary>设置 IndexReader.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.FlushIDictionaryOfStringString">
            <summary>设置 IndexReader.Flush(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetCommitUserData">
            <summary>设置 IndexReader.GetCommitUserData() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetDeletesCacheKey">
            <summary>设置 IndexReader.GetDeletesCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetDisableFakeNorms">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetFieldCacheKey">
            <summary>设置 IndexReader.GetFieldCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetIndexCommit">
            <summary>设置 IndexReader.GetIndexCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetRefCount">
            <summary>设置 IndexReader.GetRefCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetSequentialSubReaders">
            <summary>设置 IndexReader.GetSequentialSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetTermInfosIndexDivisor">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetUniqueTermCount">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.GetVersion">
            <summary>设置 IndexReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.HasNormsString">
            <summary>设置 IndexReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.IncRef">
            <summary>设置 IndexReader.IncRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.IsCurrent">
            <summary>设置 IndexReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.IsOptimized">
            <summary>设置 IndexReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.NumDeletedDocs">
            <summary>设置 IndexReader.NumDeletedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.Reopen">
            <summary>设置 IndexReader.Reopen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.ReopenBoolean">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.ReopenIndexCommit">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.SetDisableFakeNormsBoolean">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.SetNormInt32StringByte">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.SetNormInt32StringSingle">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.SetTermInfosIndexDivisorInt32">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.TermDocsTerm">
            <summary>设置 IndexReader.TermDocs(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.TermPositionsTerm">
            <summary>设置 IndexReader.TermPositions(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.UndeleteAll">
            <summary>设置 IndexReader.UndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.AllInstances.hasChanges_ForNUnitGet">
            <summary>设置 IndexReader.get_hasChanges_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption">
            <summary>Lucene.Net.Index.IndexReader+FieldOption 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.#ctor(Lucene.Net.Index.IndexReader.FieldOption)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.Constructor">
            <summary>设置 FieldOption.FieldOption() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.ConstructorString">
            <summary>设置 FieldOption.FieldOption(String option) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.StaticConstructor">
            <summary>设置 FieldOption.FieldOption() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.ToString">
            <summary>设置 FieldOption.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexReader.ShimFieldOption.AllInstances.ToString01">
            <summary>设置 FieldOption.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexWriter">
            <summary>Lucene.Net.Index.IndexWriter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.#ctor(Lucene.Net.Index.IndexWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Abort">
            <summary>设置 IndexWriter.Abort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AcquireRead">
            <summary>设置 IndexWriter.AcquireRead() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AcquireWrite">
            <summary>设置 IndexWriter.AcquireWrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AddDocumentDocument">
            <summary>设置 IndexWriter.AddDocument(Document doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AddDocumentDocumentAnalyzer">
            <summary>设置 IndexWriter.AddDocument(Document doc, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AddIndexesDirectoryArray">
            <summary>设置 IndexWriter.AddIndexes(Directory[] dirs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AddIndexesIndexReaderArray">
            <summary>设置 IndexWriter.AddIndexes(IndexReader[] readers) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AddIndexesNoOptimizeDirectoryArray">
            <summary>设置 IndexWriter.AddIndexesNoOptimize(Directory[] dirs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AddMergeExceptionMergePolicyOneMerge">
            <summary>设置 IndexWriter.AddMergeException(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ApplyDeletes">
            <summary>设置 IndexWriter.ApplyDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.BlockAddIndexesBoolean">
            <summary>设置 IndexWriter.BlockAddIndexes(Boolean includePendingClose) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Checkpoint">
            <summary>设置 IndexWriter.Checkpoint() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Close">
            <summary>设置 IndexWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.CloseBoolean">
            <summary>设置 IndexWriter.Close(Boolean waitForMerges) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.CloseInternalBoolean">
            <summary>设置 IndexWriter.CloseInternal(Boolean waitForMerges) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.CloseMergeReadersMergePolicyOneMergeBoolean">
            <summary>设置 IndexWriter.CloseMergeReaders(OneMerge merge, Boolean suppressExceptions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Commit">
            <summary>设置 IndexWriter.Commit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.CommitIDictionaryOfStringString">
            <summary>设置 IndexWriter.Commit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.CommitInt64">
            <summary>设置 IndexWriter.Commit(Int64 sizeInBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.CommitMergeMergePolicyOneMergeSegmentMergerInt32SegmentReader">
            <summary>设置 IndexWriter.CommitMerge(OneMerge merge, SegmentMerger merger, Int32 mergedDocCount, SegmentReader mergedReader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.CommitMergedDeletesMergePolicyOneMergeSegmentReader">
            <summary>设置 IndexWriter.CommitMergedDeletes(OneMerge merge, SegmentReader mergeReader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.CommitTransaction">
            <summary>设置 IndexWriter.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryAnalyzer">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Analyzer a) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryAnalyzerBoolean">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Analyzer a, Boolean create) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryAnalyzerBooleanIndexDeletionPolicyIndexWriterMaxFieldLength">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Analyzer a, Boolean create, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryAnalyzerBooleanIndexWriterMaxFieldLength">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Analyzer a, Boolean create, MaxFieldLength mfl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryAnalyzerIndexDeletionPolicyIndexWriterMaxFieldLength">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryAnalyzerIndexDeletionPolicyIndexWriterMaxFieldLengthIndexCommit">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl, IndexCommit commit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryAnalyzerIndexWriterMaxFieldLength">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Analyzer a, MaxFieldLength mfl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryBooleanAnalyzer">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Boolean autoCommit, Analyzer a) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryBooleanAnalyzerBoolean">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Boolean autoCommit, Analyzer a, Boolean create) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryBooleanAnalyzerBooleanIndexDeletionPolicy">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Boolean autoCommit, Analyzer a, Boolean create, IndexDeletionPolicy deletionPolicy) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorDirectoryBooleanAnalyzerIndexDeletionPolicy">
            <summary>设置 IndexWriter.IndexWriter(Directory d, Boolean autoCommit, Analyzer a, IndexDeletionPolicy deletionPolicy) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorFileInfoAnalyzer">
            <summary>设置 IndexWriter.IndexWriter(FileInfo path, Analyzer a) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorFileInfoAnalyzerBoolean">
            <summary>设置 IndexWriter.IndexWriter(FileInfo path, Analyzer a, Boolean create) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorFileInfoAnalyzerBooleanIndexWriterMaxFieldLength">
            <summary>设置 IndexWriter.IndexWriter(FileInfo path, Analyzer a, Boolean create, MaxFieldLength mfl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorFileInfoAnalyzerIndexWriterMaxFieldLength">
            <summary>设置 IndexWriter.IndexWriter(FileInfo path, Analyzer a, MaxFieldLength mfl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorStringAnalyzer">
            <summary>设置 IndexWriter.IndexWriter(String path, Analyzer a) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorStringAnalyzerBoolean">
            <summary>设置 IndexWriter.IndexWriter(String path, Analyzer a, Boolean create) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorStringAnalyzerBooleanIndexWriterMaxFieldLength">
            <summary>设置 IndexWriter.IndexWriter(String path, Analyzer a, Boolean create, MaxFieldLength mfl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ConstructorStringAnalyzerIndexWriterMaxFieldLength">
            <summary>设置 IndexWriter.IndexWriter(String path, Analyzer a, MaxFieldLength mfl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DeleteAll">
            <summary>设置 IndexWriter.DeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DeleteDocumentsQuery">
            <summary>设置 IndexWriter.DeleteDocuments(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DeleteDocumentsQueryArray">
            <summary>设置 IndexWriter.DeleteDocuments(Query[] queries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DeleteDocumentsTerm">
            <summary>设置 IndexWriter.DeleteDocuments(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DeleteDocumentsTermArray">
            <summary>设置 IndexWriter.DeleteDocuments(Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Dispose">
            <summary>设置 IndexWriter.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DoAfterFlush">
            <summary>设置 IndexWriter.DoAfterFlush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DoBeforeFlush">
            <summary>设置 IndexWriter.DoBeforeFlush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DoCommitBeforeMergeCFSMergePolicyOneMerge">
            <summary>设置 IndexWriter.DoCommitBeforeMergeCFS(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DoFlushBooleanBoolean">
            <summary>设置 IndexWriter.DoFlush(Boolean flushDocStores, Boolean flushDeletes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DoFlushInternalBooleanBoolean">
            <summary>设置 IndexWriter.DoFlushInternal(Boolean flushDocStores, Boolean flushDeletes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DoWait">
            <summary>设置 IndexWriter.DoWait() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.DocCount">
            <summary>设置 IndexWriter.DocCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.EnsureContiguousMergeMergePolicyOneMerge">
            <summary>设置 IndexWriter.EnsureContiguousMerge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.EnsureOpen">
            <summary>设置 IndexWriter.EnsureOpen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.EnsureOpenBoolean">
            <summary>设置 IndexWriter.EnsureOpen(Boolean includePendingClose) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ExpungeDeletes">
            <summary>设置 IndexWriter.ExpungeDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ExpungeDeletesBoolean">
            <summary>设置 IndexWriter.ExpungeDeletes(Boolean doWait) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.FinishAddIndexes">
            <summary>设置 IndexWriter.FinishAddIndexes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.FinishCommit">
            <summary>设置 IndexWriter.FinishCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.FinishMergesBoolean">
            <summary>设置 IndexWriter.FinishMerges(Boolean waitForMerges) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.FinishSyncStringBoolean">
            <summary>设置 IndexWriter.FinishSync(String fileName, Boolean success) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Flush">
            <summary>设置 IndexWriter.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.FlushBooleanBooleanBoolean">
            <summary>设置 IndexWriter.Flush(Boolean triggerMerge, Boolean flushDocStores, Boolean flushDeletes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.FlushDocStores">
            <summary>设置 IndexWriter.FlushDocStores() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetAllowMinus1Position">
            <summary>设置 IndexWriter.GetAllowMinus1Position() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetAnalyzer">
            <summary>设置 IndexWriter.GetAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetBufferedDeleteTermsSize">
            <summary>设置 IndexWriter.GetBufferedDeleteTermsSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetDefaultInfoStream">
            <summary>设置 IndexWriter.GetDefaultInfoStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetDefaultWriteLockTimeout">
            <summary>设置 IndexWriter.GetDefaultWriteLockTimeout() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetDirectory">
            <summary>设置 IndexWriter.GetDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetDocCountInt32">
            <summary>设置 IndexWriter.GetDocCount(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetFlushCount">
            <summary>设置 IndexWriter.GetFlushCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetFlushDeletesCount">
            <summary>设置 IndexWriter.GetFlushDeletesCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetInfoStream">
            <summary>设置 IndexWriter.GetInfoStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetLogMergePolicy">
            <summary>设置 IndexWriter.GetLogMergePolicy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMaxBufferedDeleteTerms">
            <summary>设置 IndexWriter.GetMaxBufferedDeleteTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMaxBufferedDocs">
            <summary>设置 IndexWriter.GetMaxBufferedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMaxFieldLength">
            <summary>设置 IndexWriter.GetMaxFieldLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMaxMergeDocs">
            <summary>设置 IndexWriter.GetMaxMergeDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMaxSyncPauseSeconds">
            <summary>设置 IndexWriter.GetMaxSyncPauseSeconds() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMergeFactor">
            <summary>设置 IndexWriter.GetMergeFactor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMergePolicy">
            <summary>设置 IndexWriter.GetMergePolicy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMergeScheduler">
            <summary>设置 IndexWriter.GetMergeScheduler() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetMergedSegmentWarmer">
            <summary>设置 IndexWriter.GetMergedSegmentWarmer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetNextExternalMerge">
            <summary>设置 IndexWriter.GetNextExternalMerge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetNextMerge">
            <summary>设置 IndexWriter.GetNextMerge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetNextMerge_forNUnit">
            <summary>设置 IndexWriter.GetNextMerge_forNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetNumBufferedDeleteTerms">
            <summary>设置 IndexWriter.GetNumBufferedDeleteTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetNumBufferedDocuments">
            <summary>设置 IndexWriter.GetNumBufferedDocuments() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetRAMBufferSizeMB">
            <summary>设置 IndexWriter.GetRAMBufferSizeMB() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetReader">
            <summary>设置 IndexWriter.GetReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetReaderInt32">
            <summary>设置 IndexWriter.GetReader(Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetReaderTermsIndexDivisor">
            <summary>设置 IndexWriter.GetReaderTermsIndexDivisor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetSegmentCount">
            <summary>设置 IndexWriter.GetSegmentCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetSimilarity">
            <summary>设置 IndexWriter.GetSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetTermIndexInterval">
            <summary>设置 IndexWriter.GetTermIndexInterval() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetUseCompoundFile">
            <summary>设置 IndexWriter.GetUseCompoundFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.GetWriteLockTimeout">
            <summary>设置 IndexWriter.GetWriteLockTimeout() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.HandleMergeExceptionExceptionMergePolicyOneMerge">
            <summary>设置 IndexWriter.HandleMergeException(Exception t, OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.HandleOOMOutOfMemoryExceptionString">
            <summary>设置 IndexWriter.HandleOOM(OutOfMemoryException oom, String location) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.HasDeletions">
            <summary>设置 IndexWriter.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.HasExternalSegments">
            <summary>设置 IndexWriter.HasExternalSegments() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.InitBlock">
            <summary>设置 IndexWriter.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.IsClosed">
            <summary>设置 IndexWriter.IsClosed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.IsLockedDirectory">
            <summary>设置 IndexWriter.IsLocked(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.IsLockedString">
            <summary>设置 IndexWriter.IsLocked(String directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.IsOpenBoolean">
            <summary>设置 IndexWriter.IsOpen(Boolean includePendingClose) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MaxDoc">
            <summary>设置 IndexWriter.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MaybeMerge">
            <summary>设置 IndexWriter.MaybeMerge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MaybeMergeBoolean">
            <summary>设置 IndexWriter.MaybeMerge(Boolean optimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MaybeMergeInt32Boolean">
            <summary>设置 IndexWriter.MaybeMerge(Int32 maxNumSegmentsOptimize, Boolean optimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MergeFinishMergePolicyOneMerge">
            <summary>设置 IndexWriter.MergeFinish(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MergeInitMergePolicyOneMerge">
            <summary>设置 IndexWriter.MergeInit(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MergeMergePolicyOneMerge">
            <summary>设置 IndexWriter.Merge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MergeMiddleMergePolicyOneMerge">
            <summary>设置 IndexWriter.MergeMiddle(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MergeSuccessMergePolicyOneMerge">
            <summary>设置 IndexWriter.MergeSuccess(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Merge_ForNUnitMergePolicyOneMerge">
            <summary>设置 IndexWriter.Merge_ForNUnit(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MessageState">
            <summary>设置 IndexWriter.MessageState() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.MessageString">
            <summary>设置 IndexWriter.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.NewSegmentName">
            <summary>设置 IndexWriter.NewSegmentName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.NewestSegment">
            <summary>设置 IndexWriter.NewestSegment() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.NoDupDirsDirectoryArray">
            <summary>设置 IndexWriter.NoDupDirs(Directory[] dirs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.NrtIsCurrentSegmentInfos">
            <summary>设置 IndexWriter.NrtIsCurrent(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.NumDeletedDocsSegmentInfo">
            <summary>设置 IndexWriter.NumDeletedDocs(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.NumDocs">
            <summary>设置 IndexWriter.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.NumRamDocs">
            <summary>设置 IndexWriter.NumRamDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Optimize">
            <summary>设置 IndexWriter.Optimize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.OptimizeBoolean">
            <summary>设置 IndexWriter.Optimize(Boolean doWait) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.OptimizeInt32">
            <summary>设置 IndexWriter.Optimize(Int32 maxNumSegments) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.OptimizeInt32Boolean">
            <summary>设置 IndexWriter.Optimize(Int32 maxNumSegments, Boolean doWait) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.OptimizeMergesPending">
            <summary>设置 IndexWriter.OptimizeMergesPending() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.PrepareCommit">
            <summary>设置 IndexWriter.PrepareCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.PrepareCommitIDictionaryOfStringString">
            <summary>设置 IndexWriter.PrepareCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.PrepareCommitIDictionaryOfStringStringBoolean">
            <summary>设置 IndexWriter.PrepareCommit(IDictionary`2&lt;String,String&gt; commitUserData, Boolean internal_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.PushMaxBufferedDocs">
            <summary>设置 IndexWriter.PushMaxBufferedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.RamSizeInBytes">
            <summary>设置 IndexWriter.RamSizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.RegisterMergeMergePolicyOneMerge">
            <summary>设置 IndexWriter.RegisterMerge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ReleaseRead">
            <summary>设置 IndexWriter.ReleaseRead() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ReleaseWrite">
            <summary>设置 IndexWriter.ReleaseWrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ResetMergeExceptions">
            <summary>设置 IndexWriter.ResetMergeExceptions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ResolveExternalSegments">
            <summary>设置 IndexWriter.ResolveExternalSegments() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ResumeAddIndexes">
            <summary>设置 IndexWriter.ResumeAddIndexes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Rollback">
            <summary>设置 IndexWriter.Rollback() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.RollbackInternal">
            <summary>设置 IndexWriter.RollbackInternal() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.RollbackTransaction">
            <summary>设置 IndexWriter.RollbackTransaction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SegString">
            <summary>设置 IndexWriter.SegString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SegStringSegmentInfos">
            <summary>设置 IndexWriter.SegString(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetAllowMinus1Position">
            <summary>设置 IndexWriter.SetAllowMinus1Position() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetDefaultInfoStreamStreamWriter">
            <summary>设置 IndexWriter.SetDefaultInfoStream(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetDefaultWriteLockTimeoutInt64">
            <summary>设置 IndexWriter.SetDefaultWriteLockTimeout(Int64 writeLockTimeout) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetDiagnosticsSegmentInfoString">
            <summary>设置 IndexWriter.SetDiagnostics(SegmentInfo info, String source) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetDiagnosticsSegmentInfoStringIDictionaryOfStringString">
            <summary>设置 IndexWriter.SetDiagnostics(SegmentInfo info, String source, IDictionary`2&lt;String,String&gt; details) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetInfoStreamStreamWriter">
            <summary>设置 IndexWriter.SetInfoStream(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMaxBufferedDeleteTermsInt32">
            <summary>设置 IndexWriter.SetMaxBufferedDeleteTerms(Int32 maxBufferedDeleteTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMaxBufferedDocsInt32">
            <summary>设置 IndexWriter.SetMaxBufferedDocs(Int32 maxBufferedDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMaxFieldLengthInt32">
            <summary>设置 IndexWriter.SetMaxFieldLength(Int32 maxFieldLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMaxMergeDocsInt32">
            <summary>设置 IndexWriter.SetMaxMergeDocs(Int32 maxMergeDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMaxSyncPauseSecondsDouble">
            <summary>设置 IndexWriter.SetMaxSyncPauseSeconds(Double seconds) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMergeDocStoreIsCompoundFileMergePolicyOneMerge">
            <summary>设置 IndexWriter.SetMergeDocStoreIsCompoundFile(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMergeFactorInt32">
            <summary>设置 IndexWriter.SetMergeFactor(Int32 mergeFactor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMergePolicyMergePolicy">
            <summary>设置 IndexWriter.SetMergePolicy(MergePolicy mp) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMergeSchedulerMergeScheduler">
            <summary>设置 IndexWriter.SetMergeScheduler(MergeScheduler mergeScheduler) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMergedSegmentWarmerIndexWriterIndexReaderWarmer">
            <summary>设置 IndexWriter.SetMergedSegmentWarmer(IndexReaderWarmer warmer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetMessageIDStreamWriter">
            <summary>设置 IndexWriter.SetMessageID(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetRAMBufferSizeMBDouble">
            <summary>设置 IndexWriter.SetRAMBufferSizeMB(Double mb) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetReaderTermsIndexDivisorInt32">
            <summary>设置 IndexWriter.SetReaderTermsIndexDivisor(Int32 divisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetRollbackSegmentInfosSegmentInfos">
            <summary>设置 IndexWriter.SetRollbackSegmentInfos(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetSimilaritySimilarity">
            <summary>设置 IndexWriter.SetSimilarity(Similarity similarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetTermIndexIntervalInt32">
            <summary>设置 IndexWriter.SetTermIndexInterval(Int32 interval) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetUseCompoundFileBoolean">
            <summary>设置 IndexWriter.SetUseCompoundFile(Boolean value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SetWriteLockTimeoutInt64">
            <summary>设置 IndexWriter.SetWriteLockTimeout(Int64 writeLockTimeout) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShouldClose">
            <summary>设置 IndexWriter.ShouldClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.StartCommitInt64IDictionaryOfStringString">
            <summary>设置 IndexWriter.StartCommit(Int64 sizeInBytes, IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.StartSyncStringICollectionOfString">
            <summary>设置 IndexWriter.StartSync(String fileName, ICollection`1&lt;String&gt; pending) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.StartTransactionBoolean">
            <summary>设置 IndexWriter.StartTransaction(Boolean haveReadLock) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.StaticConstructor">
            <summary>设置 IndexWriter.IndexWriter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.SyncPauseInt64">
            <summary>设置 IndexWriter.SyncPause(Int64 sizeInBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.TestPointString">
            <summary>设置 IndexWriter.TestPoint(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.UnlockDirectory">
            <summary>设置 IndexWriter.Unlock(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.UpdateDocumentTermDocument">
            <summary>设置 IndexWriter.UpdateDocument(Term term, Document doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.UpdateDocumentTermDocumentAnalyzer">
            <summary>设置 IndexWriter.UpdateDocument(Term term, Document doc, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.UpdatePendingMergesInt32Boolean">
            <summary>设置 IndexWriter.UpdatePendingMerges(Int32 maxNumSegmentsOptimize, Boolean optimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.UpgradeReadToWrite">
            <summary>设置 IndexWriter.UpgradeReadToWrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.Verbose">
            <summary>设置 IndexWriter.Verbose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.WaitForAllSyncedICollectionOfString">
            <summary>设置 IndexWriter.WaitForAllSynced(ICollection`1&lt;String&gt; syncing) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.WaitForMerges">
            <summary>设置 IndexWriter.WaitForMerges() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter._MergeInitMergePolicyOneMerge">
            <summary>设置 IndexWriter._MergeInit(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Abort">
            <summary>设置 IndexWriter.Abort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.AcquireRead">
            <summary>设置 IndexWriter.AcquireRead() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.AcquireWrite">
            <summary>设置 IndexWriter.AcquireWrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.AddDocumentDocument">
            <summary>设置 IndexWriter.AddDocument(Document doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.AddDocumentDocumentAnalyzer">
            <summary>设置 IndexWriter.AddDocument(Document doc, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.AddIndexesDirectoryArray">
            <summary>设置 IndexWriter.AddIndexes(Directory[] dirs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.AddIndexesIndexReaderArray">
            <summary>设置 IndexWriter.AddIndexes(IndexReader[] readers) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.AddIndexesNoOptimizeDirectoryArray">
            <summary>设置 IndexWriter.AddIndexesNoOptimize(Directory[] dirs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.AddMergeExceptionMergePolicyOneMerge">
            <summary>设置 IndexWriter.AddMergeException(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ApplyDeletes">
            <summary>设置 IndexWriter.ApplyDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.BlockAddIndexesBoolean">
            <summary>设置 IndexWriter.BlockAddIndexes(Boolean includePendingClose) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Checkpoint">
            <summary>设置 IndexWriter.Checkpoint() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Close">
            <summary>设置 IndexWriter.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.CloseBoolean">
            <summary>设置 IndexWriter.Close(Boolean waitForMerges) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.CloseInternalBoolean">
            <summary>设置 IndexWriter.CloseInternal(Boolean waitForMerges) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.CloseMergeReadersMergePolicyOneMergeBoolean">
            <summary>设置 IndexWriter.CloseMergeReaders(OneMerge merge, Boolean suppressExceptions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Commit">
            <summary>设置 IndexWriter.Commit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.CommitIDictionaryOfStringString">
            <summary>设置 IndexWriter.Commit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.CommitInt64">
            <summary>设置 IndexWriter.Commit(Int64 sizeInBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.CommitMergeMergePolicyOneMergeSegmentMergerInt32SegmentReader">
            <summary>设置 IndexWriter.CommitMerge(OneMerge merge, SegmentMerger merger, Int32 mergedDocCount, SegmentReader mergedReader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.CommitMergedDeletesMergePolicyOneMergeSegmentReader">
            <summary>设置 IndexWriter.CommitMergedDeletes(OneMerge merge, SegmentReader mergeReader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.CommitTransaction">
            <summary>设置 IndexWriter.CommitTransaction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DeleteAll">
            <summary>设置 IndexWriter.DeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DeleteDocumentsQuery">
            <summary>设置 IndexWriter.DeleteDocuments(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DeleteDocumentsQueryArray">
            <summary>设置 IndexWriter.DeleteDocuments(Query[] queries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DeleteDocumentsTerm">
            <summary>设置 IndexWriter.DeleteDocuments(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DeleteDocumentsTermArray">
            <summary>设置 IndexWriter.DeleteDocuments(Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Dispose">
            <summary>设置 IndexWriter.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DoAfterFlush">
            <summary>设置 IndexWriter.DoAfterFlush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DoBeforeFlush">
            <summary>设置 IndexWriter.DoBeforeFlush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DoCommitBeforeMergeCFSMergePolicyOneMerge">
            <summary>设置 IndexWriter.DoCommitBeforeMergeCFS(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DoFlushBooleanBoolean">
            <summary>设置 IndexWriter.DoFlush(Boolean flushDocStores, Boolean flushDeletes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DoFlushInternalBooleanBoolean">
            <summary>设置 IndexWriter.DoFlushInternal(Boolean flushDocStores, Boolean flushDeletes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DoWait">
            <summary>设置 IndexWriter.DoWait() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.DocCount">
            <summary>设置 IndexWriter.DocCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.EnsureContiguousMergeMergePolicyOneMerge">
            <summary>设置 IndexWriter.EnsureContiguousMerge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.EnsureOpen">
            <summary>设置 IndexWriter.EnsureOpen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.EnsureOpenBoolean">
            <summary>设置 IndexWriter.EnsureOpen(Boolean includePendingClose) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ExpungeDeletes">
            <summary>设置 IndexWriter.ExpungeDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ExpungeDeletesBoolean">
            <summary>设置 IndexWriter.ExpungeDeletes(Boolean doWait) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.FinishAddIndexes">
            <summary>设置 IndexWriter.FinishAddIndexes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.FinishCommit">
            <summary>设置 IndexWriter.FinishCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.FinishMergesBoolean">
            <summary>设置 IndexWriter.FinishMerges(Boolean waitForMerges) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.FinishSyncStringBoolean">
            <summary>设置 IndexWriter.FinishSync(String fileName, Boolean success) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Flush">
            <summary>设置 IndexWriter.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.FlushBooleanBooleanBoolean">
            <summary>设置 IndexWriter.Flush(Boolean triggerMerge, Boolean flushDocStores, Boolean flushDeletes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.FlushDocStores">
            <summary>设置 IndexWriter.FlushDocStores() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetAllowMinus1Position">
            <summary>设置 IndexWriter.GetAllowMinus1Position() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetAnalyzer">
            <summary>设置 IndexWriter.GetAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetBufferedDeleteTermsSize">
            <summary>设置 IndexWriter.GetBufferedDeleteTermsSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetDirectory">
            <summary>设置 IndexWriter.GetDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetDocCountInt32">
            <summary>设置 IndexWriter.GetDocCount(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetFlushCount">
            <summary>设置 IndexWriter.GetFlushCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetFlushDeletesCount">
            <summary>设置 IndexWriter.GetFlushDeletesCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetInfoStream">
            <summary>设置 IndexWriter.GetInfoStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetLogMergePolicy">
            <summary>设置 IndexWriter.GetLogMergePolicy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMaxBufferedDeleteTerms">
            <summary>设置 IndexWriter.GetMaxBufferedDeleteTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMaxBufferedDocs">
            <summary>设置 IndexWriter.GetMaxBufferedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMaxFieldLength">
            <summary>设置 IndexWriter.GetMaxFieldLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMaxMergeDocs">
            <summary>设置 IndexWriter.GetMaxMergeDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMaxSyncPauseSeconds">
            <summary>设置 IndexWriter.GetMaxSyncPauseSeconds() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMergeFactor">
            <summary>设置 IndexWriter.GetMergeFactor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMergePolicy">
            <summary>设置 IndexWriter.GetMergePolicy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMergeScheduler">
            <summary>设置 IndexWriter.GetMergeScheduler() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetMergedSegmentWarmer">
            <summary>设置 IndexWriter.GetMergedSegmentWarmer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetNextExternalMerge">
            <summary>设置 IndexWriter.GetNextExternalMerge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetNextMerge">
            <summary>设置 IndexWriter.GetNextMerge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetNextMerge_forNUnit">
            <summary>设置 IndexWriter.GetNextMerge_forNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetNumBufferedDeleteTerms">
            <summary>设置 IndexWriter.GetNumBufferedDeleteTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetNumBufferedDocuments">
            <summary>设置 IndexWriter.GetNumBufferedDocuments() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetRAMBufferSizeMB">
            <summary>设置 IndexWriter.GetRAMBufferSizeMB() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetReader">
            <summary>设置 IndexWriter.GetReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetReaderInt32">
            <summary>设置 IndexWriter.GetReader(Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetReaderTermsIndexDivisor">
            <summary>设置 IndexWriter.GetReaderTermsIndexDivisor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetSegmentCount">
            <summary>设置 IndexWriter.GetSegmentCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetSimilarity">
            <summary>设置 IndexWriter.GetSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetTermIndexInterval">
            <summary>设置 IndexWriter.GetTermIndexInterval() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetUseCompoundFile">
            <summary>设置 IndexWriter.GetUseCompoundFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.GetWriteLockTimeout">
            <summary>设置 IndexWriter.GetWriteLockTimeout() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.HandleMergeExceptionExceptionMergePolicyOneMerge">
            <summary>设置 IndexWriter.HandleMergeException(Exception t, OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.HandleOOMOutOfMemoryExceptionString">
            <summary>设置 IndexWriter.HandleOOM(OutOfMemoryException oom, String location) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.HasDeletions">
            <summary>设置 IndexWriter.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.HasExternalSegments">
            <summary>设置 IndexWriter.HasExternalSegments() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.InitBlock">
            <summary>设置 IndexWriter.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.IsClosed">
            <summary>设置 IndexWriter.IsClosed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.IsOpenBoolean">
            <summary>设置 IndexWriter.IsOpen(Boolean includePendingClose) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MaxDoc">
            <summary>设置 IndexWriter.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MaybeMerge">
            <summary>设置 IndexWriter.MaybeMerge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MaybeMergeBoolean">
            <summary>设置 IndexWriter.MaybeMerge(Boolean optimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MaybeMergeInt32Boolean">
            <summary>设置 IndexWriter.MaybeMerge(Int32 maxNumSegmentsOptimize, Boolean optimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MergeFinishMergePolicyOneMerge">
            <summary>设置 IndexWriter.MergeFinish(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MergeInitMergePolicyOneMerge">
            <summary>设置 IndexWriter.MergeInit(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MergeMergePolicyOneMerge">
            <summary>设置 IndexWriter.Merge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MergeMiddleMergePolicyOneMerge">
            <summary>设置 IndexWriter.MergeMiddle(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MergeSuccessMergePolicyOneMerge">
            <summary>设置 IndexWriter.MergeSuccess(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Merge_ForNUnitMergePolicyOneMerge">
            <summary>设置 IndexWriter.Merge_ForNUnit(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MessageState">
            <summary>设置 IndexWriter.MessageState() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.MessageString">
            <summary>设置 IndexWriter.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.NewSegmentName">
            <summary>设置 IndexWriter.NewSegmentName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.NewestSegment">
            <summary>设置 IndexWriter.NewestSegment() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.NoDupDirsDirectoryArray">
            <summary>设置 IndexWriter.NoDupDirs(Directory[] dirs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.NrtIsCurrentSegmentInfos">
            <summary>设置 IndexWriter.NrtIsCurrent(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.NumDeletedDocsSegmentInfo">
            <summary>设置 IndexWriter.NumDeletedDocs(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.NumDocs">
            <summary>设置 IndexWriter.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.NumRamDocs">
            <summary>设置 IndexWriter.NumRamDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Optimize">
            <summary>设置 IndexWriter.Optimize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.OptimizeBoolean">
            <summary>设置 IndexWriter.Optimize(Boolean doWait) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.OptimizeInt32">
            <summary>设置 IndexWriter.Optimize(Int32 maxNumSegments) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.OptimizeInt32Boolean">
            <summary>设置 IndexWriter.Optimize(Int32 maxNumSegments, Boolean doWait) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.OptimizeMergesPending">
            <summary>设置 IndexWriter.OptimizeMergesPending() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.PrepareCommit">
            <summary>设置 IndexWriter.PrepareCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.PrepareCommitIDictionaryOfStringString">
            <summary>设置 IndexWriter.PrepareCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.PrepareCommitIDictionaryOfStringStringBoolean">
            <summary>设置 IndexWriter.PrepareCommit(IDictionary`2&lt;String,String&gt; commitUserData, Boolean internal_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.PushMaxBufferedDocs">
            <summary>设置 IndexWriter.PushMaxBufferedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.RamSizeInBytes">
            <summary>设置 IndexWriter.RamSizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.RegisterMergeMergePolicyOneMerge">
            <summary>设置 IndexWriter.RegisterMerge(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ReleaseRead">
            <summary>设置 IndexWriter.ReleaseRead() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ReleaseWrite">
            <summary>设置 IndexWriter.ReleaseWrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ResetMergeExceptions">
            <summary>设置 IndexWriter.ResetMergeExceptions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ResolveExternalSegments">
            <summary>设置 IndexWriter.ResolveExternalSegments() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ResumeAddIndexes">
            <summary>设置 IndexWriter.ResumeAddIndexes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Rollback">
            <summary>设置 IndexWriter.Rollback() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.RollbackInternal">
            <summary>设置 IndexWriter.RollbackInternal() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.RollbackTransaction">
            <summary>设置 IndexWriter.RollbackTransaction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SegString">
            <summary>设置 IndexWriter.SegString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SegStringSegmentInfos">
            <summary>设置 IndexWriter.SegString(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetAllowMinus1Position">
            <summary>设置 IndexWriter.SetAllowMinus1Position() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetDiagnosticsSegmentInfoString">
            <summary>设置 IndexWriter.SetDiagnostics(SegmentInfo info, String source) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetDiagnosticsSegmentInfoStringIDictionaryOfStringString">
            <summary>设置 IndexWriter.SetDiagnostics(SegmentInfo info, String source, IDictionary`2&lt;String,String&gt; details) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetInfoStreamStreamWriter">
            <summary>设置 IndexWriter.SetInfoStream(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMaxBufferedDeleteTermsInt32">
            <summary>设置 IndexWriter.SetMaxBufferedDeleteTerms(Int32 maxBufferedDeleteTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMaxBufferedDocsInt32">
            <summary>设置 IndexWriter.SetMaxBufferedDocs(Int32 maxBufferedDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMaxFieldLengthInt32">
            <summary>设置 IndexWriter.SetMaxFieldLength(Int32 maxFieldLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMaxMergeDocsInt32">
            <summary>设置 IndexWriter.SetMaxMergeDocs(Int32 maxMergeDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMaxSyncPauseSecondsDouble">
            <summary>设置 IndexWriter.SetMaxSyncPauseSeconds(Double seconds) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMergeDocStoreIsCompoundFileMergePolicyOneMerge">
            <summary>设置 IndexWriter.SetMergeDocStoreIsCompoundFile(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMergeFactorInt32">
            <summary>设置 IndexWriter.SetMergeFactor(Int32 mergeFactor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMergePolicyMergePolicy">
            <summary>设置 IndexWriter.SetMergePolicy(MergePolicy mp) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMergeSchedulerMergeScheduler">
            <summary>设置 IndexWriter.SetMergeScheduler(MergeScheduler mergeScheduler) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMergedSegmentWarmerIndexWriterIndexReaderWarmer">
            <summary>设置 IndexWriter.SetMergedSegmentWarmer(IndexReaderWarmer warmer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetMessageIDStreamWriter">
            <summary>设置 IndexWriter.SetMessageID(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetRAMBufferSizeMBDouble">
            <summary>设置 IndexWriter.SetRAMBufferSizeMB(Double mb) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetReaderTermsIndexDivisorInt32">
            <summary>设置 IndexWriter.SetReaderTermsIndexDivisor(Int32 divisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetRollbackSegmentInfosSegmentInfos">
            <summary>设置 IndexWriter.SetRollbackSegmentInfos(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetSimilaritySimilarity">
            <summary>设置 IndexWriter.SetSimilarity(Similarity similarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetTermIndexIntervalInt32">
            <summary>设置 IndexWriter.SetTermIndexInterval(Int32 interval) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetUseCompoundFileBoolean">
            <summary>设置 IndexWriter.SetUseCompoundFile(Boolean value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SetWriteLockTimeoutInt64">
            <summary>设置 IndexWriter.SetWriteLockTimeout(Int64 writeLockTimeout) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.ShouldClose">
            <summary>设置 IndexWriter.ShouldClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.StartCommitInt64IDictionaryOfStringString">
            <summary>设置 IndexWriter.StartCommit(Int64 sizeInBytes, IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.StartSyncStringICollectionOfString">
            <summary>设置 IndexWriter.StartSync(String fileName, ICollection`1&lt;String&gt; pending) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.StartTransactionBoolean">
            <summary>设置 IndexWriter.StartTransaction(Boolean haveReadLock) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.SyncPauseInt64">
            <summary>设置 IndexWriter.SyncPause(Int64 sizeInBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.TestPointString">
            <summary>设置 IndexWriter.TestPoint(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.UpdateDocumentTermDocument">
            <summary>设置 IndexWriter.UpdateDocument(Term term, Document doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.UpdateDocumentTermDocumentAnalyzer">
            <summary>设置 IndexWriter.UpdateDocument(Term term, Document doc, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.UpdatePendingMergesInt32Boolean">
            <summary>设置 IndexWriter.UpdatePendingMerges(Int32 maxNumSegmentsOptimize, Boolean optimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.UpgradeReadToWrite">
            <summary>设置 IndexWriter.UpgradeReadToWrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.Verbose">
            <summary>设置 IndexWriter.Verbose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.WaitForAllSyncedICollectionOfString">
            <summary>设置 IndexWriter.WaitForAllSynced(ICollection`1&lt;String&gt; syncing) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances.WaitForMerges">
            <summary>设置 IndexWriter.WaitForMerges() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.AllInstances._MergeInitMergePolicyOneMerge">
            <summary>设置 IndexWriter._MergeInit(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimIndexReaderWarmer">
            <summary>Lucene.Net.Index.IndexWriter+IndexReaderWarmer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimIndexReaderWarmer.#ctor(Lucene.Net.Index.IndexWriter.IndexReaderWarmer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimIndexReaderWarmer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimIndexReaderWarmer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimIndexReaderWarmer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimIndexReaderWarmer.Constructor">
            <summary>设置 IndexReaderWarmer.IndexReaderWarmer() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimIndexReaderWarmer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength">
            <summary>Lucene.Net.Index.IndexWriter+MaxFieldLength 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.#ctor(Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.ConstructorInt32">
            <summary>设置 MaxFieldLength.MaxFieldLength(Int32 limit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.ConstructorStringInt32">
            <summary>设置 MaxFieldLength.MaxFieldLength(String name, Int32 limit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.GetLimit">
            <summary>设置 MaxFieldLength.GetLimit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.StaticConstructor">
            <summary>设置 MaxFieldLength.MaxFieldLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.ToString">
            <summary>设置 MaxFieldLength.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.AllInstances.GetLimit">
            <summary>设置 MaxFieldLength.GetLimit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimIndexWriter.ShimMaxFieldLength.AllInstances.ToString01">
            <summary>设置 MaxFieldLength.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy">
            <summary>Lucene.Net.Index.KeepOnlyLastCommitDeletionPolicy 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.#ctor(Lucene.Net.Index.KeepOnlyLastCommitDeletionPolicy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.Bind(Lucene.Net.Index.IndexDeletionPolicy)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.Constructor">
            <summary>设置 KeepOnlyLastCommitDeletionPolicy.KeepOnlyLastCommitDeletionPolicy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.OnCommitIListOfIndexCommit">
            <summary>设置 KeepOnlyLastCommitDeletionPolicy.OnCommit(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.OnInitIListOfIndexCommit">
            <summary>设置 KeepOnlyLastCommitDeletionPolicy.OnInit(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.AllInstances.OnCommitIListOfIndexCommit">
            <summary>设置 KeepOnlyLastCommitDeletionPolicy.OnCommit(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimKeepOnlyLastCommitDeletionPolicy.AllInstances.OnInitIListOfIndexCommit">
            <summary>设置 KeepOnlyLastCommitDeletionPolicy.OnInit(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy">
            <summary>Lucene.Net.Index.LogByteSizeMergePolicy 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.#ctor(Lucene.Net.Index.LogByteSizeMergePolicy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.ConstructorIndexWriter">
            <summary>设置 LogByteSizeMergePolicy.LogByteSizeMergePolicy(IndexWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.GetMaxMergeMB">
            <summary>设置 LogByteSizeMergePolicy.GetMaxMergeMB() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.GetMinMergeMB">
            <summary>设置 LogByteSizeMergePolicy.GetMinMergeMB() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.SetMaxMergeMBDouble">
            <summary>设置 LogByteSizeMergePolicy.SetMaxMergeMB(Double mb) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.SetMinMergeMBDouble">
            <summary>设置 LogByteSizeMergePolicy.SetMinMergeMB(Double mb) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.SizeSegmentInfo">
            <summary>设置 LogByteSizeMergePolicy.Size(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.StaticConstructor">
            <summary>设置 LogByteSizeMergePolicy.LogByteSizeMergePolicy() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.AllInstances.GetMaxMergeMB">
            <summary>设置 LogByteSizeMergePolicy.GetMaxMergeMB() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.AllInstances.GetMinMergeMB">
            <summary>设置 LogByteSizeMergePolicy.GetMinMergeMB() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.AllInstances.SetMaxMergeMBDouble">
            <summary>设置 LogByteSizeMergePolicy.SetMaxMergeMB(Double mb) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.AllInstances.SetMinMergeMBDouble">
            <summary>设置 LogByteSizeMergePolicy.SetMinMergeMB(Double mb) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogByteSizeMergePolicy.AllInstances.SizeSegmentInfo">
            <summary>设置 LogByteSizeMergePolicy.Size(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy">
            <summary>Lucene.Net.Index.LogDocMergePolicy 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.#ctor(Lucene.Net.Index.LogDocMergePolicy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.ConstructorIndexWriter">
            <summary>设置 LogDocMergePolicy.LogDocMergePolicy(IndexWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.GetMinMergeDocs">
            <summary>设置 LogDocMergePolicy.GetMinMergeDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.SetMinMergeDocsInt32">
            <summary>设置 LogDocMergePolicy.SetMinMergeDocs(Int32 minMergeDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.SizeSegmentInfo">
            <summary>设置 LogDocMergePolicy.Size(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.AllInstances.GetMinMergeDocs">
            <summary>设置 LogDocMergePolicy.GetMinMergeDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.AllInstances.SetMinMergeDocsInt32">
            <summary>设置 LogDocMergePolicy.SetMinMergeDocs(Int32 minMergeDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogDocMergePolicy.AllInstances.SizeSegmentInfo">
            <summary>设置 LogDocMergePolicy.Size(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimLogMergePolicy">
            <summary>Lucene.Net.Index.LogMergePolicy 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogMergePolicy.#ctor(Lucene.Net.Index.LogMergePolicy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogMergePolicy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimLogMergePolicy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.Close">
            <summary>设置 LogMergePolicy.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.ConstructorIndexWriter">
            <summary>设置 LogMergePolicy.LogMergePolicy(IndexWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.FindMergesForOptimizeSegmentInfosInt32SetOfSegmentInfo">
            <summary>设置 LogMergePolicy.FindMergesForOptimize(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.FindMergesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMerges(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.FindMergesToExpungeDeletesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.GetCalibrateSizeByDeletes">
            <summary>设置 LogMergePolicy.GetCalibrateSizeByDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.GetMaxMergeDocs">
            <summary>设置 LogMergePolicy.GetMaxMergeDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.GetMergeFactor">
            <summary>设置 LogMergePolicy.GetMergeFactor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.GetNoCFSRatio">
            <summary>设置 LogMergePolicy.GetNoCFSRatio() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.GetUseCompoundDocStore">
            <summary>设置 LogMergePolicy.GetUseCompoundDocStore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.GetUseCompoundFile">
            <summary>设置 LogMergePolicy.GetUseCompoundFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.IsOptimizedSegmentInfo">
            <summary>设置 LogMergePolicy.IsOptimized(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.IsOptimizedSegmentInfosInt32SetOfSegmentInfo">
            <summary>设置 LogMergePolicy.IsOptimized(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.MakeOneMergeSegmentInfosSegmentInfos">
            <summary>设置 LogMergePolicy.MakeOneMerge(SegmentInfos infos, SegmentInfos infosToMerge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.MessageString">
            <summary>设置 LogMergePolicy.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.SetCalibrateSizeByDeletesBoolean">
            <summary>设置 LogMergePolicy.SetCalibrateSizeByDeletes(Boolean calibrateSizeByDeletes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.SetMaxMergeDocsInt32">
            <summary>设置 LogMergePolicy.SetMaxMergeDocs(Int32 maxMergeDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.SetMergeFactorInt32">
            <summary>设置 LogMergePolicy.SetMergeFactor(Int32 mergeFactor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.SetNoCFSRatioDouble">
            <summary>设置 LogMergePolicy.SetNoCFSRatio(Double noCFSRatio) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.SetUseCompoundDocStoreBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundDocStore(Boolean useCompoundDocStore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.SetUseCompoundFileBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundFile(Boolean useCompoundFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.SizeBytesSegmentInfo">
            <summary>设置 LogMergePolicy.SizeBytes(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.SizeDocsSegmentInfo">
            <summary>设置 LogMergePolicy.SizeDocs(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.StaticConstructor">
            <summary>设置 LogMergePolicy.LogMergePolicy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.UseCompoundDocStoreSegmentInfos">
            <summary>设置 LogMergePolicy.UseCompoundDocStore(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.UseCompoundFileSegmentInfosSegmentInfo">
            <summary>设置 LogMergePolicy.UseCompoundFile(SegmentInfos infos, SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.Verbose">
            <summary>设置 LogMergePolicy.Verbose() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.Close">
            <summary>设置 LogMergePolicy.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.FindMergesForOptimizeSegmentInfosInt32SetOfSegmentInfo">
            <summary>设置 LogMergePolicy.FindMergesForOptimize(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.FindMergesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMerges(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.FindMergesToExpungeDeletesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.GetCalibrateSizeByDeletes">
            <summary>设置 LogMergePolicy.GetCalibrateSizeByDeletes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.GetMaxMergeDocs">
            <summary>设置 LogMergePolicy.GetMaxMergeDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.GetMergeFactor">
            <summary>设置 LogMergePolicy.GetMergeFactor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.GetNoCFSRatio">
            <summary>设置 LogMergePolicy.GetNoCFSRatio() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.GetUseCompoundDocStore">
            <summary>设置 LogMergePolicy.GetUseCompoundDocStore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.GetUseCompoundFile">
            <summary>设置 LogMergePolicy.GetUseCompoundFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.IsOptimizedSegmentInfo">
            <summary>设置 LogMergePolicy.IsOptimized(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.IsOptimizedSegmentInfosInt32SetOfSegmentInfo">
            <summary>设置 LogMergePolicy.IsOptimized(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.MakeOneMergeSegmentInfosSegmentInfos">
            <summary>设置 LogMergePolicy.MakeOneMerge(SegmentInfos infos, SegmentInfos infosToMerge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.MessageString">
            <summary>设置 LogMergePolicy.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.SetCalibrateSizeByDeletesBoolean">
            <summary>设置 LogMergePolicy.SetCalibrateSizeByDeletes(Boolean calibrateSizeByDeletes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.SetMaxMergeDocsInt32">
            <summary>设置 LogMergePolicy.SetMaxMergeDocs(Int32 maxMergeDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.SetMergeFactorInt32">
            <summary>设置 LogMergePolicy.SetMergeFactor(Int32 mergeFactor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.SetNoCFSRatioDouble">
            <summary>设置 LogMergePolicy.SetNoCFSRatio(Double noCFSRatio) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.SetUseCompoundDocStoreBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundDocStore(Boolean useCompoundDocStore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.SetUseCompoundFileBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundFile(Boolean useCompoundFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.SizeBytesSegmentInfo">
            <summary>设置 LogMergePolicy.SizeBytes(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.SizeDocsSegmentInfo">
            <summary>设置 LogMergePolicy.SizeDocs(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.UseCompoundDocStoreSegmentInfos">
            <summary>设置 LogMergePolicy.UseCompoundDocStore(SegmentInfos infos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.UseCompoundFileSegmentInfosSegmentInfo">
            <summary>设置 LogMergePolicy.UseCompoundFile(SegmentInfos infos, SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimLogMergePolicy.AllInstances.Verbose">
            <summary>设置 LogMergePolicy.Verbose() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy">
            <summary>Lucene.Net.Index.MergePolicy 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.#ctor(Lucene.Net.Index.MergePolicy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ConstructorIndexWriter">
            <summary>设置 MergePolicy.MergePolicy(IndexWriter writer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException">
            <summary>Lucene.Net.Index.MergePolicy+MergeAbortedException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.#ctor(Lucene.Net.Index.MergePolicy.MergeAbortedException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.Constructor">
            <summary>设置 MergeAbortedException.MergeAbortedException() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.ConstructorString">
            <summary>设置 MergeAbortedException.MergeAbortedException(String message) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeAbortedException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException">
            <summary>Lucene.Net.Index.MergePolicy+MergeException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.#ctor(Lucene.Net.Index.MergePolicy.MergeException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.ConstructorException">
            <summary>设置 MergeException.MergeException(Exception exc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.ConstructorExceptionDirectory">
            <summary>设置 MergeException.MergeException(Exception exc, Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.ConstructorString">
            <summary>设置 MergeException.MergeException(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.ConstructorStringDirectory">
            <summary>设置 MergeException.MergeException(String message, Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.GetDirectory">
            <summary>设置 MergeException.GetDirectory() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeException.AllInstances.GetDirectory">
            <summary>设置 MergeException.GetDirectory() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification">
            <summary>Lucene.Net.Index.MergePolicy+MergeSpecification 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.#ctor(Lucene.Net.Index.MergePolicy.MergeSpecification)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.AddMergePolicyOneMerge">
            <summary>设置 MergeSpecification.Add(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.Constructor">
            <summary>设置 MergeSpecification.MergeSpecification() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.SegStringDirectory">
            <summary>设置 MergeSpecification.SegString(Directory dir) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.AllInstances.AddMergePolicyOneMerge">
            <summary>设置 MergeSpecification.Add(OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimMergeSpecification.AllInstances.SegStringDirectory">
            <summary>设置 MergeSpecification.SegString(Directory dir) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge">
            <summary>Lucene.Net.Index.MergePolicy+OneMerge 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.#ctor(Lucene.Net.Index.MergePolicy.OneMerge)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.Abort">
            <summary>设置 OneMerge.Abort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.CheckAbortedDirectory">
            <summary>设置 OneMerge.CheckAborted(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.ConstructorSegmentInfosBoolean">
            <summary>设置 OneMerge.OneMerge(SegmentInfos segments, Boolean useCompoundFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.GetException">
            <summary>设置 OneMerge.GetException() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.IsAborted">
            <summary>设置 OneMerge.IsAborted() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.SegStringDirectory">
            <summary>设置 OneMerge.SegString(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.SetExceptionException">
            <summary>设置 OneMerge.SetException(Exception error) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.segments_ForNUnitGet">
            <summary>设置 OneMerge.get_segments_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.AllInstances.Abort">
            <summary>设置 OneMerge.Abort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.AllInstances.CheckAbortedDirectory">
            <summary>设置 OneMerge.CheckAborted(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.AllInstances.GetException">
            <summary>设置 OneMerge.GetException() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.AllInstances.IsAborted">
            <summary>设置 OneMerge.IsAborted() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.AllInstances.SegStringDirectory">
            <summary>设置 OneMerge.SegString(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.AllInstances.SetExceptionException">
            <summary>设置 OneMerge.SetException(Exception error) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergePolicy.ShimOneMerge.AllInstances.segments_ForNUnitGet">
            <summary>设置 OneMerge.get_segments_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergeScheduler">
            <summary>Lucene.Net.Index.MergeScheduler 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergeScheduler.#ctor(Lucene.Net.Index.MergeScheduler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergeScheduler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMergeScheduler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergeScheduler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMergeScheduler.Constructor">
            <summary>设置 MergeScheduler.MergeScheduler() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMergeScheduler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMultiReader">
            <summary>Lucene.Net.Index.MultiReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultiReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultiReader.#ctor(Lucene.Net.Index.MultiReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultiReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultiReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultiReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultiReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.Clone">
            <summary>设置 MultiReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.ConstructorIndexReaderArray">
            <summary>设置 MultiReader.MultiReader(IndexReader[] subReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.ConstructorIndexReaderArrayBoolean">
            <summary>设置 MultiReader.MultiReader(IndexReader[] subReaders, Boolean closeSubReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DoClose">
            <summary>设置 MultiReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DoCommit">
            <summary>设置 MultiReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DoCommitIDictionaryOfStringString">
            <summary>设置 MultiReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DoDeleteInt32">
            <summary>设置 MultiReader.DoDelete(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DoReopenBoolean">
            <summary>设置 MultiReader.DoReopen(Boolean doClone) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DoSetNormInt32StringByte">
            <summary>设置 MultiReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DoUndeleteAll">
            <summary>设置 MultiReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DocFreqTerm">
            <summary>设置 MultiReader.DocFreq(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.DocumentInt32FieldSelector">
            <summary>设置 MultiReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.FakeNorms">
            <summary>设置 MultiReader.FakeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 MultiReader.GetFieldNames(FieldOption fieldNames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.GetSequentialSubReaders">
            <summary>设置 MultiReader.GetSequentialSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.GetTermFreqVectorInt32String">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 n, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.GetTermFreqVectorsInt32">
            <summary>设置 MultiReader.GetTermFreqVectors(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.GetVersion">
            <summary>设置 MultiReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.HasDeletions">
            <summary>设置 MultiReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.HasNormsString">
            <summary>设置 MultiReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.InitializeIndexReaderArrayBoolean">
            <summary>设置 MultiReader.Initialize(IndexReader[] subReaders, Boolean closeSubReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.IsCurrent">
            <summary>设置 MultiReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.IsDeletedInt32">
            <summary>设置 MultiReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.IsOptimized">
            <summary>设置 MultiReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.MaxDoc">
            <summary>设置 MultiReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.NormsString">
            <summary>设置 MultiReader.Norms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.NormsStringByteArrayInt32">
            <summary>设置 MultiReader.Norms(String field, Byte[] result, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.NumDocs">
            <summary>设置 MultiReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.ReaderIndexInt32">
            <summary>设置 MultiReader.ReaderIndex(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.Reopen">
            <summary>设置 MultiReader.Reopen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.TermDocs">
            <summary>设置 MultiReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.TermPositions">
            <summary>设置 MultiReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.Terms">
            <summary>设置 MultiReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.TermsTerm">
            <summary>设置 MultiReader.Terms(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.Clone">
            <summary>设置 MultiReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DoClose">
            <summary>设置 MultiReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DoCommit">
            <summary>设置 MultiReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DoCommitIDictionaryOfStringString">
            <summary>设置 MultiReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DoDeleteInt32">
            <summary>设置 MultiReader.DoDelete(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DoReopenBoolean">
            <summary>设置 MultiReader.DoReopen(Boolean doClone) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DoSetNormInt32StringByte">
            <summary>设置 MultiReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DoUndeleteAll">
            <summary>设置 MultiReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DocFreqTerm">
            <summary>设置 MultiReader.DocFreq(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.DocumentInt32FieldSelector">
            <summary>设置 MultiReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.FakeNorms">
            <summary>设置 MultiReader.FakeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 MultiReader.GetFieldNames(FieldOption fieldNames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.GetSequentialSubReaders">
            <summary>设置 MultiReader.GetSequentialSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.GetTermFreqVectorInt32String">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 n, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.GetTermFreqVectorsInt32">
            <summary>设置 MultiReader.GetTermFreqVectors(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.GetVersion">
            <summary>设置 MultiReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.HasDeletions">
            <summary>设置 MultiReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.HasNormsString">
            <summary>设置 MultiReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.InitializeIndexReaderArrayBoolean">
            <summary>设置 MultiReader.Initialize(IndexReader[] subReaders, Boolean closeSubReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.IsCurrent">
            <summary>设置 MultiReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.IsDeletedInt32">
            <summary>设置 MultiReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.IsOptimized">
            <summary>设置 MultiReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.MaxDoc">
            <summary>设置 MultiReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.NormsString">
            <summary>设置 MultiReader.Norms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.NormsStringByteArrayInt32">
            <summary>设置 MultiReader.Norms(String field, Byte[] result, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.NumDocs">
            <summary>设置 MultiReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.ReaderIndexInt32">
            <summary>设置 MultiReader.ReaderIndex(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.Reopen">
            <summary>设置 MultiReader.Reopen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.TermDocs">
            <summary>设置 MultiReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.TermPositions">
            <summary>设置 MultiReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.Terms">
            <summary>设置 MultiReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultiReader.AllInstances.TermsTerm">
            <summary>设置 MultiReader.Terms(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMultipleTermPositions">
            <summary>Lucene.Net.Index.MultipleTermPositions 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.#ctor(Lucene.Net.Index.MultipleTermPositions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.Bind(Lucene.Net.Index.TermDocs)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.Bind(Lucene.Net.Index.TermPositions)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.Close">
            <summary>设置 MultipleTermPositions.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.ConstructorIndexReaderTermArray">
            <summary>设置 MultipleTermPositions.MultipleTermPositions(IndexReader indexReader, Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.Doc">
            <summary>设置 MultipleTermPositions.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.Freq">
            <summary>设置 MultipleTermPositions.Freq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.GetPayloadByteArrayInt32">
            <summary>设置 MultipleTermPositions.GetPayload(Byte[] data, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.GetPayloadLength">
            <summary>设置 MultipleTermPositions.GetPayloadLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.IsPayloadAvailable">
            <summary>设置 MultipleTermPositions.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.Next">
            <summary>设置 MultipleTermPositions.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.NextPosition">
            <summary>设置 MultipleTermPositions.NextPosition() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.ReadInt32ArrayInt32Array">
            <summary>设置 MultipleTermPositions.Read(Int32[] arg0, Int32[] arg1) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.SeekTerm">
            <summary>设置 MultipleTermPositions.Seek(Term arg0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.SeekTermEnum">
            <summary>设置 MultipleTermPositions.Seek(TermEnum termEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.SkipToInt32">
            <summary>设置 MultipleTermPositions.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.Close">
            <summary>设置 MultipleTermPositions.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.Doc">
            <summary>设置 MultipleTermPositions.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.Freq">
            <summary>设置 MultipleTermPositions.Freq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.GetPayloadByteArrayInt32">
            <summary>设置 MultipleTermPositions.GetPayload(Byte[] data, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.GetPayloadLength">
            <summary>设置 MultipleTermPositions.GetPayloadLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.IsPayloadAvailable">
            <summary>设置 MultipleTermPositions.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.Next">
            <summary>设置 MultipleTermPositions.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.NextPosition">
            <summary>设置 MultipleTermPositions.NextPosition() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.ReadInt32ArrayInt32Array">
            <summary>设置 MultipleTermPositions.Read(Int32[] arg0, Int32[] arg1) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.SeekTerm">
            <summary>设置 MultipleTermPositions.Seek(Term arg0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.SeekTermEnum">
            <summary>设置 MultipleTermPositions.Seek(TermEnum termEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimMultipleTermPositions.AllInstances.SkipToInt32">
            <summary>设置 MultipleTermPositions.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimParallelReader">
            <summary>Lucene.Net.Index.ParallelReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimParallelReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimParallelReader.#ctor(Lucene.Net.Index.ParallelReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimParallelReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimParallelReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimParallelReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimParallelReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AddIndexReader">
            <summary>设置 ParallelReader.Add(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AddIndexReaderBoolean">
            <summary>设置 ParallelReader.Add(IndexReader reader, Boolean ignoreStoredFields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.Clone">
            <summary>设置 ParallelReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.Constructor">
            <summary>设置 ParallelReader.ParallelReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.ConstructorBoolean">
            <summary>设置 ParallelReader.ParallelReader(Boolean closeSubReaders) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DoClose">
            <summary>设置 ParallelReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DoCommit">
            <summary>设置 ParallelReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DoCommitIDictionaryOfStringString">
            <summary>设置 ParallelReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DoDeleteInt32">
            <summary>设置 ParallelReader.DoDelete(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DoReopenBoolean">
            <summary>设置 ParallelReader.DoReopen(Boolean doClone) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DoSetNormInt32StringByte">
            <summary>设置 ParallelReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DoUndeleteAll">
            <summary>设置 ParallelReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DocFreqTerm">
            <summary>设置 ParallelReader.DocFreq(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.DocumentInt32FieldSelector">
            <summary>设置 ParallelReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 ParallelReader.GetFieldNames(FieldOption fieldNames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.GetSubReaders">
            <summary>设置 ParallelReader.GetSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.GetTermFreqVectorInt32String">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 n, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.GetTermFreqVectorsInt32">
            <summary>设置 ParallelReader.GetTermFreqVectors(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.GetVersion">
            <summary>设置 ParallelReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.HasDeletions">
            <summary>设置 ParallelReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.HasNormsString">
            <summary>设置 ParallelReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.IsCurrent">
            <summary>设置 ParallelReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.IsDeletedInt32">
            <summary>设置 ParallelReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.IsOptimized">
            <summary>设置 ParallelReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.MaxDoc">
            <summary>设置 ParallelReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.NormsString">
            <summary>设置 ParallelReader.Norms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.NormsStringByteArrayInt32">
            <summary>设置 ParallelReader.Norms(String field, Byte[] result, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.NumDocs">
            <summary>设置 ParallelReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.Reopen">
            <summary>设置 ParallelReader.Reopen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.TermDocs">
            <summary>设置 ParallelReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.TermDocsTerm">
            <summary>设置 ParallelReader.TermDocs(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.TermPositions">
            <summary>设置 ParallelReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.TermPositionsTerm">
            <summary>设置 ParallelReader.TermPositions(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.Terms">
            <summary>设置 ParallelReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.TermsTerm">
            <summary>设置 ParallelReader.Terms(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.AddIndexReader">
            <summary>设置 ParallelReader.Add(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.AddIndexReaderBoolean">
            <summary>设置 ParallelReader.Add(IndexReader reader, Boolean ignoreStoredFields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.Clone">
            <summary>设置 ParallelReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DoClose">
            <summary>设置 ParallelReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DoCommit">
            <summary>设置 ParallelReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DoCommitIDictionaryOfStringString">
            <summary>设置 ParallelReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DoDeleteInt32">
            <summary>设置 ParallelReader.DoDelete(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DoReopenBoolean">
            <summary>设置 ParallelReader.DoReopen(Boolean doClone) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DoSetNormInt32StringByte">
            <summary>设置 ParallelReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DoUndeleteAll">
            <summary>设置 ParallelReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DocFreqTerm">
            <summary>设置 ParallelReader.DocFreq(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.DocumentInt32FieldSelector">
            <summary>设置 ParallelReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 ParallelReader.GetFieldNames(FieldOption fieldNames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.GetSubReaders">
            <summary>设置 ParallelReader.GetSubReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.GetTermFreqVectorInt32String">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 n, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.GetTermFreqVectorsInt32">
            <summary>设置 ParallelReader.GetTermFreqVectors(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.GetVersion">
            <summary>设置 ParallelReader.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.HasDeletions">
            <summary>设置 ParallelReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.HasNormsString">
            <summary>设置 ParallelReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.IsCurrent">
            <summary>设置 ParallelReader.IsCurrent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.IsDeletedInt32">
            <summary>设置 ParallelReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.IsOptimized">
            <summary>设置 ParallelReader.IsOptimized() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.MaxDoc">
            <summary>设置 ParallelReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.NormsString">
            <summary>设置 ParallelReader.Norms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.NormsStringByteArrayInt32">
            <summary>设置 ParallelReader.Norms(String field, Byte[] result, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.NumDocs">
            <summary>设置 ParallelReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.Reopen">
            <summary>设置 ParallelReader.Reopen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.TermDocs">
            <summary>设置 ParallelReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.TermDocsTerm">
            <summary>设置 ParallelReader.TermDocs(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.TermPositions">
            <summary>设置 ParallelReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.TermPositionsTerm">
            <summary>设置 ParallelReader.TermPositions(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.Terms">
            <summary>设置 ParallelReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimParallelReader.AllInstances.TermsTerm">
            <summary>设置 ParallelReader.Terms(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimPayload">
            <summary>Lucene.Net.Index.Payload 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPayload.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPayload.#ctor(Lucene.Net.Index.Payload)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPayload.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPayload.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPayload.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.ByteAtInt32">
            <summary>设置 Payload.ByteAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.Clone">
            <summary>设置 Payload.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.Constructor">
            <summary>设置 Payload.Payload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.ConstructorByteArray">
            <summary>设置 Payload.Payload(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.ConstructorByteArrayInt32Int32">
            <summary>设置 Payload.Payload(Byte[] data, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.CopyToByteArrayInt32">
            <summary>设置 Payload.CopyTo(Byte[] target, Int32 targetOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.EqualsObject">
            <summary>设置 Payload.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.GetData">
            <summary>设置 Payload.GetData() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.GetHashCode">
            <summary>设置 Payload.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.GetOffset">
            <summary>设置 Payload.GetOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.Length">
            <summary>设置 Payload.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.SetDataByteArray">
            <summary>设置 Payload.SetData(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.SetDataByteArrayInt32Int32">
            <summary>设置 Payload.SetData(Byte[] data, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.ToByteArray">
            <summary>设置 Payload.ToByteArray() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimPayload.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.ByteAtInt32">
            <summary>设置 Payload.ByteAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.Clone">
            <summary>设置 Payload.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.CopyToByteArrayInt32">
            <summary>设置 Payload.CopyTo(Byte[] target, Int32 targetOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.EqualsObject">
            <summary>设置 Payload.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.GetData">
            <summary>设置 Payload.GetData() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.GetHashCode01">
            <summary>设置 Payload.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.GetOffset">
            <summary>设置 Payload.GetOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.Length">
            <summary>设置 Payload.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.SetDataByteArray">
            <summary>设置 Payload.SetData(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.SetDataByteArrayInt32Int32">
            <summary>设置 Payload.SetData(Byte[] data, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPayload.AllInstances.ToByteArray">
            <summary>设置 Payload.ToByteArray() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper">
            <summary>Lucene.Net.Index.PositionBasedTermVectorMapper 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.#ctor(Lucene.Net.Index.PositionBasedTermVectorMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.Constructor">
            <summary>设置 PositionBasedTermVectorMapper.PositionBasedTermVectorMapper() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ConstructorBoolean">
            <summary>设置 PositionBasedTermVectorMapper.PositionBasedTermVectorMapper(Boolean ignoringOffsets) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.GetFieldToTerms">
            <summary>设置 PositionBasedTermVectorMapper.GetFieldToTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.IsIgnoringPositions">
            <summary>设置 PositionBasedTermVectorMapper.IsIgnoringPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 PositionBasedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 PositionBasedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.AllInstances.GetFieldToTerms">
            <summary>设置 PositionBasedTermVectorMapper.GetFieldToTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.AllInstances.IsIgnoringPositions">
            <summary>设置 PositionBasedTermVectorMapper.IsIgnoringPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.AllInstances.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 PositionBasedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.AllInstances.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 PositionBasedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo">
            <summary>Lucene.Net.Index.PositionBasedTermVectorMapper+TVPositionInfo 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.#ctor(Lucene.Net.Index.PositionBasedTermVectorMapper.TVPositionInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.ConstructorInt32Boolean">
            <summary>设置 TVPositionInfo.TVPositionInfo(Int32 position, Boolean storeOffsets) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.OffsetsGet">
            <summary>设置 TVPositionInfo.get_Offsets() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.PositionGet">
            <summary>设置 TVPositionInfo.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.TermsGet">
            <summary>设置 TVPositionInfo.get_Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.addTermStringTermVectorOffsetInfo">
            <summary>设置 TVPositionInfo.addTerm(String term, TermVectorOffsetInfo info) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.AllInstances.OffsetsGet">
            <summary>设置 TVPositionInfo.get_Offsets() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.AllInstances.PositionGet">
            <summary>设置 TVPositionInfo.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.AllInstances.TermsGet">
            <summary>设置 TVPositionInfo.get_Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimPositionBasedTermVectorMapper.ShimTVPositionInfo.AllInstances.addTermStringTermVectorOffsetInfo">
            <summary>设置 TVPositionInfo.addTerm(String term, TermVectorOffsetInfo info) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader">
            <summary>Lucene.Net.Index.ReadOnlyDirectoryReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.#ctor(Lucene.Net.Index.ReadOnlyDirectoryReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.AcquireWriteLock">
            <summary>设置 ReadOnlyDirectoryReader.AcquireWriteLock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.ConstructorDirectorySegmentInfosIndexDeletionPolicyInt32">
            <summary>设置 ReadOnlyDirectoryReader.ReadOnlyDirectoryReader(Directory directory, SegmentInfos sis, IndexDeletionPolicy deletionPolicy, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.ConstructorDirectorySegmentInfosSegmentReaderArrayInt32ArrayIDictionaryOfStringByteArrayBooleanInt32">
            <summary>设置 ReadOnlyDirectoryReader.ReadOnlyDirectoryReader(Directory directory, SegmentInfos infos, SegmentReader[] oldReaders, Int32[] oldStarts, IDictionary`2&lt;String,Byte[]&gt; oldNormsCache, Boolean doClone, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.ConstructorIndexWriterSegmentInfosInt32">
            <summary>设置 ReadOnlyDirectoryReader.ReadOnlyDirectoryReader(IndexWriter writer, SegmentInfos infos, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlyDirectoryReader.AllInstances.AcquireWriteLock">
            <summary>设置 ReadOnlyDirectoryReader.AcquireWriteLock() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader">
            <summary>Lucene.Net.Index.ReadOnlySegmentReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.#ctor(Lucene.Net.Index.ReadOnlySegmentReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.AcquireWriteLock">
            <summary>设置 ReadOnlySegmentReader.AcquireWriteLock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.Constructor">
            <summary>设置 ReadOnlySegmentReader.ReadOnlySegmentReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.IsDeletedInt32">
            <summary>设置 ReadOnlySegmentReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.NoWrite">
            <summary>设置 ReadOnlySegmentReader.NoWrite() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.AllInstances.AcquireWriteLock">
            <summary>设置 ReadOnlySegmentReader.AcquireWriteLock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimReadOnlySegmentReader.AllInstances.IsDeletedInt32">
            <summary>设置 ReadOnlySegmentReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentInfo">
            <summary>Lucene.Net.Index.SegmentInfo 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfo.#ctor(Lucene.Net.Index.SegmentInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfo.Bind(System.IEquatable{Lucene.Net.Index.SegmentInfo})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AddIfExistsIListOfStringString">
            <summary>设置 SegmentInfo.AddIfExists(IList`1&lt;String&gt; files, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AdvanceDelGen">
            <summary>设置 SegmentInfo.AdvanceDelGen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AdvanceNormGenInt32">
            <summary>设置 SegmentInfo.AdvanceNormGen(Int32 fieldIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.ClearDelGen">
            <summary>设置 SegmentInfo.ClearDelGen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.ClearFiles">
            <summary>设置 SegmentInfo.ClearFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.Clone">
            <summary>设置 SegmentInfo.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.ConstructorDirectoryInt32IndexInput">
            <summary>设置 SegmentInfo.SegmentInfo(Directory dir, Int32 format, IndexInput input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.ConstructorStringInt32Directory">
            <summary>设置 SegmentInfo.SegmentInfo(String name, Int32 docCount, Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.ConstructorStringInt32DirectoryBooleanBoolean">
            <summary>设置 SegmentInfo.SegmentInfo(String name, Int32 docCount, Directory dir, Boolean isCompoundFile, Boolean hasSingleNormFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.ConstructorStringInt32DirectoryBooleanBooleanInt32StringBooleanBoolean">
            <summary>设置 SegmentInfo.SegmentInfo(String name, Int32 docCount, Directory dir, Boolean isCompoundFile, Boolean hasSingleNormFile, Int32 docStoreOffset, String docStoreSegment, Boolean docStoreIsCompoundFile, Boolean hasProx) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.EqualsObject">
            <summary>设置 SegmentInfo.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.EqualsSegmentInfo">
            <summary>设置 SegmentInfo.Equals(SegmentInfo other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.Files">
            <summary>设置 SegmentInfo.Files() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetDelCount">
            <summary>设置 SegmentInfo.GetDelCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetDelFileName">
            <summary>设置 SegmentInfo.GetDelFileName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetDiagnostics">
            <summary>设置 SegmentInfo.GetDiagnostics() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetDocStoreIsCompoundFile">
            <summary>设置 SegmentInfo.GetDocStoreIsCompoundFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetDocStoreOffset">
            <summary>设置 SegmentInfo.GetDocStoreOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetDocStoreSegment">
            <summary>设置 SegmentInfo.GetDocStoreSegment() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetHasProx">
            <summary>设置 SegmentInfo.GetHasProx() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetHashCode">
            <summary>设置 SegmentInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetNormFileNameInt32">
            <summary>设置 SegmentInfo.GetNormFileName(Int32 number) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.GetUseCompoundFile">
            <summary>设置 SegmentInfo.GetUseCompoundFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.HasDeletions">
            <summary>设置 SegmentInfo.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.HasSeparateNorms">
            <summary>设置 SegmentInfo.HasSeparateNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.HasSeparateNormsInt32">
            <summary>设置 SegmentInfo.HasSeparateNorms(Int32 fieldNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.ResetSegmentInfo">
            <summary>设置 SegmentInfo.Reset(SegmentInfo src) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SegStringDirectory">
            <summary>设置 SegmentInfo.SegString(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SetDelCountInt32">
            <summary>设置 SegmentInfo.SetDelCount(Int32 delCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SetDiagnosticsIDictionaryOfStringString">
            <summary>设置 SegmentInfo.SetDiagnostics(IDictionary`2&lt;String,String&gt; diagnostics) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SetDocStoreInt32StringBoolean">
            <summary>设置 SegmentInfo.SetDocStore(Int32 offset, String segment, Boolean isCompoundFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SetDocStoreIsCompoundFileBoolean">
            <summary>设置 SegmentInfo.SetDocStoreIsCompoundFile(Boolean v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SetDocStoreOffsetInt32">
            <summary>设置 SegmentInfo.SetDocStoreOffset(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SetHasProxBoolean">
            <summary>设置 SegmentInfo.SetHasProx(Boolean hasProx) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SetNumFieldsInt32">
            <summary>设置 SegmentInfo.SetNumFields(Int32 numFields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SetUseCompoundFileBoolean">
            <summary>设置 SegmentInfo.SetUseCompoundFile(Boolean isCompoundFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.SizeInBytes">
            <summary>设置 SegmentInfo.SizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.ToString">
            <summary>设置 SegmentInfo.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.WriteIndexOutput">
            <summary>设置 SegmentInfo.Write(IndexOutput output) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.AddIfExistsIListOfStringString">
            <summary>设置 SegmentInfo.AddIfExists(IList`1&lt;String&gt; files, String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.AdvanceDelGen">
            <summary>设置 SegmentInfo.AdvanceDelGen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.AdvanceNormGenInt32">
            <summary>设置 SegmentInfo.AdvanceNormGen(Int32 fieldIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.ClearDelGen">
            <summary>设置 SegmentInfo.ClearDelGen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.ClearFiles">
            <summary>设置 SegmentInfo.ClearFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.Clone">
            <summary>设置 SegmentInfo.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.EqualsObject">
            <summary>设置 SegmentInfo.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.EqualsSegmentInfo">
            <summary>设置 SegmentInfo.Equals(SegmentInfo other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.Files">
            <summary>设置 SegmentInfo.Files() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetDelCount">
            <summary>设置 SegmentInfo.GetDelCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetDelFileName">
            <summary>设置 SegmentInfo.GetDelFileName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetDiagnostics">
            <summary>设置 SegmentInfo.GetDiagnostics() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetDocStoreIsCompoundFile">
            <summary>设置 SegmentInfo.GetDocStoreIsCompoundFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetDocStoreOffset">
            <summary>设置 SegmentInfo.GetDocStoreOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetDocStoreSegment">
            <summary>设置 SegmentInfo.GetDocStoreSegment() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetHasProx">
            <summary>设置 SegmentInfo.GetHasProx() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetHashCode01">
            <summary>设置 SegmentInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetNormFileNameInt32">
            <summary>设置 SegmentInfo.GetNormFileName(Int32 number) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.GetUseCompoundFile">
            <summary>设置 SegmentInfo.GetUseCompoundFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.HasDeletions">
            <summary>设置 SegmentInfo.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.HasSeparateNorms">
            <summary>设置 SegmentInfo.HasSeparateNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.HasSeparateNormsInt32">
            <summary>设置 SegmentInfo.HasSeparateNorms(Int32 fieldNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.ResetSegmentInfo">
            <summary>设置 SegmentInfo.Reset(SegmentInfo src) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SegStringDirectory">
            <summary>设置 SegmentInfo.SegString(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SetDelCountInt32">
            <summary>设置 SegmentInfo.SetDelCount(Int32 delCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SetDiagnosticsIDictionaryOfStringString">
            <summary>设置 SegmentInfo.SetDiagnostics(IDictionary`2&lt;String,String&gt; diagnostics) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SetDocStoreInt32StringBoolean">
            <summary>设置 SegmentInfo.SetDocStore(Int32 offset, String segment, Boolean isCompoundFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SetDocStoreIsCompoundFileBoolean">
            <summary>设置 SegmentInfo.SetDocStoreIsCompoundFile(Boolean v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SetDocStoreOffsetInt32">
            <summary>设置 SegmentInfo.SetDocStoreOffset(Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SetHasProxBoolean">
            <summary>设置 SegmentInfo.SetHasProx(Boolean hasProx) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SetNumFieldsInt32">
            <summary>设置 SegmentInfo.SetNumFields(Int32 numFields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SetUseCompoundFileBoolean">
            <summary>设置 SegmentInfo.SetUseCompoundFile(Boolean isCompoundFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.SizeInBytes">
            <summary>设置 SegmentInfo.SizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.ToString01">
            <summary>设置 SegmentInfo.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfo.AllInstances.WriteIndexOutput">
            <summary>设置 SegmentInfo.Write(IndexOutput output) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentInfos">
            <summary>Lucene.Net.Index.SegmentInfos 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.#ctor(Lucene.Net.Index.SegmentInfos)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.Bind(System.Collections.Generic.ICollection{Lucene.Net.Index.SegmentInfo})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.Bind(System.Collections.Generic.IEnumerable{Lucene.Net.Index.SegmentInfo})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentInfos.Bind(System.Collections.Generic.IList{Lucene.Net.Index.SegmentInfo})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.Clone">
            <summary>设置 SegmentInfos.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.CommitDirectory">
            <summary>设置 SegmentInfos.Commit(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.Constructor">
            <summary>设置 SegmentInfos.SegmentInfos() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.EqualsObject">
            <summary>设置 SegmentInfos.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.FilesDirectoryBoolean">
            <summary>设置 SegmentInfos.Files(Directory dir, Boolean includeSegmentsFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.FinishCommitDirectory">
            <summary>设置 SegmentInfos.FinishCommit(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GenerationFromSegmentsFileNameString">
            <summary>设置 SegmentInfos.GenerationFromSegmentsFileName(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetCurrentSegmentFileName">
            <summary>设置 SegmentInfos.GetCurrentSegmentFileName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetCurrentSegmentFileNameDirectory">
            <summary>设置 SegmentInfos.GetCurrentSegmentFileName(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetCurrentSegmentFileNameStringArray">
            <summary>设置 SegmentInfos.GetCurrentSegmentFileName(String[] files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetCurrentSegmentGenerationDirectory">
            <summary>设置 SegmentInfos.GetCurrentSegmentGeneration(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetCurrentSegmentGenerationStringArray">
            <summary>设置 SegmentInfos.GetCurrentSegmentGeneration(String[] files) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetDefaultGenFileRetryCount">
            <summary>设置 SegmentInfos.GetDefaultGenFileRetryCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetDefaultGenFileRetryPauseMsec">
            <summary>设置 SegmentInfos.GetDefaultGenFileRetryPauseMsec() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetDefaultGenLookahedCount">
            <summary>设置 SegmentInfos.GetDefaultGenLookahedCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetGeneration">
            <summary>设置 SegmentInfos.GetGeneration() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetHashCode">
            <summary>设置 SegmentInfos.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetInfoStream">
            <summary>设置 SegmentInfos.GetInfoStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetLastGeneration">
            <summary>设置 SegmentInfos.GetLastGeneration() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetNextSegmentFileName">
            <summary>设置 SegmentInfos.GetNextSegmentFileName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetUserData">
            <summary>设置 SegmentInfos.GetUserData() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.GetVersion">
            <summary>设置 SegmentInfos.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.HasExternalSegmentsDirectory">
            <summary>设置 SegmentInfos.HasExternalSegments(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.InfoInt32">
            <summary>设置 SegmentInfos.Info(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.MessageString">
            <summary>设置 SegmentInfos.Message(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.PrepareCommitDirectory">
            <summary>设置 SegmentInfos.PrepareCommit(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.RangeInt32Int32">
            <summary>设置 SegmentInfos.Range(Int32 first, Int32 last) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.ReadCurrentUserDataDirectory">
            <summary>设置 SegmentInfos.ReadCurrentUserData(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.ReadCurrentVersionDirectory">
            <summary>设置 SegmentInfos.ReadCurrentVersion(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.ReadDirectory">
            <summary>设置 SegmentInfos.Read(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.ReadDirectoryString">
            <summary>设置 SegmentInfos.Read(Directory directory, String segmentFileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.ReplaceSegmentInfos">
            <summary>设置 SegmentInfos.Replace(SegmentInfos other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.RollbackCommitDirectory">
            <summary>设置 SegmentInfos.RollbackCommit(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.SegStringDirectory">
            <summary>设置 SegmentInfos.SegString(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.SetDefaultGenFileRetryCountInt32">
            <summary>设置 SegmentInfos.SetDefaultGenFileRetryCount(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.SetDefaultGenFileRetryPauseMsecInt32">
            <summary>设置 SegmentInfos.SetDefaultGenFileRetryPauseMsec(Int32 msec) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.SetDefaultGenLookaheadCountInt32">
            <summary>设置 SegmentInfos.SetDefaultGenLookaheadCount(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.SetInfoStreamStreamWriter">
            <summary>设置 SegmentInfos.SetInfoStream(StreamWriter infoStream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.SetUserDataIDictionaryOfStringString">
            <summary>设置 SegmentInfos.SetUserData(IDictionary`2&lt;String,String&gt; data) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.StaticConstructor">
            <summary>设置 SegmentInfos.SegmentInfos() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.UpdateGenerationSegmentInfos">
            <summary>设置 SegmentInfos.UpdateGeneration(SegmentInfos other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.WriteDirectory">
            <summary>设置 SegmentInfos.Write(Directory directory) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.Clone">
            <summary>设置 SegmentInfos.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.CommitDirectory">
            <summary>设置 SegmentInfos.Commit(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.EqualsObject">
            <summary>设置 SegmentInfos.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.FilesDirectoryBoolean">
            <summary>设置 SegmentInfos.Files(Directory dir, Boolean includeSegmentsFile) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.FinishCommitDirectory">
            <summary>设置 SegmentInfos.FinishCommit(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.GetCurrentSegmentFileName">
            <summary>设置 SegmentInfos.GetCurrentSegmentFileName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.GetGeneration">
            <summary>设置 SegmentInfos.GetGeneration() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.GetHashCode01">
            <summary>设置 SegmentInfos.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.GetLastGeneration">
            <summary>设置 SegmentInfos.GetLastGeneration() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.GetNextSegmentFileName">
            <summary>设置 SegmentInfos.GetNextSegmentFileName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.GetUserData">
            <summary>设置 SegmentInfos.GetUserData() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.GetVersion">
            <summary>设置 SegmentInfos.GetVersion() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.HasExternalSegmentsDirectory">
            <summary>设置 SegmentInfos.HasExternalSegments(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.InfoInt32">
            <summary>设置 SegmentInfos.Info(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.PrepareCommitDirectory">
            <summary>设置 SegmentInfos.PrepareCommit(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.RangeInt32Int32">
            <summary>设置 SegmentInfos.Range(Int32 first, Int32 last) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.ReadDirectory">
            <summary>设置 SegmentInfos.Read(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.ReadDirectoryString">
            <summary>设置 SegmentInfos.Read(Directory directory, String segmentFileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.ReplaceSegmentInfos">
            <summary>设置 SegmentInfos.Replace(SegmentInfos other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.RollbackCommitDirectory">
            <summary>设置 SegmentInfos.RollbackCommit(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.SegStringDirectory">
            <summary>设置 SegmentInfos.SegString(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.SetUserDataIDictionaryOfStringString">
            <summary>设置 SegmentInfos.SetUserData(IDictionary`2&lt;String,String&gt; data) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.UpdateGenerationSegmentInfos">
            <summary>设置 SegmentInfos.UpdateGeneration(SegmentInfos other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentInfos.AllInstances.WriteDirectory">
            <summary>设置 SegmentInfos.Write(Directory directory) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentMerger">
            <summary>Lucene.Net.Index.SegmentMerger 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentMerger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentMerger.#ctor(Lucene.Net.Index.SegmentMerger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentMerger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentMerger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AddIndexReader">
            <summary>设置 SegmentMerger.Add(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AddIndexedIndexReaderFieldInfosICollectionOfStringBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 SegmentMerger.AddIndexed(IndexReader reader, FieldInfos fInfos, ICollection`1&lt;String&gt; names, Boolean storeTermVectors, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean storePayloads, Boolean omitTFAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.CloseReaders">
            <summary>设置 SegmentMerger.CloseReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.ConstructorDirectoryString">
            <summary>设置 SegmentMerger.SegmentMerger(Directory dir, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.ConstructorIndexWriterStringMergePolicyOneMerge">
            <summary>设置 SegmentMerger.SegmentMerger(IndexWriter writer, String name, OneMerge merge) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.CreateCompoundFileString">
            <summary>设置 SegmentMerger.CreateCompoundFile(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.GetDelCounts">
            <summary>设置 SegmentMerger.GetDelCounts() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.GetDocMaps">
            <summary>设置 SegmentMerger.GetDocMaps() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.GetMergedFiles">
            <summary>设置 SegmentMerger.GetMergedFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.HasProx">
            <summary>设置 SegmentMerger.HasProx() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.InitBlock">
            <summary>设置 SegmentMerger.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.Merge">
            <summary>设置 SegmentMerger.Merge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.MergeBoolean">
            <summary>设置 SegmentMerger.Merge(Boolean mergeDocStores) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.MergeFields">
            <summary>设置 SegmentMerger.MergeFields() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.MergeNorms">
            <summary>设置 SegmentMerger.MergeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.MergeTerms">
            <summary>设置 SegmentMerger.MergeTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.MergeVectors">
            <summary>设置 SegmentMerger.MergeVectors() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.SegmentReaderInt32">
            <summary>设置 SegmentMerger.SegmentReader(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.SetMatchingSegmentReaders">
            <summary>设置 SegmentMerger.SetMatchingSegmentReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.StaticConstructor">
            <summary>设置 SegmentMerger.SegmentMerger() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger._ctorb__0Double">
            <summary>设置 SegmentMerger.&lt;.ctor&gt;b__0(Double d) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger._ctorb__2Double">
            <summary>设置 SegmentMerger.&lt;.ctor&gt;b__2(Double d) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.AddIndexReader">
            <summary>设置 SegmentMerger.Add(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.AddIndexedIndexReaderFieldInfosICollectionOfStringBooleanBooleanBooleanBooleanBoolean">
            <summary>设置 SegmentMerger.AddIndexed(IndexReader reader, FieldInfos fInfos, ICollection`1&lt;String&gt; names, Boolean storeTermVectors, Boolean storePositionWithTermVector, Boolean storeOffsetWithTermVector, Boolean storePayloads, Boolean omitTFAndPositions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.CloseReaders">
            <summary>设置 SegmentMerger.CloseReaders() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.CreateCompoundFileString">
            <summary>设置 SegmentMerger.CreateCompoundFile(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.GetDelCounts">
            <summary>设置 SegmentMerger.GetDelCounts() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.GetDocMaps">
            <summary>设置 SegmentMerger.GetDocMaps() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.GetMergedFiles">
            <summary>设置 SegmentMerger.GetMergedFiles() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.HasProx">
            <summary>设置 SegmentMerger.HasProx() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.InitBlock">
            <summary>设置 SegmentMerger.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.Merge">
            <summary>设置 SegmentMerger.Merge() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.MergeBoolean">
            <summary>设置 SegmentMerger.Merge(Boolean mergeDocStores) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.MergeFields">
            <summary>设置 SegmentMerger.MergeFields() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.MergeNorms">
            <summary>设置 SegmentMerger.MergeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.MergeTerms">
            <summary>设置 SegmentMerger.MergeTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.MergeVectors">
            <summary>设置 SegmentMerger.MergeVectors() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.SegmentReaderInt32">
            <summary>设置 SegmentMerger.SegmentReader(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentMerger.AllInstances.SetMatchingSegmentReaders">
            <summary>设置 SegmentMerger.SetMatchingSegmentReaders() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentReader">
            <summary>Lucene.Net.Index.SegmentReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.#ctor(Lucene.Net.Index.SegmentReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.CheckDeletedCounts">
            <summary>设置 SegmentReader.CheckDeletedCounts() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.Clone">
            <summary>设置 SegmentReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.CloneBoolean">
            <summary>设置 SegmentReader.Clone(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.CloneDeletedDocsBitVector">
            <summary>设置 SegmentReader.CloneDeletedDocs(BitVector bv) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.CloneNormBytesByteArray">
            <summary>设置 SegmentReader.CloneNormBytes(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.CommitChangesIDictionaryOfStringString">
            <summary>设置 SegmentReader.CommitChanges(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.Constructor">
            <summary>设置 SegmentReader.SegmentReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.CreateFakeNormsInt32">
            <summary>设置 SegmentReader.CreateFakeNorms(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.Directory">
            <summary>设置 SegmentReader.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.DoClose">
            <summary>设置 SegmentReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.DoCommit">
            <summary>设置 SegmentReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.DoCommitIDictionaryOfStringString">
            <summary>设置 SegmentReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.DoDeleteInt32">
            <summary>设置 SegmentReader.DoDelete(Int32 docNum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.DoSetNormInt32StringByte">
            <summary>设置 SegmentReader.DoSetNorm(Int32 doc, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.DoUndeleteAll">
            <summary>设置 SegmentReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.DocFreqTerm">
            <summary>设置 SegmentReader.DocFreq(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.DocumentInt32FieldSelector">
            <summary>设置 SegmentReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.FakeNorms">
            <summary>设置 SegmentReader.FakeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.FieldInfos">
            <summary>设置 SegmentReader.FieldInfos() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.Files">
            <summary>设置 SegmentReader.Files() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetBooleanDirectorySegmentInfoInt32BooleanInt32">
            <summary>设置 SegmentReader.Get(Boolean readOnly, Directory dir, SegmentInfo si, Int32 readBufferSize, Boolean doOpenStores, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetBooleanSegmentInfoInt32">
            <summary>设置 SegmentReader.Get(Boolean readOnly, SegmentInfo si, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetDeletesCacheKey">
            <summary>设置 SegmentReader.GetDeletesCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetFieldCacheKey">
            <summary>设置 SegmentReader.GetFieldCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 SegmentReader.GetFieldNames(FieldOption fieldOption) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetFieldsReader">
            <summary>设置 SegmentReader.GetFieldsReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetNormsString">
            <summary>设置 SegmentReader.GetNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetOnlySegmentReaderDirectory">
            <summary>设置 SegmentReader.GetOnlySegmentReader(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetOnlySegmentReaderIndexReader">
            <summary>设置 SegmentReader.GetOnlySegmentReader(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetSegmentInfo">
            <summary>设置 SegmentReader.Get(SegmentInfo si) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetSegmentInfo01">
            <summary>设置 SegmentReader.GetSegmentInfo() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetSegmentInfoInt32BooleanInt32">
            <summary>设置 SegmentReader.Get(SegmentInfo si, Int32 readBufferSize, Boolean doOpenStores, Int32 termInfosIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetSegmentName">
            <summary>设置 SegmentReader.GetSegmentName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetTermFreqVectorInt32String">
            <summary>设置 SegmentReader.GetTermFreqVector(Int32 docNumber, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 SegmentReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 SegmentReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetTermFreqVectorsInt32">
            <summary>设置 SegmentReader.GetTermFreqVectors(Int32 docNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetTermInfosIndexDivisor">
            <summary>设置 SegmentReader.GetTermInfosIndexDivisor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetTermVectorsReader">
            <summary>设置 SegmentReader.GetTermVectorsReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetTermVectorsReaderOrig">
            <summary>设置 SegmentReader.GetTermVectorsReaderOrig() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.GetUniqueTermCount">
            <summary>设置 SegmentReader.GetUniqueTermCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.HasDeletions">
            <summary>设置 SegmentReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.HasDeletionsSegmentInfo">
            <summary>设置 SegmentReader.HasDeletions(SegmentInfo si) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.HasNormsString">
            <summary>设置 SegmentReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.HasSeparateNormsSegmentInfo">
            <summary>设置 SegmentReader.HasSeparateNorms(SegmentInfo si) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.InitBlock">
            <summary>设置 SegmentReader.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.IsDeletedInt32">
            <summary>设置 SegmentReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.LoadDeletedDocs">
            <summary>设置 SegmentReader.LoadDeletedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.LoadTermsIndexInt32">
            <summary>设置 SegmentReader.LoadTermsIndex(Int32 termsIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.MaxDoc">
            <summary>设置 SegmentReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.NormsClosed">
            <summary>设置 SegmentReader.NormsClosed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.NormsClosedString">
            <summary>设置 SegmentReader.NormsClosed(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.NormsString">
            <summary>设置 SegmentReader.Norms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.NormsStringByteArrayInt32">
            <summary>设置 SegmentReader.Norms(String field, Byte[] bytes, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.NumDocs">
            <summary>设置 SegmentReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.OpenDocStores">
            <summary>设置 SegmentReader.OpenDocStores() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.OpenNormsDirectoryInt32">
            <summary>设置 SegmentReader.OpenNorms(Directory cfsDir, Int32 readBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ReopenSegmentSegmentInfoBooleanBoolean">
            <summary>设置 SegmentReader.ReopenSegment(SegmentInfo si, Boolean doClone, Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.RollbackCommit">
            <summary>设置 SegmentReader.RollbackCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.SetSegmentInfoSegmentInfo">
            <summary>设置 SegmentReader.SetSegmentInfo(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.StartCommit">
            <summary>设置 SegmentReader.StartCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.StaticConstructor">
            <summary>设置 SegmentReader.SegmentReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.TermDocs">
            <summary>设置 SegmentReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.TermDocsTerm">
            <summary>设置 SegmentReader.TermDocs(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.TermPositions">
            <summary>设置 SegmentReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.Terms">
            <summary>设置 SegmentReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.TermsIndexLoaded">
            <summary>设置 SegmentReader.TermsIndexLoaded() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.TermsTerm">
            <summary>设置 SegmentReader.Terms(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.UsesCompoundFileSegmentInfo">
            <summary>设置 SegmentReader.UsesCompoundFile(SegmentInfo si) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.core_ForNUnitGet">
            <summary>设置 SegmentReader.get_core_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.deletedDocsRef_ForNUnitGet">
            <summary>设置 SegmentReader.get_deletedDocsRef_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.deletedDocs_ForNUnitGet">
            <summary>设置 SegmentReader.get_deletedDocs_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.norms_ForNUnitGet">
            <summary>设置 SegmentReader.get_norms_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.CheckDeletedCounts">
            <summary>设置 SegmentReader.CheckDeletedCounts() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.Clone">
            <summary>设置 SegmentReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.CloneBoolean">
            <summary>设置 SegmentReader.Clone(Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.CloneDeletedDocsBitVector">
            <summary>设置 SegmentReader.CloneDeletedDocs(BitVector bv) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.CloneNormBytesByteArray">
            <summary>设置 SegmentReader.CloneNormBytes(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.CommitChangesIDictionaryOfStringString">
            <summary>设置 SegmentReader.CommitChanges(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.Directory">
            <summary>设置 SegmentReader.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.DoClose">
            <summary>设置 SegmentReader.DoClose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.DoCommit">
            <summary>设置 SegmentReader.DoCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.DoCommitIDictionaryOfStringString">
            <summary>设置 SegmentReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.DoDeleteInt32">
            <summary>设置 SegmentReader.DoDelete(Int32 docNum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.DoSetNormInt32StringByte">
            <summary>设置 SegmentReader.DoSetNorm(Int32 doc, String field, Byte value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.DoUndeleteAll">
            <summary>设置 SegmentReader.DoUndeleteAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.DocFreqTerm">
            <summary>设置 SegmentReader.DocFreq(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.DocumentInt32FieldSelector">
            <summary>设置 SegmentReader.Document(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.FakeNorms">
            <summary>设置 SegmentReader.FakeNorms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.FieldInfos">
            <summary>设置 SegmentReader.FieldInfos() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.Files">
            <summary>设置 SegmentReader.Files() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetDeletesCacheKey">
            <summary>设置 SegmentReader.GetDeletesCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetFieldCacheKey">
            <summary>设置 SegmentReader.GetFieldCacheKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 SegmentReader.GetFieldNames(FieldOption fieldOption) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetFieldsReader">
            <summary>设置 SegmentReader.GetFieldsReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetNormsString">
            <summary>设置 SegmentReader.GetNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetSegmentInfo">
            <summary>设置 SegmentReader.GetSegmentInfo() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetSegmentName">
            <summary>设置 SegmentReader.GetSegmentName() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetTermFreqVectorInt32String">
            <summary>设置 SegmentReader.GetTermFreqVector(Int32 docNumber, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 SegmentReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 SegmentReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetTermFreqVectorsInt32">
            <summary>设置 SegmentReader.GetTermFreqVectors(Int32 docNumber) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetTermInfosIndexDivisor">
            <summary>设置 SegmentReader.GetTermInfosIndexDivisor() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetTermVectorsReader">
            <summary>设置 SegmentReader.GetTermVectorsReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetTermVectorsReaderOrig">
            <summary>设置 SegmentReader.GetTermVectorsReaderOrig() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.GetUniqueTermCount">
            <summary>设置 SegmentReader.GetUniqueTermCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.HasDeletions">
            <summary>设置 SegmentReader.HasDeletions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.HasNormsString">
            <summary>设置 SegmentReader.HasNorms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.InitBlock">
            <summary>设置 SegmentReader.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.IsDeletedInt32">
            <summary>设置 SegmentReader.IsDeleted(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.LoadDeletedDocs">
            <summary>设置 SegmentReader.LoadDeletedDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.LoadTermsIndexInt32">
            <summary>设置 SegmentReader.LoadTermsIndex(Int32 termsIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.MaxDoc">
            <summary>设置 SegmentReader.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.NormsClosed">
            <summary>设置 SegmentReader.NormsClosed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.NormsClosedString">
            <summary>设置 SegmentReader.NormsClosed(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.NormsString">
            <summary>设置 SegmentReader.Norms(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.NormsStringByteArrayInt32">
            <summary>设置 SegmentReader.Norms(String field, Byte[] bytes, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.NumDocs">
            <summary>设置 SegmentReader.NumDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.OpenDocStores">
            <summary>设置 SegmentReader.OpenDocStores() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.OpenNormsDirectoryInt32">
            <summary>设置 SegmentReader.OpenNorms(Directory cfsDir, Int32 readBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.ReopenSegmentSegmentInfoBooleanBoolean">
            <summary>设置 SegmentReader.ReopenSegment(SegmentInfo si, Boolean doClone, Boolean openReadOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.RollbackCommit">
            <summary>设置 SegmentReader.RollbackCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.SetSegmentInfoSegmentInfo">
            <summary>设置 SegmentReader.SetSegmentInfo(SegmentInfo info) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.StartCommit">
            <summary>设置 SegmentReader.StartCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.TermDocs">
            <summary>设置 SegmentReader.TermDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.TermDocsTerm">
            <summary>设置 SegmentReader.TermDocs(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.TermPositions">
            <summary>设置 SegmentReader.TermPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.Terms">
            <summary>设置 SegmentReader.Terms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.TermsIndexLoaded">
            <summary>设置 SegmentReader.TermsIndexLoaded() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.TermsTerm">
            <summary>设置 SegmentReader.Terms(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.core_ForNUnitGet">
            <summary>设置 SegmentReader.get_core_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.deletedDocsRef_ForNUnitGet">
            <summary>设置 SegmentReader.get_deletedDocsRef_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.deletedDocs_ForNUnitGet">
            <summary>设置 SegmentReader.get_deletedDocs_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.AllInstances.norms_ForNUnitGet">
            <summary>设置 SegmentReader.get_norms_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders">
            <summary>Lucene.Net.Index.SegmentReader+CoreReaders 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.#ctor(Lucene.Net.Index.SegmentReader.CoreReaders)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.ConstructorSegmentReaderDirectorySegmentInfoInt32Int32">
            <summary>设置 CoreReaders.CoreReaders(SegmentReader origInstance, Directory dir, SegmentInfo si, Int32 readBufferSize, Int32 termsIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.DecRef">
            <summary>设置 CoreReaders.DecRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.GetCFSReader">
            <summary>设置 CoreReaders.GetCFSReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.GetFieldsReaderOrig">
            <summary>设置 CoreReaders.GetFieldsReaderOrig() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.GetTermVectorsReaderOrig">
            <summary>设置 CoreReaders.GetTermVectorsReaderOrig() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.IncRef">
            <summary>设置 CoreReaders.IncRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.LoadTermsIndexSegmentInfoInt32">
            <summary>设置 CoreReaders.LoadTermsIndex(SegmentInfo si, Int32 termsIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.OpenDocStoresSegmentInfo">
            <summary>设置 CoreReaders.OpenDocStores(SegmentInfo si) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.TermsIndexIsLoaded">
            <summary>设置 CoreReaders.TermsIndexIsLoaded() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.fieldInfos_ForNUnitGet">
            <summary>设置 CoreReaders.get_fieldInfos_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.DecRef">
            <summary>设置 CoreReaders.DecRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.GetCFSReader">
            <summary>设置 CoreReaders.GetCFSReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.GetFieldsReaderOrig">
            <summary>设置 CoreReaders.GetFieldsReaderOrig() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.GetTermVectorsReaderOrig">
            <summary>设置 CoreReaders.GetTermVectorsReaderOrig() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.IncRef">
            <summary>设置 CoreReaders.IncRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.LoadTermsIndexSegmentInfoInt32">
            <summary>设置 CoreReaders.LoadTermsIndex(SegmentInfo si, Int32 termsIndexDivisor) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.OpenDocStoresSegmentInfo">
            <summary>设置 CoreReaders.OpenDocStores(SegmentInfo si) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.TermsIndexIsLoaded">
            <summary>设置 CoreReaders.TermsIndexIsLoaded() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimCoreReaders.AllInstances.fieldInfos_ForNUnitGet">
            <summary>设置 CoreReaders.get_fieldInfos_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm">
            <summary>Lucene.Net.Index.SegmentReader+Norm 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.#ctor(Lucene.Net.Index.SegmentReader.Norm)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.Bind(System.ICloneable{Lucene.Net.Index.SegmentReader.Norm})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.Bytes">
            <summary>设置 Norm.Bytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.BytesByteArrayInt32Int32">
            <summary>设置 Norm.Bytes(Byte[] bytesOut, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.BytesRef">
            <summary>设置 Norm.BytesRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.Clone">
            <summary>设置 Norm.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.CloseInput">
            <summary>设置 Norm.CloseInput() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.ConstructorSegmentReaderIndexInputInt32Int64">
            <summary>设置 Norm.Norm(SegmentReader enclosingInstance, IndexInput in_Renamed, Int32 number, Int64 normSeek) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.CopyOnWrite">
            <summary>设置 Norm.CopyOnWrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.DecRef">
            <summary>设置 Norm.DecRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.Enclosing_InstanceGet">
            <summary>设置 Norm.get_Enclosing_Instance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.IncRef">
            <summary>设置 Norm.IncRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.InitBlockSegmentReader">
            <summary>设置 Norm.InitBlock(SegmentReader enclosingInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.ReWriteSegmentInfo">
            <summary>设置 Norm.ReWrite(SegmentInfo si) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.Bytes">
            <summary>设置 Norm.Bytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.BytesByteArrayInt32Int32">
            <summary>设置 Norm.Bytes(Byte[] bytesOut, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.BytesRef">
            <summary>设置 Norm.BytesRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.Clone">
            <summary>设置 Norm.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.CloseInput">
            <summary>设置 Norm.CloseInput() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.CopyOnWrite">
            <summary>设置 Norm.CopyOnWrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.DecRef">
            <summary>设置 Norm.DecRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.Enclosing_InstanceGet">
            <summary>设置 Norm.get_Enclosing_Instance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.IncRef">
            <summary>设置 Norm.IncRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.InitBlockSegmentReader">
            <summary>设置 Norm.InitBlock(SegmentReader enclosingInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimNorm.AllInstances.ReWriteSegmentInfo">
            <summary>设置 Norm.ReWrite(SegmentInfo si) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef">
            <summary>Lucene.Net.Index.SegmentReader+Ref 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.#ctor(Lucene.Net.Index.SegmentReader.Ref)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.Constructor">
            <summary>设置 Ref.Ref() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.DecRef">
            <summary>设置 Ref.DecRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.IncRef">
            <summary>设置 Ref.IncRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.RefCount">
            <summary>设置 Ref.RefCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.ToString">
            <summary>设置 Ref.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.AllInstances.DecRef">
            <summary>设置 Ref.DecRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.AllInstances.IncRef">
            <summary>设置 Ref.IncRef() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.AllInstances.RefCount">
            <summary>设置 Ref.RefCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentReader.ShimRef.AllInstances.ToString01">
            <summary>设置 Ref.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentTermDocs">
            <summary>Lucene.Net.Index.SegmentTermDocs 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.#ctor(Lucene.Net.Index.SegmentTermDocs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.Bind(Lucene.Net.Index.TermDocs)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.Close">
            <summary>设置 SegmentTermDocs.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.ConstructorSegmentReader">
            <summary>设置 SegmentTermDocs.SegmentTermDocs(SegmentReader parent) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.Doc">
            <summary>设置 SegmentTermDocs.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.Freq">
            <summary>设置 SegmentTermDocs.Freq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.Next">
            <summary>设置 SegmentTermDocs.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.ReadInt32ArrayInt32Array">
            <summary>设置 SegmentTermDocs.Read(Int32[] docs, Int32[] freqs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.ReadNoTfInt32ArrayInt32ArrayInt32">
            <summary>设置 SegmentTermDocs.ReadNoTf(Int32[] docs, Int32[] freqs, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.SeekTerm">
            <summary>设置 SegmentTermDocs.Seek(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.SeekTermEnum">
            <summary>设置 SegmentTermDocs.Seek(TermEnum termEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.SkipProxInt64Int32">
            <summary>设置 SegmentTermDocs.SkipProx(Int64 proxPointer, Int32 payloadLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.SkipToInt32">
            <summary>设置 SegmentTermDocs.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.SkippingDoc">
            <summary>设置 SegmentTermDocs.SkippingDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.freqStream_ForNUnitGet">
            <summary>设置 SegmentTermDocs.get_freqStream_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.freqStream_ForNUnitSetIndexInput">
            <summary>设置 SegmentTermDocs.set_freqStream_ForNUnit(IndexInput value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.Close">
            <summary>设置 SegmentTermDocs.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.Doc">
            <summary>设置 SegmentTermDocs.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.Freq">
            <summary>设置 SegmentTermDocs.Freq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.Next">
            <summary>设置 SegmentTermDocs.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.ReadInt32ArrayInt32Array">
            <summary>设置 SegmentTermDocs.Read(Int32[] docs, Int32[] freqs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.ReadNoTfInt32ArrayInt32ArrayInt32">
            <summary>设置 SegmentTermDocs.ReadNoTf(Int32[] docs, Int32[] freqs, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.SeekTerm">
            <summary>设置 SegmentTermDocs.Seek(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.SeekTermEnum">
            <summary>设置 SegmentTermDocs.Seek(TermEnum termEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.SkipProxInt64Int32">
            <summary>设置 SegmentTermDocs.SkipProx(Int64 proxPointer, Int32 payloadLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.SkipToInt32">
            <summary>设置 SegmentTermDocs.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.SkippingDoc">
            <summary>设置 SegmentTermDocs.SkippingDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.freqStream_ForNUnitGet">
            <summary>设置 SegmentTermDocs.get_freqStream_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermDocs.AllInstances.freqStream_ForNUnitSetIndexInput">
            <summary>设置 SegmentTermDocs.set_freqStream_ForNUnit(IndexInput value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentTermEnum">
            <summary>Lucene.Net.Index.SegmentTermEnum 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.#ctor(Lucene.Net.Index.SegmentTermEnum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.Clone">
            <summary>设置 SegmentTermEnum.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.Close">
            <summary>设置 SegmentTermEnum.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.ConstructorIndexInputFieldInfosBoolean">
            <summary>设置 SegmentTermEnum.SegmentTermEnum(IndexInput i, FieldInfos fis, Boolean isi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.DocFreq">
            <summary>设置 SegmentTermEnum.DocFreq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.FreqPointer">
            <summary>设置 SegmentTermEnum.FreqPointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.Next">
            <summary>设置 SegmentTermEnum.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.Prev">
            <summary>设置 SegmentTermEnum.Prev() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.ProxPointer">
            <summary>设置 SegmentTermEnum.ProxPointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.ScanToTerm">
            <summary>设置 SegmentTermEnum.ScanTo(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.Term">
            <summary>设置 SegmentTermEnum.Term() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.Clone">
            <summary>设置 SegmentTermEnum.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.Close">
            <summary>设置 SegmentTermEnum.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.DocFreq">
            <summary>设置 SegmentTermEnum.DocFreq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.FreqPointer">
            <summary>设置 SegmentTermEnum.FreqPointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.Next">
            <summary>设置 SegmentTermEnum.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.Prev">
            <summary>设置 SegmentTermEnum.Prev() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.ProxPointer">
            <summary>设置 SegmentTermEnum.ProxPointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.ScanToTerm">
            <summary>设置 SegmentTermEnum.ScanTo(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermEnum.AllInstances.Term">
            <summary>设置 SegmentTermEnum.Term() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentTermPositions">
            <summary>Lucene.Net.Index.SegmentTermPositions 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.#ctor(Lucene.Net.Index.SegmentTermPositions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.Bind(Lucene.Net.Index.TermDocs)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.Bind(Lucene.Net.Index.TermPositions)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.Close">
            <summary>设置 SegmentTermPositions.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.ConstructorSegmentReader">
            <summary>设置 SegmentTermPositions.SegmentTermPositions(SegmentReader p) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.GetPayloadByteArrayInt32">
            <summary>设置 SegmentTermPositions.GetPayload(Byte[] data, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.GetPayloadLength">
            <summary>设置 SegmentTermPositions.GetPayloadLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.IsPayloadAvailable">
            <summary>设置 SegmentTermPositions.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.LazySkip">
            <summary>设置 SegmentTermPositions.LazySkip() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.Next">
            <summary>设置 SegmentTermPositions.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.NextPosition">
            <summary>设置 SegmentTermPositions.NextPosition() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.ReadDeltaPosition">
            <summary>设置 SegmentTermPositions.ReadDeltaPosition() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.ReadInt32ArrayInt32Array">
            <summary>设置 SegmentTermPositions.Read(Int32[] docs, Int32[] freqs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.SkipPayload">
            <summary>设置 SegmentTermPositions.SkipPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.SkipPositionsInt32">
            <summary>设置 SegmentTermPositions.SkipPositions(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.SkipProxInt64Int32">
            <summary>设置 SegmentTermPositions.SkipProx(Int64 proxPointer, Int32 payloadLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.SkippingDoc">
            <summary>设置 SegmentTermPositions.SkippingDoc() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.Close">
            <summary>设置 SegmentTermPositions.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.GetPayloadByteArrayInt32">
            <summary>设置 SegmentTermPositions.GetPayload(Byte[] data, Int32 offset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.GetPayloadLength">
            <summary>设置 SegmentTermPositions.GetPayloadLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.IsPayloadAvailable">
            <summary>设置 SegmentTermPositions.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.LazySkip">
            <summary>设置 SegmentTermPositions.LazySkip() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.Next">
            <summary>设置 SegmentTermPositions.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.NextPosition">
            <summary>设置 SegmentTermPositions.NextPosition() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.ReadDeltaPosition">
            <summary>设置 SegmentTermPositions.ReadDeltaPosition() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.ReadInt32ArrayInt32Array">
            <summary>设置 SegmentTermPositions.Read(Int32[] docs, Int32[] freqs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.SkipPayload">
            <summary>设置 SegmentTermPositions.SkipPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.SkipPositionsInt32">
            <summary>设置 SegmentTermPositions.SkipPositions(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.SkipProxInt64Int32">
            <summary>设置 SegmentTermPositions.SkipProx(Int64 proxPointer, Int32 payloadLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSegmentTermPositions.AllInstances.SkippingDoc">
            <summary>设置 SegmentTermPositions.SkippingDoc() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler">
            <summary>Lucene.Net.Index.SerialMergeScheduler 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.#ctor(Lucene.Net.Index.SerialMergeScheduler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.Close">
            <summary>设置 SerialMergeScheduler.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.Constructor">
            <summary>设置 SerialMergeScheduler.SerialMergeScheduler() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.MergeIndexWriter">
            <summary>设置 SerialMergeScheduler.Merge(IndexWriter writer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.AllInstances.Close">
            <summary>设置 SerialMergeScheduler.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSerialMergeScheduler.AllInstances.MergeIndexWriter">
            <summary>设置 SerialMergeScheduler.Merge(IndexWriter writer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy">
            <summary>Lucene.Net.Index.SnapshotDeletionPolicy 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.#ctor(Lucene.Net.Index.SnapshotDeletionPolicy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.Bind(Lucene.Net.Index.IndexDeletionPolicy)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.ConstructorIndexDeletionPolicy">
            <summary>设置 SnapshotDeletionPolicy.SnapshotDeletionPolicy(IndexDeletionPolicy primary) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.OnCommitIListOfIndexCommit">
            <summary>设置 SnapshotDeletionPolicy.OnCommit(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.OnInitIListOfIndexCommit">
            <summary>设置 SnapshotDeletionPolicy.OnInit(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.Release">
            <summary>设置 SnapshotDeletionPolicy.Release() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.Snapshot">
            <summary>设置 SnapshotDeletionPolicy.Snapshot() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.WrapCommitsIListOfIndexCommit">
            <summary>设置 SnapshotDeletionPolicy.WrapCommits(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.AllInstances.OnCommitIListOfIndexCommit">
            <summary>设置 SnapshotDeletionPolicy.OnCommit(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.AllInstances.OnInitIListOfIndexCommit">
            <summary>设置 SnapshotDeletionPolicy.OnInit(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.AllInstances.Release">
            <summary>设置 SnapshotDeletionPolicy.Release() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.AllInstances.Snapshot">
            <summary>设置 SnapshotDeletionPolicy.Snapshot() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSnapshotDeletionPolicy.AllInstances.WrapCommitsIListOfIndexCommit">
            <summary>设置 SnapshotDeletionPolicy.WrapCommits(IList`1&lt;IndexCommit&gt; commits) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper">
            <summary>Lucene.Net.Index.SortedTermVectorMapper 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.#ctor(Lucene.Net.Index.SortedTermVectorMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.ConstructorBooleanBooleanIComparerOfTermVectorEntry">
            <summary>设置 SortedTermVectorMapper.SortedTermVectorMapper(Boolean ignoringPositions, Boolean ignoringOffsets, IComparer`1&lt;TermVectorEntry&gt; comparator) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.ConstructorIComparerOfTermVectorEntry">
            <summary>设置 SortedTermVectorMapper.SortedTermVectorMapper(IComparer`1&lt;TermVectorEntry&gt; comparator) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.GetTermVectorEntrySet">
            <summary>设置 SortedTermVectorMapper.GetTermVectorEntrySet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 SortedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 SortedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.AllInstances.GetTermVectorEntrySet">
            <summary>设置 SortedTermVectorMapper.GetTermVectorEntrySet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.AllInstances.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 SortedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimSortedTermVectorMapper.AllInstances.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 SortedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimStaleReaderException">
            <summary>Lucene.Net.Index.StaleReaderException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimStaleReaderException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimStaleReaderException.#ctor(Lucene.Net.Index.StaleReaderException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimStaleReaderException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimStaleReaderException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimStaleReaderException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimStaleReaderException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimStaleReaderException.ConstructorString">
            <summary>设置 StaleReaderException.StaleReaderException(String message) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimStaleReaderException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTerm">
            <summary>Lucene.Net.Index.Term 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTerm.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTerm.#ctor(Lucene.Net.Index.Term)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTerm.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTerm.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTerm.Bind(System.IComparable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTerm.Bind(System.IEquatable{Lucene.Net.Index.Term})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.CompareToObject">
            <summary>设置 Term.CompareTo(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.CompareToTerm">
            <summary>设置 Term.CompareTo(Term other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.ConstructorString">
            <summary>设置 Term.Term(String fld) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.ConstructorStringString">
            <summary>设置 Term.Term(String fld, String txt) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.ConstructorStringStringBoolean">
            <summary>设置 Term.Term(String fld, String txt, Boolean intern) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.CreateTermString">
            <summary>设置 Term.CreateTerm(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.EqualsObject">
            <summary>设置 Term.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.EqualsTerm">
            <summary>设置 Term.Equals(Term other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.Field">
            <summary>设置 Term.Field() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.GetHashCode">
            <summary>设置 Term.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.OnDeserializedStreamingContext">
            <summary>设置 Term.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.SetStringString">
            <summary>设置 Term.Set(String fld, String txt) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.Text">
            <summary>设置 Term.Text() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.ToString">
            <summary>设置 Term.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.text_ForNUnitGet">
            <summary>设置 Term.get_text_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTerm.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.CompareToObject">
            <summary>设置 Term.CompareTo(Object other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.CompareToTerm">
            <summary>设置 Term.CompareTo(Term other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.CreateTermString">
            <summary>设置 Term.CreateTerm(String text) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.EqualsObject">
            <summary>设置 Term.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.EqualsTerm">
            <summary>设置 Term.Equals(Term other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.Field">
            <summary>设置 Term.Field() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.GetHashCode01">
            <summary>设置 Term.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.OnDeserializedStreamingContext">
            <summary>设置 Term.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.SetStringString">
            <summary>设置 Term.Set(String fld, String txt) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.Text">
            <summary>设置 Term.Text() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.ToString01">
            <summary>设置 Term.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTerm.AllInstances.text_ForNUnitGet">
            <summary>设置 Term.get_text_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermEnum">
            <summary>Lucene.Net.Index.TermEnum 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermEnum.#ctor(Lucene.Net.Index.TermEnum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermEnum.Constructor">
            <summary>设置 TermEnum.TermEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermEnum.SkipToTerm">
            <summary>设置 TermEnum.SkipTo(Term target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermEnum.AllInstances.SkipToTerm">
            <summary>设置 TermEnum.SkipTo(Term target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorEntry">
            <summary>Lucene.Net.Index.TermVectorEntry 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntry.#ctor(Lucene.Net.Index.TermVectorEntry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.Constructor">
            <summary>设置 TermVectorEntry.TermVectorEntry() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.ConstructorStringStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 TermVectorEntry.TermVectorEntry(String field, String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.EqualsObject">
            <summary>设置 TermVectorEntry.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.GetField">
            <summary>设置 TermVectorEntry.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.GetFrequency">
            <summary>设置 TermVectorEntry.GetFrequency() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.GetHashCode">
            <summary>设置 TermVectorEntry.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.GetOffsets">
            <summary>设置 TermVectorEntry.GetOffsets() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.GetPositions">
            <summary>设置 TermVectorEntry.GetPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.GetTerm">
            <summary>设置 TermVectorEntry.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.SetFrequencyInt32">
            <summary>设置 TermVectorEntry.SetFrequency(Int32 frequency) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.SetOffsetsTermVectorOffsetInfoArray">
            <summary>设置 TermVectorEntry.SetOffsets(TermVectorOffsetInfo[] offsets) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.SetPositionsInt32Array">
            <summary>设置 TermVectorEntry.SetPositions(Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.ToString">
            <summary>设置 TermVectorEntry.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.EqualsObject">
            <summary>设置 TermVectorEntry.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.GetField">
            <summary>设置 TermVectorEntry.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.GetFrequency">
            <summary>设置 TermVectorEntry.GetFrequency() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.GetHashCode01">
            <summary>设置 TermVectorEntry.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.GetOffsets">
            <summary>设置 TermVectorEntry.GetOffsets() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.GetPositions">
            <summary>设置 TermVectorEntry.GetPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.GetTerm">
            <summary>设置 TermVectorEntry.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.SetFrequencyInt32">
            <summary>设置 TermVectorEntry.SetFrequency(Int32 frequency) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.SetOffsetsTermVectorOffsetInfoArray">
            <summary>设置 TermVectorEntry.SetOffsets(TermVectorOffsetInfo[] offsets) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.SetPositionsInt32Array">
            <summary>设置 TermVectorEntry.SetPositions(Int32[] positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntry.AllInstances.ToString01">
            <summary>设置 TermVectorEntry.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator">
            <summary>Lucene.Net.Index.TermVectorEntryFreqSortedComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.#ctor(Lucene.Net.Index.TermVectorEntryFreqSortedComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.Bind(System.Collections.Generic.IComparer{System.Object})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.CompareObjectObject">
            <summary>设置 TermVectorEntryFreqSortedComparator.Compare(Object object_Renamed, Object object1) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.Constructor">
            <summary>设置 TermVectorEntryFreqSortedComparator.TermVectorEntryFreqSortedComparator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorEntryFreqSortedComparator.AllInstances.CompareObjectObject">
            <summary>设置 TermVectorEntryFreqSortedComparator.Compare(Object object_Renamed, Object object1) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorMapper">
            <summary>Lucene.Net.Index.TermVectorMapper 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorMapper.#ctor(Lucene.Net.Index.TermVectorMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.Constructor">
            <summary>设置 TermVectorMapper.TermVectorMapper() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.ConstructorBooleanBoolean">
            <summary>设置 TermVectorMapper.TermVectorMapper(Boolean ignoringPositions, Boolean ignoringOffsets) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.IsIgnoringOffsets">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.IsIgnoringPositions">
            <summary>设置 TermVectorMapper.IsIgnoringPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.SetDocumentNumberInt32">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.AllInstances.IsIgnoringOffsets">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.AllInstances.IsIgnoringPositions">
            <summary>设置 TermVectorMapper.IsIgnoringPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorMapper.AllInstances.SetDocumentNumberInt32">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo">
            <summary>Lucene.Net.Index.TermVectorOffsetInfo 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.#ctor(Lucene.Net.Index.TermVectorOffsetInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.Constructor">
            <summary>设置 TermVectorOffsetInfo.TermVectorOffsetInfo() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.ConstructorInt32Int32">
            <summary>设置 TermVectorOffsetInfo.TermVectorOffsetInfo(Int32 startOffset, Int32 endOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.EqualsObject">
            <summary>设置 TermVectorOffsetInfo.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.GetEndOffset">
            <summary>设置 TermVectorOffsetInfo.GetEndOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.GetHashCode">
            <summary>设置 TermVectorOffsetInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.GetStartOffset">
            <summary>设置 TermVectorOffsetInfo.GetStartOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.SetEndOffsetInt32">
            <summary>设置 TermVectorOffsetInfo.SetEndOffset(Int32 endOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.SetStartOffsetInt32">
            <summary>设置 TermVectorOffsetInfo.SetStartOffset(Int32 startOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.StaticConstructor">
            <summary>设置 TermVectorOffsetInfo.TermVectorOffsetInfo() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.AllInstances.EqualsObject">
            <summary>设置 TermVectorOffsetInfo.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.AllInstances.GetEndOffset">
            <summary>设置 TermVectorOffsetInfo.GetEndOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.AllInstances.GetHashCode01">
            <summary>设置 TermVectorOffsetInfo.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.AllInstances.GetStartOffset">
            <summary>设置 TermVectorOffsetInfo.GetStartOffset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.AllInstances.SetEndOffsetInt32">
            <summary>设置 TermVectorOffsetInfo.SetEndOffset(Int32 endOffset) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorOffsetInfo.AllInstances.SetStartOffsetInt32">
            <summary>设置 TermVectorOffsetInfo.SetStartOffset(Int32 startOffset) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorsReader">
            <summary>Lucene.Net.Index.TermVectorsReader 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorsReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorsReader.#ctor(Lucene.Net.Index.TermVectorsReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorsReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorsReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.ShimTermVectorsReader.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.CanReadRawDocs">
            <summary>设置 TermVectorsReader.CanReadRawDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.CheckValidFormatIndexInput">
            <summary>设置 TermVectorsReader.CheckValidFormat(IndexInput in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.Clone">
            <summary>设置 TermVectorsReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.Close">
            <summary>设置 TermVectorsReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.ConstructorDirectoryStringFieldInfos">
            <summary>设置 TermVectorsReader.TermVectorsReader(Directory d, String segment, FieldInfos fieldInfos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.ConstructorDirectoryStringFieldInfosInt32">
            <summary>设置 TermVectorsReader.TermVectorsReader(Directory d, String segment, FieldInfos fieldInfos, Int32 readBufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.ConstructorDirectoryStringFieldInfosInt32Int32Int32">
            <summary>设置 TermVectorsReader.TermVectorsReader(Directory d, String segment, FieldInfos fieldInfos, Int32 readBufferSize, Int32 docStoreOffset, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.GetInt32">
            <summary>设置 TermVectorsReader.Get(Int32 docNum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.GetInt32String">
            <summary>设置 TermVectorsReader.Get(Int32 docNum, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.GetInt32StringTermVectorMapper">
            <summary>设置 TermVectorsReader.Get(Int32 docNum, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.GetInt32TermVectorMapper">
            <summary>设置 TermVectorsReader.Get(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.GetTvdStream">
            <summary>设置 TermVectorsReader.GetTvdStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.GetTvfStream">
            <summary>设置 TermVectorsReader.GetTvfStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.RawDocsInt32ArrayInt32ArrayInt32Int32">
            <summary>设置 TermVectorsReader.RawDocs(Int32[] tvdLengths, Int32[] tvfLengths, Int32 startDocID, Int32 numDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.ReadFieldsInt32">
            <summary>设置 TermVectorsReader.ReadFields(Int32 fieldCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.ReadTermVectorStringInt64TermVectorMapper">
            <summary>设置 TermVectorsReader.ReadTermVector(String field, Int64 tvfPointer, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.ReadTermVectorsStringArrayInt64ArrayTermVectorMapper">
            <summary>设置 TermVectorsReader.ReadTermVectors(String[] fields, Int64[] tvfPointers, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.ReadTvfPointersInt32">
            <summary>设置 TermVectorsReader.ReadTvfPointers(Int32 fieldCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.SeekTvxInt32">
            <summary>设置 TermVectorsReader.SeekTvx(Int32 docNum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.Size">
            <summary>设置 TermVectorsReader.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.StaticConstructor">
            <summary>设置 TermVectorsReader.TermVectorsReader() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.CanReadRawDocs">
            <summary>设置 TermVectorsReader.CanReadRawDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.CheckValidFormatIndexInput">
            <summary>设置 TermVectorsReader.CheckValidFormat(IndexInput in_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.Clone">
            <summary>设置 TermVectorsReader.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.Close">
            <summary>设置 TermVectorsReader.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.GetInt32">
            <summary>设置 TermVectorsReader.Get(Int32 docNum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.GetInt32String">
            <summary>设置 TermVectorsReader.Get(Int32 docNum, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.GetInt32StringTermVectorMapper">
            <summary>设置 TermVectorsReader.Get(Int32 docNum, String field, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.GetInt32TermVectorMapper">
            <summary>设置 TermVectorsReader.Get(Int32 docNumber, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.GetTvdStream">
            <summary>设置 TermVectorsReader.GetTvdStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.GetTvfStream">
            <summary>设置 TermVectorsReader.GetTvfStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.RawDocsInt32ArrayInt32ArrayInt32Int32">
            <summary>设置 TermVectorsReader.RawDocs(Int32[] tvdLengths, Int32[] tvfLengths, Int32 startDocID, Int32 numDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.ReadFieldsInt32">
            <summary>设置 TermVectorsReader.ReadFields(Int32 fieldCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.ReadTermVectorStringInt64TermVectorMapper">
            <summary>设置 TermVectorsReader.ReadTermVector(String field, Int64 tvfPointer, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.ReadTermVectorsStringArrayInt64ArrayTermVectorMapper">
            <summary>设置 TermVectorsReader.ReadTermVectors(String[] fields, Int64[] tvfPointers, TermVectorMapper mapper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.ReadTvfPointersInt32">
            <summary>设置 TermVectorsReader.ReadTvfPointers(Int32 fieldCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.SeekTvxInt32">
            <summary>设置 TermVectorsReader.SeekTvx(Int32 docNum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.ShimTermVectorsReader.AllInstances.Size">
            <summary>设置 TermVectorsReader.Size() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubAbstractAllTermDocs">
            <summary>Lucene.Net.Index.AbstractAllTermDocs 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubAbstractAllTermDocs.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubAbstractAllTermDocs.InitializeStub">
            <summary>初始化 type StubAbstractAllTermDocs 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubAbstractAllTermDocs.IsDeleted(System.Int32)">
            <summary>设置 AbstractAllTermDocs.IsDeleted(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubAbstractAllTermDocs.IsDeletedInt32">
            <summary>设置 AbstractAllTermDocs.IsDeleted(Int32 doc) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubAbstractAllTermDocs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubAbstractAllTermDocs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubAbstractAllTermDocs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubCheckIndex">
            <summary>Lucene.Net.Index.CheckIndex 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCheckIndex.#ctor(Lucene.Net.Store.Directory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCheckIndex.CheckIndex_Renamed_Method">
            <summary>设置 CheckIndex.CheckIndex_Renamed_Method() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCheckIndex.CheckIndex_Renamed_Method(System.Collections.Generic.IList{System.String})">
            <summary>设置 CheckIndex.CheckIndex_Renamed_Method(IList`1&lt;String&gt; onlySegments) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCheckIndex.CheckIndex_Renamed_Method01">
            <summary>设置 CheckIndex.CheckIndex_Renamed_Method() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCheckIndex.CheckIndex_Renamed_MethodIListOfString">
            <summary>设置 CheckIndex.CheckIndex_Renamed_Method(IList`1&lt;String&gt; onlySegments) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCheckIndex.FixIndex(Lucene.Net.Index.CheckIndex.Status)">
            <summary>设置 CheckIndex.FixIndex(Status result) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCheckIndex.FixIndexCheckIndexStatus">
            <summary>设置 CheckIndex.FixIndex(Status result) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCheckIndex.InitializeStub">
            <summary>初始化 type StubCheckIndex 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubCheckIndex.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubCheckIndex.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubCheckIndex.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubCompoundFileReader">
            <summary>Lucene.Net.Index.CompoundFileReader 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.#ctor(Lucene.Net.Store.Directory,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.#ctor(Lucene.Net.Store.Directory,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.ClearLock(System.String)">
            <summary>设置 Directory.ClearLock(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.ClearLockString">
            <summary>设置 Directory.ClearLock(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.Close">
            <summary>设置 CompoundFileReader.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.Close01">
            <summary>设置 CompoundFileReader.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.CreateOutput(System.String)">
            <summary>设置 CompoundFileReader.CreateOutput(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.CreateOutputString">
            <summary>设置 CompoundFileReader.CreateOutput(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.DeleteFile(System.String)">
            <summary>设置 CompoundFileReader.DeleteFile(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.DeleteFileString">
            <summary>设置 CompoundFileReader.DeleteFile(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.Dispose">
            <summary>设置 CompoundFileReader.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.Dispose01">
            <summary>设置 CompoundFileReader.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.FileExists(System.String)">
            <summary>设置 CompoundFileReader.FileExists(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.FileExistsString">
            <summary>设置 CompoundFileReader.FileExists(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.FileLength(System.String)">
            <summary>设置 CompoundFileReader.FileLength(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.FileLengthString">
            <summary>设置 CompoundFileReader.FileLength(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.FileModified(System.String)">
            <summary>设置 CompoundFileReader.FileModified(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.FileModifiedString">
            <summary>设置 CompoundFileReader.FileModified(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.GetDirectory">
            <summary>设置 CompoundFileReader.GetDirectory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.GetDirectory01">
            <summary>设置 CompoundFileReader.GetDirectory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.GetLockFactory">
            <summary>设置 Directory.GetLockFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.GetLockFactory01">
            <summary>设置 Directory.GetLockFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.GetLockID">
            <summary>设置 Directory.GetLockID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.GetLockID01">
            <summary>设置 Directory.GetLockID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.GetName">
            <summary>设置 CompoundFileReader.GetName() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.GetName01">
            <summary>设置 CompoundFileReader.GetName() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.InitializeStub">
            <summary>初始化 type StubCompoundFileReader 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.List">
            <summary>设置 CompoundFileReader.List() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.List01">
            <summary>设置 CompoundFileReader.List() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.ListAll">
            <summary>设置 Directory.ListAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.ListAll01">
            <summary>设置 Directory.ListAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.MakeLock(System.String)">
            <summary>设置 CompoundFileReader.MakeLock(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.MakeLockString">
            <summary>设置 CompoundFileReader.MakeLock(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.OpenInput(System.String)">
            <summary>设置 CompoundFileReader.OpenInput(String id) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.OpenInput(System.String,System.Int32)">
            <summary>设置 CompoundFileReader.OpenInput(String id, Int32 readBufferSize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.OpenInputString">
            <summary>设置 CompoundFileReader.OpenInput(String id) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.OpenInputStringInt32">
            <summary>设置 CompoundFileReader.OpenInput(String id, Int32 readBufferSize) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.RenameFile(System.String,System.String)">
            <summary>设置 CompoundFileReader.RenameFile(String from, String to) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.RenameFileStringString">
            <summary>设置 CompoundFileReader.RenameFile(String from, String to) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.SetLockFactory(Lucene.Net.Store.LockFactory)">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.SetLockFactoryLockFactory">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.Sync(System.String)">
            <summary>设置 Directory.Sync(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.SyncString">
            <summary>设置 Directory.Sync(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.ToString">
            <summary>设置 Directory.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.ToString01">
            <summary>设置 Directory.ToString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubCompoundFileReader.TouchFile(System.String)">
            <summary>设置 CompoundFileReader.TouchFile(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubCompoundFileReader.TouchFileString">
            <summary>设置 CompoundFileReader.TouchFile(String name) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubCompoundFileReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubCompoundFileReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubCompoundFileReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler">
            <summary>Lucene.Net.Index.ConcurrentMergeScheduler 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.ClearSuppressExceptions">
            <summary>设置 ConcurrentMergeScheduler.ClearSuppressExceptions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.ClearSuppressExceptions01">
            <summary>设置 ConcurrentMergeScheduler.ClearSuppressExceptions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.Close">
            <summary>设置 ConcurrentMergeScheduler.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.Close01">
            <summary>设置 ConcurrentMergeScheduler.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.DoMerge(Lucene.Net.Index.MergePolicy.OneMerge)">
            <summary>设置 ConcurrentMergeScheduler.DoMerge(OneMerge merge) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.DoMergeMergePolicyOneMerge">
            <summary>设置 ConcurrentMergeScheduler.DoMerge(OneMerge merge) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.GetMaxThreadCount">
            <summary>设置 ConcurrentMergeScheduler.GetMaxThreadCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.GetMaxThreadCount01">
            <summary>设置 ConcurrentMergeScheduler.GetMaxThreadCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.GetMergeThread(Lucene.Net.Index.IndexWriter,Lucene.Net.Index.MergePolicy.OneMerge)">
            <summary>设置 ConcurrentMergeScheduler.GetMergeThread(IndexWriter writer, OneMerge merge) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.GetMergeThreadIndexWriterMergePolicyOneMerge">
            <summary>设置 ConcurrentMergeScheduler.GetMergeThread(IndexWriter writer, OneMerge merge) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.GetMergeThreadPriority">
            <summary>设置 ConcurrentMergeScheduler.GetMergeThreadPriority() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.GetMergeThreadPriority01">
            <summary>设置 ConcurrentMergeScheduler.GetMergeThreadPriority() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.HandleMergeException(System.Exception)">
            <summary>设置 ConcurrentMergeScheduler.HandleMergeException(Exception exc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.HandleMergeExceptionException">
            <summary>设置 ConcurrentMergeScheduler.HandleMergeException(Exception exc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.InitializeStub">
            <summary>初始化 type StubConcurrentMergeScheduler 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.Merge(Lucene.Net.Index.IndexWriter)">
            <summary>设置 ConcurrentMergeScheduler.Merge(IndexWriter writer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.MergeIndexWriter">
            <summary>设置 ConcurrentMergeScheduler.Merge(IndexWriter writer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.SetMaxThreadCount(System.Int32)">
            <summary>设置 ConcurrentMergeScheduler.SetMaxThreadCount(Int32 count) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.SetMaxThreadCountInt32">
            <summary>设置 ConcurrentMergeScheduler.SetMaxThreadCount(Int32 count) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.SetMergeThreadPriority(System.Int32)">
            <summary>设置 ConcurrentMergeScheduler.SetMergeThreadPriority(Int32 pri) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.SetMergeThreadPriorityInt32">
            <summary>设置 ConcurrentMergeScheduler.SetMergeThreadPriority(Int32 pri) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.SetSuppressExceptions">
            <summary>设置 ConcurrentMergeScheduler.SetSuppressExceptions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.SetSuppressExceptions01">
            <summary>设置 ConcurrentMergeScheduler.SetSuppressExceptions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.Sync">
            <summary>设置 ConcurrentMergeScheduler.Sync() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.Sync01">
            <summary>设置 ConcurrentMergeScheduler.Sync() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubConcurrentMergeScheduler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubFieldReaderException">
            <summary>Lucene.Net.Index.FieldReaderException 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.#ctor(System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubFieldReaderException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubFieldReaderException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.InitializeStub">
            <summary>初始化 type StubFieldReaderException 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldReaderException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldReaderException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldReaderException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldReaderException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldReaderException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldReaderException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldReaderException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldReaderException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldReaderException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldReaderException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper">
            <summary>Lucene.Net.Index.FieldSortedTermVectorMapper 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.#ctor(System.Collections.Generic.IComparer{Lucene.Net.Index.TermVectorEntry})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.#ctor(System.Boolean,System.Boolean,System.Collections.Generic.IComparer{Lucene.Net.Index.TermVectorEntry})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.GetComparator">
            <summary>设置 FieldSortedTermVectorMapper.GetComparator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.GetComparator01">
            <summary>设置 FieldSortedTermVectorMapper.GetComparator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.GetFieldToTerms">
            <summary>设置 FieldSortedTermVectorMapper.GetFieldToTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.GetFieldToTerms01">
            <summary>设置 FieldSortedTermVectorMapper.GetFieldToTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.InitializeStub">
            <summary>初始化 type StubFieldSortedTermVectorMapper 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.IsIgnoringOffsets">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.IsIgnoringOffsets01">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.IsIgnoringPositions">
            <summary>设置 TermVectorMapper.IsIgnoringPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.IsIgnoringPositions01">
            <summary>设置 TermVectorMapper.IsIgnoringPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.Map(System.String,System.Int32,Lucene.Net.Index.TermVectorOffsetInfo[],System.Int32[])">
            <summary>设置 FieldSortedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 FieldSortedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.SetDocumentNumber(System.Int32)">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.SetDocumentNumberInt32">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.SetExpectations(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>设置 FieldSortedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 FieldSortedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFieldSortedTermVectorMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubFilterIndexReader">
            <summary>Lucene.Net.Index.FilterIndexReader 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.#ctor(Lucene.Net.Index.IndexReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.AcquireWriteLock">
            <summary>设置 IndexReader.AcquireWriteLock() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.AcquireWriteLock01">
            <summary>设置 IndexReader.AcquireWriteLock() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Clone(System.Boolean)">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Clone">
            <summary>设置 FilterIndexReader.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.Clone01">
            <summary>设置 FilterIndexReader.Clone() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.CloneBoolean">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DecRef">
            <summary>设置 IndexReader.DecRef() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DecRef01">
            <summary>设置 IndexReader.DecRef() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DeleteDocument(System.Int32)">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DeleteDocumentInt32">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DeleteDocuments(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DeleteDocumentsTerm">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Directory">
            <summary>设置 FilterIndexReader.Directory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.Directory01">
            <summary>设置 FilterIndexReader.Directory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoClose">
            <summary>设置 FilterIndexReader.DoClose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoClose01">
            <summary>设置 FilterIndexReader.DoClose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoCommit">
            <summary>设置 FilterIndexReader.DoCommit() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoCommit(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>设置 FilterIndexReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoCommit01">
            <summary>设置 FilterIndexReader.DoCommit() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoCommitIDictionaryOfStringString">
            <summary>设置 FilterIndexReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoDelete(System.Int32)">
            <summary>设置 FilterIndexReader.DoDelete(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoDeleteInt32">
            <summary>设置 FilterIndexReader.DoDelete(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoSetNorm(System.Int32,System.String,System.Byte)">
            <summary>设置 FilterIndexReader.DoSetNorm(Int32 d, String f, Byte b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoSetNormInt32StringByte">
            <summary>设置 FilterIndexReader.DoSetNorm(Int32 d, String f, Byte b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoUndeleteAll">
            <summary>设置 FilterIndexReader.DoUndeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DoUndeleteAll01">
            <summary>设置 FilterIndexReader.DoUndeleteAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 FilterIndexReader.DocFreq(Term t) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DocFreqTerm">
            <summary>设置 FilterIndexReader.DocFreq(Term t) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Document(System.Int32)">
            <summary>设置 IndexReader.Document(Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Document(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 FilterIndexReader.Document(Int32 n, FieldSelector fieldSelector) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DocumentInt32">
            <summary>设置 IndexReader.Document(Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.DocumentInt32FieldSelector">
            <summary>设置 FilterIndexReader.Document(Int32 n, FieldSelector fieldSelector) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetDeletesCacheKey">
            <summary>设置 FilterIndexReader.GetDeletesCacheKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetDeletesCacheKey01">
            <summary>设置 FilterIndexReader.GetDeletesCacheKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetDisableFakeNorms">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetDisableFakeNorms01">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetFieldCacheKey">
            <summary>设置 FilterIndexReader.GetFieldCacheKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetFieldCacheKey01">
            <summary>设置 FilterIndexReader.GetFieldCacheKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetFieldNames(Lucene.Net.Index.IndexReader.FieldOption)">
            <summary>设置 FilterIndexReader.GetFieldNames(FieldOption fieldNames) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 FilterIndexReader.GetFieldNames(FieldOption fieldNames) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetIndexCommit">
            <summary>设置 IndexReader.GetIndexCommit() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetIndexCommit01">
            <summary>设置 IndexReader.GetIndexCommit() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetRefCount">
            <summary>设置 IndexReader.GetRefCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetRefCount01">
            <summary>设置 IndexReader.GetRefCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetSequentialSubReaders">
            <summary>设置 FilterIndexReader.GetSequentialSubReaders() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetSequentialSubReaders01">
            <summary>设置 FilterIndexReader.GetSequentialSubReaders() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermFreqVector(System.Int32,System.String,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermFreqVector(System.Int32,System.String)">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, String field) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermFreqVector(System.Int32,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermFreqVectorInt32String">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, String field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 FilterIndexReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermFreqVectors(System.Int32)">
            <summary>设置 FilterIndexReader.GetTermFreqVectors(Int32 docNumber) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermFreqVectorsInt32">
            <summary>设置 FilterIndexReader.GetTermFreqVectors(Int32 docNumber) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermInfosIndexDivisor">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetTermInfosIndexDivisor01">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetUniqueTermCount">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetUniqueTermCount01">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetVersion">
            <summary>设置 FilterIndexReader.GetVersion() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.GetVersion01">
            <summary>设置 FilterIndexReader.GetVersion() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.HasDeletions">
            <summary>设置 FilterIndexReader.HasDeletions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.HasDeletions01">
            <summary>设置 FilterIndexReader.HasDeletions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.HasNorms(System.String)">
            <summary>设置 FilterIndexReader.HasNorms(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.HasNormsString">
            <summary>设置 FilterIndexReader.HasNorms(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.IncRef">
            <summary>设置 IndexReader.IncRef() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.IncRef01">
            <summary>设置 IndexReader.IncRef() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.InitializeStub">
            <summary>初始化 type StubFilterIndexReader 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.IsCurrent">
            <summary>设置 FilterIndexReader.IsCurrent() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.IsCurrent01">
            <summary>设置 FilterIndexReader.IsCurrent() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.IsDeleted(System.Int32)">
            <summary>设置 FilterIndexReader.IsDeleted(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.IsDeletedInt32">
            <summary>设置 FilterIndexReader.IsDeleted(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.IsOptimized">
            <summary>设置 FilterIndexReader.IsOptimized() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.IsOptimized01">
            <summary>设置 FilterIndexReader.IsOptimized() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.MaxDoc">
            <summary>设置 FilterIndexReader.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.MaxDoc01">
            <summary>设置 FilterIndexReader.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Norms(System.String)">
            <summary>设置 FilterIndexReader.Norms(String f) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Norms(System.String,System.Byte[],System.Int32)">
            <summary>设置 FilterIndexReader.Norms(String f, Byte[] bytes, Int32 offset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.NormsString">
            <summary>设置 FilterIndexReader.Norms(String f) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.NormsStringByteArrayInt32">
            <summary>设置 FilterIndexReader.Norms(String f, Byte[] bytes, Int32 offset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.NumDeletedDocs">
            <summary>设置 IndexReader.NumDeletedDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.NumDeletedDocs01">
            <summary>设置 IndexReader.NumDeletedDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.NumDocs">
            <summary>设置 FilterIndexReader.NumDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.NumDocs01">
            <summary>设置 FilterIndexReader.NumDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Reopen">
            <summary>设置 IndexReader.Reopen() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Reopen(Lucene.Net.Index.IndexCommit)">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Reopen(System.Boolean)">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.Reopen01">
            <summary>设置 IndexReader.Reopen() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.ReopenBoolean">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.ReopenIndexCommit">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.SetDisableFakeNorms(System.Boolean)">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.SetDisableFakeNormsBoolean">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.SetNorm(System.Int32,System.String,System.Byte)">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.SetNorm(System.Int32,System.String,System.Single)">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.SetNormInt32StringByte">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.SetNormInt32StringSingle">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.SetTermInfosIndexDivisor(System.Int32)">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.SetTermInfosIndexDivisorInt32">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermDocs">
            <summary>设置 FilterIndexReader.TermDocs() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermDocs(Lucene.Net.Index.Term)">
            <summary>设置 FilterIndexReader.TermDocs(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermDocs01">
            <summary>设置 FilterIndexReader.TermDocs() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermDocsTerm">
            <summary>设置 FilterIndexReader.TermDocs(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermPositions">
            <summary>设置 FilterIndexReader.TermPositions() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermPositions(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.TermPositions(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermPositions01">
            <summary>设置 FilterIndexReader.TermPositions() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermPositionsTerm">
            <summary>设置 IndexReader.TermPositions(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Terms">
            <summary>设置 FilterIndexReader.Terms() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.Terms(Lucene.Net.Index.Term)">
            <summary>设置 FilterIndexReader.Terms(Term t) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.Terms01">
            <summary>设置 FilterIndexReader.Terms() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.TermsTerm">
            <summary>设置 FilterIndexReader.Terms(Term t) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubFilterIndexReader.UndeleteAll">
            <summary>设置 IndexReader.UndeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubFilterIndexReader.UndeleteAll01">
            <summary>设置 IndexReader.UndeleteAll() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFilterIndexReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFilterIndexReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubFilterIndexReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubIndexCommit">
            <summary>Lucene.Net.Index.IndexCommit 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.Delete">
            <summary>设置 IndexCommit.Delete() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.Delete01">
            <summary>设置 IndexCommit.Delete() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.Equals(System.Object)">
            <summary>设置 IndexCommit.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.EqualsObject">
            <summary>设置 IndexCommit.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.GetDirectory">
            <summary>设置 IndexCommit.GetDirectory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.GetDirectory01">
            <summary>设置 IndexCommit.GetDirectory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.GetFileNames">
            <summary>设置 IndexCommit.GetFileNames() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.GetFileNames01">
            <summary>设置 IndexCommit.GetFileNames() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.GetGeneration">
            <summary>设置 IndexCommit.GetGeneration() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.GetGeneration01">
            <summary>设置 IndexCommit.GetGeneration() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.GetHashCode">
            <summary>设置 IndexCommit.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.GetHashCode01">
            <summary>设置 IndexCommit.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.GetSegmentsFileName">
            <summary>设置 IndexCommit.GetSegmentsFileName() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.GetSegmentsFileName01">
            <summary>设置 IndexCommit.GetSegmentsFileName() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.GetTimestamp">
            <summary>设置 IndexCommit.GetTimestamp() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.GetTimestamp01">
            <summary>设置 IndexCommit.GetTimestamp() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.GetUserData">
            <summary>设置 IndexCommit.GetUserData() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.GetUserData01">
            <summary>设置 IndexCommit.GetUserData() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.GetVersion">
            <summary>设置 IndexCommit.GetVersion() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.GetVersion01">
            <summary>设置 IndexCommit.GetVersion() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.InitializeStub">
            <summary>初始化 type StubIndexCommit 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.IsDeleted">
            <summary>设置 IndexCommit.IsDeleted() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.IsDeleted01">
            <summary>设置 IndexCommit.IsDeleted() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexCommit.IsOptimized">
            <summary>设置 IndexCommit.IsOptimized() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexCommit.IsOptimized01">
            <summary>设置 IndexCommit.IsOptimized() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexCommit.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexCommit.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexCommit.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubIndexDeletionPolicy">
            <summary>Lucene.Net.Index.IndexDeletionPolicy 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexDeletionPolicy.#ctor">
            <summary>初始化 type StubIndexDeletionPolicy 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexDeletionPolicy.ln::Lucene#Net#Index#IndexDeletionPolicy#OnCommit(System.Collections.Generic.IList{Lucene.Net.Index.IndexCommit})">
            <summary>设置 IndexDeletionPolicy.OnCommit(IList`1&lt;IndexCommit&gt; commits) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexDeletionPolicy.ln::Lucene#Net#Index#IndexDeletionPolicy#OnInit(System.Collections.Generic.IList{Lucene.Net.Index.IndexCommit})">
            <summary>设置 IndexDeletionPolicy.OnInit(IList`1&lt;IndexCommit&gt; commits) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexDeletionPolicy.OnCommitIListOfIndexCommit">
            <summary>设置 IndexDeletionPolicy.OnCommit(IList`1&lt;IndexCommit&gt; commits) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexDeletionPolicy.OnInitIListOfIndexCommit">
            <summary>设置 IndexDeletionPolicy.OnInit(IList`1&lt;IndexCommit&gt; commits) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubIndexReader">
            <summary>Lucene.Net.Index.IndexReader 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.#ctor(Lucene.Net.Store.Directory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.AcquireWriteLock">
            <summary>设置 IndexReader.AcquireWriteLock() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.AcquireWriteLock01">
            <summary>设置 IndexReader.AcquireWriteLock() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Clone(System.Boolean)">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Clone">
            <summary>设置 IndexReader.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.Clone01">
            <summary>设置 IndexReader.Clone() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.CloneBoolean">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DecRef">
            <summary>设置 IndexReader.DecRef() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DecRef01">
            <summary>设置 IndexReader.DecRef() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DeleteDocument(System.Int32)">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DeleteDocumentInt32">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DeleteDocuments(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DeleteDocumentsTerm">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Directory">
            <summary>设置 IndexReader.Directory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.Directory01">
            <summary>设置 IndexReader.Directory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DoClose">
            <summary>设置 IndexReader.DoClose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DoClose01">
            <summary>设置 IndexReader.DoClose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DoCommit">
            <summary>设置 IndexReader.DoCommit() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DoCommit(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>设置 IndexReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DoCommit01">
            <summary>设置 IndexReader.DoCommit() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DoCommitIDictionaryOfStringString">
            <summary>设置 IndexReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DoDelete(System.Int32)">
            <summary>设置 IndexReader.DoDelete(Int32 docNum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DoDeleteInt32">
            <summary>设置 IndexReader.DoDelete(Int32 docNum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DoSetNorm(System.Int32,System.String,System.Byte)">
            <summary>设置 IndexReader.DoSetNorm(Int32 doc, String field, Byte value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DoSetNormInt32StringByte">
            <summary>设置 IndexReader.DoSetNorm(Int32 doc, String field, Byte value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DoUndeleteAll">
            <summary>设置 IndexReader.DoUndeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DoUndeleteAll01">
            <summary>设置 IndexReader.DoUndeleteAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.DocFreq(Term t) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DocFreqTerm">
            <summary>设置 IndexReader.DocFreq(Term t) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Document(System.Int32)">
            <summary>设置 IndexReader.Document(Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Document(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 IndexReader.Document(Int32 n, FieldSelector fieldSelector) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DocumentInt32">
            <summary>设置 IndexReader.Document(Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.DocumentInt32FieldSelector">
            <summary>设置 IndexReader.Document(Int32 n, FieldSelector fieldSelector) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetDeletesCacheKey">
            <summary>设置 IndexReader.GetDeletesCacheKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetDeletesCacheKey01">
            <summary>设置 IndexReader.GetDeletesCacheKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetDisableFakeNorms">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetDisableFakeNorms01">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetFieldCacheKey">
            <summary>设置 IndexReader.GetFieldCacheKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetFieldCacheKey01">
            <summary>设置 IndexReader.GetFieldCacheKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetFieldNames(Lucene.Net.Index.IndexReader.FieldOption)">
            <summary>设置 IndexReader.GetFieldNames(FieldOption fldOption) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 IndexReader.GetFieldNames(FieldOption fldOption) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetIndexCommit">
            <summary>设置 IndexReader.GetIndexCommit() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetIndexCommit01">
            <summary>设置 IndexReader.GetIndexCommit() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetRefCount">
            <summary>设置 IndexReader.GetRefCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetRefCount01">
            <summary>设置 IndexReader.GetRefCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetSequentialSubReaders">
            <summary>设置 IndexReader.GetSequentialSubReaders() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetSequentialSubReaders01">
            <summary>设置 IndexReader.GetSequentialSubReaders() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetTermFreqVector(System.Int32,System.String)">
            <summary>设置 IndexReader.GetTermFreqVector(Int32 docNumber, String field) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetTermFreqVector(System.Int32,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 IndexReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetTermFreqVector(System.Int32,System.String,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 IndexReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetTermFreqVectorInt32String">
            <summary>设置 IndexReader.GetTermFreqVector(Int32 docNumber, String field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 IndexReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 IndexReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetTermFreqVectors(System.Int32)">
            <summary>设置 IndexReader.GetTermFreqVectors(Int32 docNumber) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetTermFreqVectorsInt32">
            <summary>设置 IndexReader.GetTermFreqVectors(Int32 docNumber) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetTermInfosIndexDivisor">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetTermInfosIndexDivisor01">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetUniqueTermCount">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetUniqueTermCount01">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.GetVersion">
            <summary>设置 IndexReader.GetVersion() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.GetVersion01">
            <summary>设置 IndexReader.GetVersion() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.HasDeletions">
            <summary>设置 IndexReader.HasDeletions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.HasDeletions01">
            <summary>设置 IndexReader.HasDeletions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.HasNorms(System.String)">
            <summary>设置 IndexReader.HasNorms(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.HasNormsString">
            <summary>设置 IndexReader.HasNorms(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.IncRef">
            <summary>设置 IndexReader.IncRef() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.IncRef01">
            <summary>设置 IndexReader.IncRef() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.InitializeStub">
            <summary>初始化 type StubIndexReader 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.IsCurrent">
            <summary>设置 IndexReader.IsCurrent() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.IsCurrent01">
            <summary>设置 IndexReader.IsCurrent() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.IsDeleted(System.Int32)">
            <summary>设置 IndexReader.IsDeleted(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.IsDeletedInt32">
            <summary>设置 IndexReader.IsDeleted(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.IsOptimized">
            <summary>设置 IndexReader.IsOptimized() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.IsOptimized01">
            <summary>设置 IndexReader.IsOptimized() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.MaxDoc">
            <summary>设置 IndexReader.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.MaxDoc01">
            <summary>设置 IndexReader.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Norms(System.String,System.Byte[],System.Int32)">
            <summary>设置 IndexReader.Norms(String field, Byte[] bytes, Int32 offset) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Norms(System.String)">
            <summary>设置 IndexReader.Norms(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.NormsString">
            <summary>设置 IndexReader.Norms(String field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.NormsStringByteArrayInt32">
            <summary>设置 IndexReader.Norms(String field, Byte[] bytes, Int32 offset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.NumDeletedDocs">
            <summary>设置 IndexReader.NumDeletedDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.NumDeletedDocs01">
            <summary>设置 IndexReader.NumDeletedDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.NumDocs">
            <summary>设置 IndexReader.NumDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.NumDocs01">
            <summary>设置 IndexReader.NumDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Reopen">
            <summary>设置 IndexReader.Reopen() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Reopen(Lucene.Net.Index.IndexCommit)">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Reopen(System.Boolean)">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.Reopen01">
            <summary>设置 IndexReader.Reopen() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.ReopenBoolean">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.ReopenIndexCommit">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.SetDisableFakeNorms(System.Boolean)">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.SetDisableFakeNormsBoolean">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.SetNorm(System.Int32,System.String,System.Byte)">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.SetNorm(System.Int32,System.String,System.Single)">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.SetNormInt32StringByte">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.SetNormInt32StringSingle">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.SetTermInfosIndexDivisor(System.Int32)">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.SetTermInfosIndexDivisorInt32">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.TermDocs">
            <summary>设置 IndexReader.TermDocs() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.TermDocs(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.TermDocs(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.TermDocs01">
            <summary>设置 IndexReader.TermDocs() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.TermDocsTerm">
            <summary>设置 IndexReader.TermDocs(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.TermPositions">
            <summary>设置 IndexReader.TermPositions() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.TermPositions(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.TermPositions(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.TermPositions01">
            <summary>设置 IndexReader.TermPositions() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.TermPositionsTerm">
            <summary>设置 IndexReader.TermPositions(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Terms">
            <summary>设置 IndexReader.Terms() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.Terms(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.Terms(Term t) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.Terms01">
            <summary>设置 IndexReader.Terms() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.TermsTerm">
            <summary>设置 IndexReader.Terms(Term t) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexReader.UndeleteAll">
            <summary>设置 IndexReader.UndeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexReader.UndeleteAll01">
            <summary>设置 IndexReader.UndeleteAll() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubIndexWriter">
            <summary>Lucene.Net.Index.IndexWriter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(System.String,Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(System.IO.FileInfo,Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,Lucene.Net.Analysis.Analyzer,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,System.Boolean,Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,Lucene.Net.Analysis.Analyzer,Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(System.String,Lucene.Net.Analysis.Analyzer,Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(System.String,Lucene.Net.Analysis.Analyzer,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(System.IO.FileInfo,Lucene.Net.Analysis.Analyzer,Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(System.IO.FileInfo,Lucene.Net.Analysis.Analyzer,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,System.Boolean,Lucene.Net.Analysis.Analyzer,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,Lucene.Net.Analysis.Analyzer,System.Boolean,Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,Lucene.Net.Analysis.Analyzer,Lucene.Net.Index.IndexDeletionPolicy,Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,System.Boolean,Lucene.Net.Analysis.Analyzer,Lucene.Net.Index.IndexDeletionPolicy)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(System.String,Lucene.Net.Analysis.Analyzer,System.Boolean,Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(System.IO.FileInfo,Lucene.Net.Analysis.Analyzer,System.Boolean,Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,Lucene.Net.Analysis.Analyzer,System.Boolean,Lucene.Net.Index.IndexDeletionPolicy,Lucene.Net.Index.IndexWriter.MaxFieldLength)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,System.Boolean,Lucene.Net.Analysis.Analyzer,System.Boolean,Lucene.Net.Index.IndexDeletionPolicy)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.#ctor(Lucene.Net.Store.Directory,Lucene.Net.Analysis.Analyzer,Lucene.Net.Index.IndexDeletionPolicy,Lucene.Net.Index.IndexWriter.MaxFieldLength,Lucene.Net.Index.IndexCommit)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Abort">
            <summary>设置 IndexWriter.Abort() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.Abort01">
            <summary>设置 IndexWriter.Abort() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.AddDocument(Lucene.Net.Documents.Document)">
            <summary>设置 IndexWriter.AddDocument(Document doc) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.AddDocument(Lucene.Net.Documents.Document,Lucene.Net.Analysis.Analyzer)">
            <summary>设置 IndexWriter.AddDocument(Document doc, Analyzer analyzer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.AddDocumentDocument">
            <summary>设置 IndexWriter.AddDocument(Document doc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.AddDocumentDocumentAnalyzer">
            <summary>设置 IndexWriter.AddDocument(Document doc, Analyzer analyzer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.AddIndexes(Lucene.Net.Index.IndexReader[])">
            <summary>设置 IndexWriter.AddIndexes(IndexReader[] readers) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.AddIndexes(Lucene.Net.Store.Directory[])">
            <summary>设置 IndexWriter.AddIndexes(Directory[] dirs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.AddIndexesDirectoryArray">
            <summary>设置 IndexWriter.AddIndexes(Directory[] dirs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.AddIndexesIndexReaderArray">
            <summary>设置 IndexWriter.AddIndexes(IndexReader[] readers) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.AddIndexesNoOptimize(Lucene.Net.Store.Directory[])">
            <summary>设置 IndexWriter.AddIndexesNoOptimize(Directory[] dirs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.AddIndexesNoOptimizeDirectoryArray">
            <summary>设置 IndexWriter.AddIndexesNoOptimize(Directory[] dirs) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Close">
            <summary>设置 IndexWriter.Close() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Close(System.Boolean)">
            <summary>设置 IndexWriter.Close(Boolean waitForMerges) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.Close01">
            <summary>设置 IndexWriter.Close() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.CloseBoolean">
            <summary>设置 IndexWriter.Close(Boolean waitForMerges) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteAll">
            <summary>设置 IndexWriter.DeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteAll01">
            <summary>设置 IndexWriter.DeleteAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteDocuments(Lucene.Net.Search.Query[])">
            <summary>设置 IndexWriter.DeleteDocuments(Query[] queries) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteDocuments(Lucene.Net.Index.Term)">
            <summary>设置 IndexWriter.DeleteDocuments(Term term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteDocuments(Lucene.Net.Search.Query)">
            <summary>设置 IndexWriter.DeleteDocuments(Query query) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteDocuments(Lucene.Net.Index.Term[])">
            <summary>设置 IndexWriter.DeleteDocuments(Term[] terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteDocumentsQuery">
            <summary>设置 IndexWriter.DeleteDocuments(Query query) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteDocumentsQueryArray">
            <summary>设置 IndexWriter.DeleteDocuments(Query[] queries) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteDocumentsTerm">
            <summary>设置 IndexWriter.DeleteDocuments(Term term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.DeleteDocumentsTermArray">
            <summary>设置 IndexWriter.DeleteDocuments(Term[] terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Dispose">
            <summary>设置 IndexWriter.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.Dispose01">
            <summary>设置 IndexWriter.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.DoAfterFlush">
            <summary>设置 IndexWriter.DoAfterFlush() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.DoAfterFlush01">
            <summary>设置 IndexWriter.DoAfterFlush() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.DoBeforeFlush">
            <summary>设置 IndexWriter.DoBeforeFlush() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.DoBeforeFlush01">
            <summary>设置 IndexWriter.DoBeforeFlush() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.DocCount">
            <summary>设置 IndexWriter.DocCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.DocCount01">
            <summary>设置 IndexWriter.DocCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.ExpungeDeletes">
            <summary>设置 IndexWriter.ExpungeDeletes() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.ExpungeDeletes(System.Boolean)">
            <summary>设置 IndexWriter.ExpungeDeletes(Boolean doWait) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.ExpungeDeletes01">
            <summary>设置 IndexWriter.ExpungeDeletes() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.ExpungeDeletesBoolean">
            <summary>设置 IndexWriter.ExpungeDeletes(Boolean doWait) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetAnalyzer">
            <summary>设置 IndexWriter.GetAnalyzer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetAnalyzer01">
            <summary>设置 IndexWriter.GetAnalyzer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetDirectory">
            <summary>设置 IndexWriter.GetDirectory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetDirectory01">
            <summary>设置 IndexWriter.GetDirectory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxBufferedDeleteTerms">
            <summary>设置 IndexWriter.GetMaxBufferedDeleteTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxBufferedDeleteTerms01">
            <summary>设置 IndexWriter.GetMaxBufferedDeleteTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxBufferedDocs">
            <summary>设置 IndexWriter.GetMaxBufferedDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxBufferedDocs01">
            <summary>设置 IndexWriter.GetMaxBufferedDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxFieldLength">
            <summary>设置 IndexWriter.GetMaxFieldLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxFieldLength01">
            <summary>设置 IndexWriter.GetMaxFieldLength() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxMergeDocs">
            <summary>设置 IndexWriter.GetMaxMergeDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxMergeDocs01">
            <summary>设置 IndexWriter.GetMaxMergeDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxSyncPauseSeconds">
            <summary>设置 IndexWriter.GetMaxSyncPauseSeconds() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMaxSyncPauseSeconds01">
            <summary>设置 IndexWriter.GetMaxSyncPauseSeconds() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMergeFactor">
            <summary>设置 IndexWriter.GetMergeFactor() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMergeFactor01">
            <summary>设置 IndexWriter.GetMergeFactor() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMergePolicy">
            <summary>设置 IndexWriter.GetMergePolicy() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMergePolicy01">
            <summary>设置 IndexWriter.GetMergePolicy() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMergeScheduler">
            <summary>设置 IndexWriter.GetMergeScheduler() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMergeScheduler01">
            <summary>设置 IndexWriter.GetMergeScheduler() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetMergedSegmentWarmer">
            <summary>设置 IndexWriter.GetMergedSegmentWarmer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetMergedSegmentWarmer01">
            <summary>设置 IndexWriter.GetMergedSegmentWarmer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetNextMerge_forNUnit">
            <summary>设置 IndexWriter.GetNextMerge_forNUnit() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetNextMerge_forNUnit01">
            <summary>设置 IndexWriter.GetNextMerge_forNUnit() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetRAMBufferSizeMB">
            <summary>设置 IndexWriter.GetRAMBufferSizeMB() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetRAMBufferSizeMB01">
            <summary>设置 IndexWriter.GetRAMBufferSizeMB() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetReader">
            <summary>设置 IndexWriter.GetReader() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetReader(System.Int32)">
            <summary>设置 IndexWriter.GetReader(Int32 termInfosIndexDivisor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetReader01">
            <summary>设置 IndexWriter.GetReader() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetReaderInt32">
            <summary>设置 IndexWriter.GetReader(Int32 termInfosIndexDivisor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetSimilarity">
            <summary>设置 IndexWriter.GetSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetSimilarity01">
            <summary>设置 IndexWriter.GetSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetTermIndexInterval">
            <summary>设置 IndexWriter.GetTermIndexInterval() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetTermIndexInterval01">
            <summary>设置 IndexWriter.GetTermIndexInterval() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetUseCompoundFile">
            <summary>设置 IndexWriter.GetUseCompoundFile() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetUseCompoundFile01">
            <summary>设置 IndexWriter.GetUseCompoundFile() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.GetWriteLockTimeout">
            <summary>设置 IndexWriter.GetWriteLockTimeout() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.GetWriteLockTimeout01">
            <summary>设置 IndexWriter.GetWriteLockTimeout() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.HasDeletions">
            <summary>设置 IndexWriter.HasDeletions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.HasDeletions01">
            <summary>设置 IndexWriter.HasDeletions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.InitializeStub">
            <summary>初始化 type StubIndexWriter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.MaxDoc">
            <summary>设置 IndexWriter.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.MaxDoc01">
            <summary>设置 IndexWriter.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Message(System.String)">
            <summary>设置 IndexWriter.Message(String message) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.MessageString">
            <summary>设置 IndexWriter.Message(String message) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.NewestSegment">
            <summary>设置 IndexWriter.NewestSegment() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.NewestSegment01">
            <summary>设置 IndexWriter.NewestSegment() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.NumDeletedDocs(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 IndexWriter.NumDeletedDocs(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.NumDeletedDocsSegmentInfo">
            <summary>设置 IndexWriter.NumDeletedDocs(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.NumDocs">
            <summary>设置 IndexWriter.NumDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.NumDocs01">
            <summary>设置 IndexWriter.NumDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Optimize">
            <summary>设置 IndexWriter.Optimize() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Optimize(System.Boolean)">
            <summary>设置 IndexWriter.Optimize(Boolean doWait) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Optimize(System.Int32)">
            <summary>设置 IndexWriter.Optimize(Int32 maxNumSegments) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Optimize(System.Int32,System.Boolean)">
            <summary>设置 IndexWriter.Optimize(Int32 maxNumSegments, Boolean doWait) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.Optimize01">
            <summary>设置 IndexWriter.Optimize() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.OptimizeBoolean">
            <summary>设置 IndexWriter.Optimize(Boolean doWait) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.OptimizeInt32">
            <summary>设置 IndexWriter.Optimize(Int32 maxNumSegments) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.OptimizeInt32Boolean">
            <summary>设置 IndexWriter.Optimize(Int32 maxNumSegments, Boolean doWait) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Rollback">
            <summary>设置 IndexWriter.Rollback() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.Rollback01">
            <summary>设置 IndexWriter.Rollback() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SegString">
            <summary>设置 IndexWriter.SegString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SegString01">
            <summary>设置 IndexWriter.SegString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetAllowMinus1Position">
            <summary>设置 IndexWriter.SetAllowMinus1Position() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetAllowMinus1Position01">
            <summary>设置 IndexWriter.SetAllowMinus1Position() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxBufferedDeleteTerms(System.Int32)">
            <summary>设置 IndexWriter.SetMaxBufferedDeleteTerms(Int32 maxBufferedDeleteTerms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxBufferedDeleteTermsInt32">
            <summary>设置 IndexWriter.SetMaxBufferedDeleteTerms(Int32 maxBufferedDeleteTerms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxBufferedDocs(System.Int32)">
            <summary>设置 IndexWriter.SetMaxBufferedDocs(Int32 maxBufferedDocs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxBufferedDocsInt32">
            <summary>设置 IndexWriter.SetMaxBufferedDocs(Int32 maxBufferedDocs) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxFieldLength(System.Int32)">
            <summary>设置 IndexWriter.SetMaxFieldLength(Int32 maxFieldLength) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxFieldLengthInt32">
            <summary>设置 IndexWriter.SetMaxFieldLength(Int32 maxFieldLength) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxMergeDocs(System.Int32)">
            <summary>设置 IndexWriter.SetMaxMergeDocs(Int32 maxMergeDocs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxMergeDocsInt32">
            <summary>设置 IndexWriter.SetMaxMergeDocs(Int32 maxMergeDocs) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxSyncPauseSeconds(System.Double)">
            <summary>设置 IndexWriter.SetMaxSyncPauseSeconds(Double seconds) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMaxSyncPauseSecondsDouble">
            <summary>设置 IndexWriter.SetMaxSyncPauseSeconds(Double seconds) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMergeFactor(System.Int32)">
            <summary>设置 IndexWriter.SetMergeFactor(Int32 mergeFactor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMergeFactorInt32">
            <summary>设置 IndexWriter.SetMergeFactor(Int32 mergeFactor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMergePolicy(Lucene.Net.Index.MergePolicy)">
            <summary>设置 IndexWriter.SetMergePolicy(MergePolicy mp) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMergePolicyMergePolicy">
            <summary>设置 IndexWriter.SetMergePolicy(MergePolicy mp) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMergeScheduler(Lucene.Net.Index.MergeScheduler)">
            <summary>设置 IndexWriter.SetMergeScheduler(MergeScheduler mergeScheduler) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMergeSchedulerMergeScheduler">
            <summary>设置 IndexWriter.SetMergeScheduler(MergeScheduler mergeScheduler) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetMergedSegmentWarmer(Lucene.Net.Index.IndexWriter.IndexReaderWarmer)">
            <summary>设置 IndexWriter.SetMergedSegmentWarmer(IndexReaderWarmer warmer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetMergedSegmentWarmerIndexWriterIndexReaderWarmer">
            <summary>设置 IndexWriter.SetMergedSegmentWarmer(IndexReaderWarmer warmer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetRAMBufferSizeMB(System.Double)">
            <summary>设置 IndexWriter.SetRAMBufferSizeMB(Double mb) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetRAMBufferSizeMBDouble">
            <summary>设置 IndexWriter.SetRAMBufferSizeMB(Double mb) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetSimilarity(Lucene.Net.Search.Similarity)">
            <summary>设置 IndexWriter.SetSimilarity(Similarity similarity) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetSimilaritySimilarity">
            <summary>设置 IndexWriter.SetSimilarity(Similarity similarity) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetTermIndexInterval(System.Int32)">
            <summary>设置 IndexWriter.SetTermIndexInterval(Int32 interval) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetTermIndexIntervalInt32">
            <summary>设置 IndexWriter.SetTermIndexInterval(Int32 interval) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetUseCompoundFile(System.Boolean)">
            <summary>设置 IndexWriter.SetUseCompoundFile(Boolean value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetUseCompoundFileBoolean">
            <summary>设置 IndexWriter.SetUseCompoundFile(Boolean value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.SetWriteLockTimeout(System.Int64)">
            <summary>设置 IndexWriter.SetWriteLockTimeout(Int64 writeLockTimeout) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.SetWriteLockTimeoutInt64">
            <summary>设置 IndexWriter.SetWriteLockTimeout(Int64 writeLockTimeout) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.TestPoint(System.String)">
            <summary>设置 IndexWriter.TestPoint(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.TestPointString">
            <summary>设置 IndexWriter.TestPoint(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.UpdateDocument(Lucene.Net.Index.Term,Lucene.Net.Documents.Document)">
            <summary>设置 IndexWriter.UpdateDocument(Term term, Document doc) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.UpdateDocument(Lucene.Net.Index.Term,Lucene.Net.Documents.Document,Lucene.Net.Analysis.Analyzer)">
            <summary>设置 IndexWriter.UpdateDocument(Term term, Document doc, Analyzer analyzer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.UpdateDocumentTermDocument">
            <summary>设置 IndexWriter.UpdateDocument(Term term, Document doc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.UpdateDocumentTermDocumentAnalyzer">
            <summary>设置 IndexWriter.UpdateDocument(Term term, Document doc, Analyzer analyzer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.Verbose">
            <summary>设置 IndexWriter.Verbose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.Verbose01">
            <summary>设置 IndexWriter.Verbose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubIndexWriter.WaitForMerges">
            <summary>设置 IndexWriter.WaitForMerges() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubIndexWriter.WaitForMerges01">
            <summary>设置 IndexWriter.WaitForMerges() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubIndexWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy">
            <summary>Lucene.Net.Index.LogByteSizeMergePolicy 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.#ctor(Lucene.Net.Index.IndexWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.Close">
            <summary>设置 LogMergePolicy.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.Close01">
            <summary>设置 LogMergePolicy.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.FindMerges(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.FindMerges(SegmentInfos infos) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.FindMergesForOptimize(Lucene.Net.Index.SegmentInfos,System.Int32,Lucene.Net.Support.Set{Lucene.Net.Index.SegmentInfo})">
            <summary>设置 LogMergePolicy.FindMergesForOptimize(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.FindMergesForOptimizeSegmentInfosInt32SetOfSegmentInfo">
            <summary>设置 LogMergePolicy.FindMergesForOptimize(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.FindMergesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMerges(SegmentInfos infos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.FindMergesToExpungeDeletes(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.FindMergesToExpungeDeletesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetCalibrateSizeByDeletes">
            <summary>设置 LogMergePolicy.GetCalibrateSizeByDeletes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetCalibrateSizeByDeletes01">
            <summary>设置 LogMergePolicy.GetCalibrateSizeByDeletes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetMaxMergeDocs">
            <summary>设置 LogMergePolicy.GetMaxMergeDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetMaxMergeDocs01">
            <summary>设置 LogMergePolicy.GetMaxMergeDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetMaxMergeMB">
            <summary>设置 LogByteSizeMergePolicy.GetMaxMergeMB() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetMaxMergeMB01">
            <summary>设置 LogByteSizeMergePolicy.GetMaxMergeMB() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetMergeFactor">
            <summary>设置 LogMergePolicy.GetMergeFactor() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetMergeFactor01">
            <summary>设置 LogMergePolicy.GetMergeFactor() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetMinMergeMB">
            <summary>设置 LogByteSizeMergePolicy.GetMinMergeMB() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetMinMergeMB01">
            <summary>设置 LogByteSizeMergePolicy.GetMinMergeMB() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetUseCompoundDocStore">
            <summary>设置 LogMergePolicy.GetUseCompoundDocStore() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetUseCompoundDocStore01">
            <summary>设置 LogMergePolicy.GetUseCompoundDocStore() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetUseCompoundFile">
            <summary>设置 LogMergePolicy.GetUseCompoundFile() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.GetUseCompoundFile01">
            <summary>设置 LogMergePolicy.GetUseCompoundFile() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.InitializeStub">
            <summary>初始化 type StubLogByteSizeMergePolicy 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetCalibrateSizeByDeletes(System.Boolean)">
            <summary>设置 LogMergePolicy.SetCalibrateSizeByDeletes(Boolean calibrateSizeByDeletes) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetCalibrateSizeByDeletesBoolean">
            <summary>设置 LogMergePolicy.SetCalibrateSizeByDeletes(Boolean calibrateSizeByDeletes) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetMaxMergeDocs(System.Int32)">
            <summary>设置 LogMergePolicy.SetMaxMergeDocs(Int32 maxMergeDocs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetMaxMergeDocsInt32">
            <summary>设置 LogMergePolicy.SetMaxMergeDocs(Int32 maxMergeDocs) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetMaxMergeMB(System.Double)">
            <summary>设置 LogByteSizeMergePolicy.SetMaxMergeMB(Double mb) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetMaxMergeMBDouble">
            <summary>设置 LogByteSizeMergePolicy.SetMaxMergeMB(Double mb) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetMergeFactor(System.Int32)">
            <summary>设置 LogMergePolicy.SetMergeFactor(Int32 mergeFactor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetMergeFactorInt32">
            <summary>设置 LogMergePolicy.SetMergeFactor(Int32 mergeFactor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetMinMergeMB(System.Double)">
            <summary>设置 LogByteSizeMergePolicy.SetMinMergeMB(Double mb) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetMinMergeMBDouble">
            <summary>设置 LogByteSizeMergePolicy.SetMinMergeMB(Double mb) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetUseCompoundDocStore(System.Boolean)">
            <summary>设置 LogMergePolicy.SetUseCompoundDocStore(Boolean useCompoundDocStore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetUseCompoundDocStoreBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundDocStore(Boolean useCompoundDocStore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetUseCompoundFile(System.Boolean)">
            <summary>设置 LogMergePolicy.SetUseCompoundFile(Boolean useCompoundFile) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SetUseCompoundFileBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundFile(Boolean useCompoundFile) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.Size(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogByteSizeMergePolicy.Size(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SizeBytes(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.SizeBytes(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SizeBytesSegmentInfo">
            <summary>设置 LogMergePolicy.SizeBytes(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SizeDocs(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.SizeDocs(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SizeDocsSegmentInfo">
            <summary>设置 LogMergePolicy.SizeDocs(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.SizeSegmentInfo">
            <summary>设置 LogByteSizeMergePolicy.Size(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.UseCompoundDocStore(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.UseCompoundDocStore(SegmentInfos infos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.UseCompoundDocStoreSegmentInfos">
            <summary>设置 LogMergePolicy.UseCompoundDocStore(SegmentInfos infos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.UseCompoundFile(Lucene.Net.Index.SegmentInfos,Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.UseCompoundFile(SegmentInfos infos, SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.UseCompoundFileSegmentInfosSegmentInfo">
            <summary>设置 LogMergePolicy.UseCompoundFile(SegmentInfos infos, SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.Verbose">
            <summary>设置 LogMergePolicy.Verbose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.Verbose01">
            <summary>设置 LogMergePolicy.Verbose() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogByteSizeMergePolicy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubLogDocMergePolicy">
            <summary>Lucene.Net.Index.LogDocMergePolicy 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.#ctor(Lucene.Net.Index.IndexWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.Close">
            <summary>设置 LogMergePolicy.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.Close01">
            <summary>设置 LogMergePolicy.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.FindMerges(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.FindMerges(SegmentInfos infos) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.FindMergesForOptimize(Lucene.Net.Index.SegmentInfos,System.Int32,Lucene.Net.Support.Set{Lucene.Net.Index.SegmentInfo})">
            <summary>设置 LogMergePolicy.FindMergesForOptimize(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.FindMergesForOptimizeSegmentInfosInt32SetOfSegmentInfo">
            <summary>设置 LogMergePolicy.FindMergesForOptimize(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.FindMergesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMerges(SegmentInfos infos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.FindMergesToExpungeDeletes(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.FindMergesToExpungeDeletesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetCalibrateSizeByDeletes">
            <summary>设置 LogMergePolicy.GetCalibrateSizeByDeletes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetCalibrateSizeByDeletes01">
            <summary>设置 LogMergePolicy.GetCalibrateSizeByDeletes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetMaxMergeDocs">
            <summary>设置 LogMergePolicy.GetMaxMergeDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetMaxMergeDocs01">
            <summary>设置 LogMergePolicy.GetMaxMergeDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetMergeFactor">
            <summary>设置 LogMergePolicy.GetMergeFactor() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetMergeFactor01">
            <summary>设置 LogMergePolicy.GetMergeFactor() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetMinMergeDocs">
            <summary>设置 LogDocMergePolicy.GetMinMergeDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetMinMergeDocs01">
            <summary>设置 LogDocMergePolicy.GetMinMergeDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetUseCompoundDocStore">
            <summary>设置 LogMergePolicy.GetUseCompoundDocStore() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetUseCompoundDocStore01">
            <summary>设置 LogMergePolicy.GetUseCompoundDocStore() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetUseCompoundFile">
            <summary>设置 LogMergePolicy.GetUseCompoundFile() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.GetUseCompoundFile01">
            <summary>设置 LogMergePolicy.GetUseCompoundFile() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.InitializeStub">
            <summary>初始化 type StubLogDocMergePolicy 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetCalibrateSizeByDeletes(System.Boolean)">
            <summary>设置 LogMergePolicy.SetCalibrateSizeByDeletes(Boolean calibrateSizeByDeletes) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetCalibrateSizeByDeletesBoolean">
            <summary>设置 LogMergePolicy.SetCalibrateSizeByDeletes(Boolean calibrateSizeByDeletes) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetMaxMergeDocs(System.Int32)">
            <summary>设置 LogMergePolicy.SetMaxMergeDocs(Int32 maxMergeDocs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetMaxMergeDocsInt32">
            <summary>设置 LogMergePolicy.SetMaxMergeDocs(Int32 maxMergeDocs) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetMergeFactor(System.Int32)">
            <summary>设置 LogMergePolicy.SetMergeFactor(Int32 mergeFactor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetMergeFactorInt32">
            <summary>设置 LogMergePolicy.SetMergeFactor(Int32 mergeFactor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetMinMergeDocs(System.Int32)">
            <summary>设置 LogDocMergePolicy.SetMinMergeDocs(Int32 minMergeDocs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetMinMergeDocsInt32">
            <summary>设置 LogDocMergePolicy.SetMinMergeDocs(Int32 minMergeDocs) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetUseCompoundDocStore(System.Boolean)">
            <summary>设置 LogMergePolicy.SetUseCompoundDocStore(Boolean useCompoundDocStore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetUseCompoundDocStoreBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundDocStore(Boolean useCompoundDocStore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetUseCompoundFile(System.Boolean)">
            <summary>设置 LogMergePolicy.SetUseCompoundFile(Boolean useCompoundFile) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SetUseCompoundFileBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundFile(Boolean useCompoundFile) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.Size(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogDocMergePolicy.Size(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SizeBytes(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.SizeBytes(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SizeBytesSegmentInfo">
            <summary>设置 LogMergePolicy.SizeBytes(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SizeDocs(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.SizeDocs(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SizeDocsSegmentInfo">
            <summary>设置 LogMergePolicy.SizeDocs(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.SizeSegmentInfo">
            <summary>设置 LogDocMergePolicy.Size(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.UseCompoundDocStore(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.UseCompoundDocStore(SegmentInfos infos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.UseCompoundDocStoreSegmentInfos">
            <summary>设置 LogMergePolicy.UseCompoundDocStore(SegmentInfos infos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.UseCompoundFile(Lucene.Net.Index.SegmentInfos,Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.UseCompoundFile(SegmentInfos infos, SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.UseCompoundFileSegmentInfosSegmentInfo">
            <summary>设置 LogMergePolicy.UseCompoundFile(SegmentInfos infos, SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.Verbose">
            <summary>设置 LogMergePolicy.Verbose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.Verbose01">
            <summary>设置 LogMergePolicy.Verbose() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogDocMergePolicy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubLogMergePolicy">
            <summary>Lucene.Net.Index.LogMergePolicy 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.#ctor(Lucene.Net.Index.IndexWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.Close">
            <summary>设置 LogMergePolicy.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.Close01">
            <summary>设置 LogMergePolicy.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.FindMerges(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.FindMerges(SegmentInfos infos) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.FindMergesForOptimize(Lucene.Net.Index.SegmentInfos,System.Int32,Lucene.Net.Support.Set{Lucene.Net.Index.SegmentInfo})">
            <summary>设置 LogMergePolicy.FindMergesForOptimize(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.FindMergesForOptimizeSegmentInfosInt32SetOfSegmentInfo">
            <summary>设置 LogMergePolicy.FindMergesForOptimize(SegmentInfos infos, Int32 maxNumSegments, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.FindMergesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMerges(SegmentInfos infos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.FindMergesToExpungeDeletes(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.FindMergesToExpungeDeletesSegmentInfos">
            <summary>设置 LogMergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetCalibrateSizeByDeletes">
            <summary>设置 LogMergePolicy.GetCalibrateSizeByDeletes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetCalibrateSizeByDeletes01">
            <summary>设置 LogMergePolicy.GetCalibrateSizeByDeletes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetMaxMergeDocs">
            <summary>设置 LogMergePolicy.GetMaxMergeDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetMaxMergeDocs01">
            <summary>设置 LogMergePolicy.GetMaxMergeDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetMergeFactor">
            <summary>设置 LogMergePolicy.GetMergeFactor() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetMergeFactor01">
            <summary>设置 LogMergePolicy.GetMergeFactor() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetUseCompoundDocStore">
            <summary>设置 LogMergePolicy.GetUseCompoundDocStore() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetUseCompoundDocStore01">
            <summary>设置 LogMergePolicy.GetUseCompoundDocStore() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetUseCompoundFile">
            <summary>设置 LogMergePolicy.GetUseCompoundFile() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.GetUseCompoundFile01">
            <summary>设置 LogMergePolicy.GetUseCompoundFile() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.InitializeStub">
            <summary>初始化 type StubLogMergePolicy 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetCalibrateSizeByDeletes(System.Boolean)">
            <summary>设置 LogMergePolicy.SetCalibrateSizeByDeletes(Boolean calibrateSizeByDeletes) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetCalibrateSizeByDeletesBoolean">
            <summary>设置 LogMergePolicy.SetCalibrateSizeByDeletes(Boolean calibrateSizeByDeletes) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetMaxMergeDocs(System.Int32)">
            <summary>设置 LogMergePolicy.SetMaxMergeDocs(Int32 maxMergeDocs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetMaxMergeDocsInt32">
            <summary>设置 LogMergePolicy.SetMaxMergeDocs(Int32 maxMergeDocs) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetMergeFactor(System.Int32)">
            <summary>设置 LogMergePolicy.SetMergeFactor(Int32 mergeFactor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetMergeFactorInt32">
            <summary>设置 LogMergePolicy.SetMergeFactor(Int32 mergeFactor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetUseCompoundDocStore(System.Boolean)">
            <summary>设置 LogMergePolicy.SetUseCompoundDocStore(Boolean useCompoundDocStore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetUseCompoundDocStoreBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundDocStore(Boolean useCompoundDocStore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetUseCompoundFile(System.Boolean)">
            <summary>设置 LogMergePolicy.SetUseCompoundFile(Boolean useCompoundFile) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.SetUseCompoundFileBoolean">
            <summary>设置 LogMergePolicy.SetUseCompoundFile(Boolean useCompoundFile) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.Size(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.Size(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.SizeBytes(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.SizeBytes(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.SizeBytesSegmentInfo">
            <summary>设置 LogMergePolicy.SizeBytes(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.SizeDocs(Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.SizeDocs(SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.SizeDocsSegmentInfo">
            <summary>设置 LogMergePolicy.SizeDocs(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.SizeSegmentInfo">
            <summary>设置 LogMergePolicy.Size(SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.UseCompoundDocStore(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 LogMergePolicy.UseCompoundDocStore(SegmentInfos infos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.UseCompoundDocStoreSegmentInfos">
            <summary>设置 LogMergePolicy.UseCompoundDocStore(SegmentInfos infos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.UseCompoundFile(Lucene.Net.Index.SegmentInfos,Lucene.Net.Index.SegmentInfo)">
            <summary>设置 LogMergePolicy.UseCompoundFile(SegmentInfos infos, SegmentInfo info) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.UseCompoundFileSegmentInfosSegmentInfo">
            <summary>设置 LogMergePolicy.UseCompoundFile(SegmentInfos infos, SegmentInfo info) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubLogMergePolicy.Verbose">
            <summary>设置 LogMergePolicy.Verbose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubLogMergePolicy.Verbose01">
            <summary>设置 LogMergePolicy.Verbose() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogMergePolicy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogMergePolicy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubLogMergePolicy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubMergePolicy">
            <summary>Lucene.Net.Index.MergePolicy 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergePolicy.#ctor(Lucene.Net.Index.IndexWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergePolicy.Close">
            <summary>设置 MergePolicy.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMergePolicy.Close01">
            <summary>设置 MergePolicy.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergePolicy.FindMerges(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 MergePolicy.FindMerges(SegmentInfos segmentInfos) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergePolicy.FindMergesForOptimize(Lucene.Net.Index.SegmentInfos,System.Int32,Lucene.Net.Support.Set{Lucene.Net.Index.SegmentInfo})">
            <summary>设置 MergePolicy.FindMergesForOptimize(SegmentInfos segmentInfos, Int32 maxSegmentCount, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMergePolicy.FindMergesForOptimizeSegmentInfosInt32SetOfSegmentInfo">
            <summary>设置 MergePolicy.FindMergesForOptimize(SegmentInfos segmentInfos, Int32 maxSegmentCount, Set`1&lt;SegmentInfo&gt; segmentsToOptimize) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMergePolicy.FindMergesSegmentInfos">
            <summary>设置 MergePolicy.FindMerges(SegmentInfos segmentInfos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergePolicy.FindMergesToExpungeDeletes(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 MergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMergePolicy.FindMergesToExpungeDeletesSegmentInfos">
            <summary>设置 MergePolicy.FindMergesToExpungeDeletes(SegmentInfos segmentInfos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergePolicy.InitializeStub">
            <summary>初始化 type StubMergePolicy 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergePolicy.UseCompoundDocStore(Lucene.Net.Index.SegmentInfos)">
            <summary>设置 MergePolicy.UseCompoundDocStore(SegmentInfos segments) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMergePolicy.UseCompoundDocStoreSegmentInfos">
            <summary>设置 MergePolicy.UseCompoundDocStore(SegmentInfos segments) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergePolicy.UseCompoundFile(Lucene.Net.Index.SegmentInfos,Lucene.Net.Index.SegmentInfo)">
            <summary>设置 MergePolicy.UseCompoundFile(SegmentInfos segments, SegmentInfo newSegment) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMergePolicy.UseCompoundFileSegmentInfosSegmentInfo">
            <summary>设置 MergePolicy.UseCompoundFile(SegmentInfos segments, SegmentInfo newSegment) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMergePolicy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMergePolicy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMergePolicy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubMergeScheduler">
            <summary>Lucene.Net.Index.MergeScheduler 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergeScheduler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergeScheduler.Close">
            <summary>设置 MergeScheduler.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMergeScheduler.Close01">
            <summary>设置 MergeScheduler.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergeScheduler.InitializeStub">
            <summary>初始化 type StubMergeScheduler 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMergeScheduler.Merge(Lucene.Net.Index.IndexWriter)">
            <summary>设置 MergeScheduler.Merge(IndexWriter writer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMergeScheduler.MergeIndexWriter">
            <summary>设置 MergeScheduler.Merge(IndexWriter writer) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMergeScheduler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMergeScheduler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMergeScheduler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubMultiReader">
            <summary>Lucene.Net.Index.MultiReader 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.#ctor(Lucene.Net.Index.IndexReader[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.#ctor(Lucene.Net.Index.IndexReader[],System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.AcquireWriteLock">
            <summary>设置 IndexReader.AcquireWriteLock() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.AcquireWriteLock01">
            <summary>设置 IndexReader.AcquireWriteLock() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Clone(System.Boolean)">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Clone">
            <summary>设置 MultiReader.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.Clone01">
            <summary>设置 MultiReader.Clone() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.CloneBoolean">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DecRef">
            <summary>设置 IndexReader.DecRef() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DecRef01">
            <summary>设置 IndexReader.DecRef() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DeleteDocument(System.Int32)">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DeleteDocumentInt32">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DeleteDocuments(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DeleteDocumentsTerm">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Directory">
            <summary>设置 IndexReader.Directory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.Directory01">
            <summary>设置 IndexReader.Directory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DoClose">
            <summary>设置 MultiReader.DoClose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DoClose01">
            <summary>设置 MultiReader.DoClose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DoCommit">
            <summary>设置 MultiReader.DoCommit() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DoCommit(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>设置 MultiReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DoCommit01">
            <summary>设置 MultiReader.DoCommit() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DoCommitIDictionaryOfStringString">
            <summary>设置 MultiReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DoDelete(System.Int32)">
            <summary>设置 MultiReader.DoDelete(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DoDeleteInt32">
            <summary>设置 MultiReader.DoDelete(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DoReopen(System.Boolean)">
            <summary>设置 MultiReader.DoReopen(Boolean doClone) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DoReopenBoolean">
            <summary>设置 MultiReader.DoReopen(Boolean doClone) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DoSetNorm(System.Int32,System.String,System.Byte)">
            <summary>设置 MultiReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DoSetNormInt32StringByte">
            <summary>设置 MultiReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DoUndeleteAll">
            <summary>设置 MultiReader.DoUndeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DoUndeleteAll01">
            <summary>设置 MultiReader.DoUndeleteAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 MultiReader.DocFreq(Term t) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DocFreqTerm">
            <summary>设置 MultiReader.DocFreq(Term t) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Document(System.Int32)">
            <summary>设置 IndexReader.Document(Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Document(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 MultiReader.Document(Int32 n, FieldSelector fieldSelector) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DocumentInt32">
            <summary>设置 IndexReader.Document(Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.DocumentInt32FieldSelector">
            <summary>设置 MultiReader.Document(Int32 n, FieldSelector fieldSelector) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetDeletesCacheKey">
            <summary>设置 IndexReader.GetDeletesCacheKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetDeletesCacheKey01">
            <summary>设置 IndexReader.GetDeletesCacheKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetDisableFakeNorms">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetDisableFakeNorms01">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetFieldCacheKey">
            <summary>设置 IndexReader.GetFieldCacheKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetFieldCacheKey01">
            <summary>设置 IndexReader.GetFieldCacheKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetFieldNames(Lucene.Net.Index.IndexReader.FieldOption)">
            <summary>设置 MultiReader.GetFieldNames(FieldOption fieldNames) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 MultiReader.GetFieldNames(FieldOption fieldNames) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetIndexCommit">
            <summary>设置 IndexReader.GetIndexCommit() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetIndexCommit01">
            <summary>设置 IndexReader.GetIndexCommit() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetRefCount">
            <summary>设置 IndexReader.GetRefCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetRefCount01">
            <summary>设置 IndexReader.GetRefCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetSequentialSubReaders">
            <summary>设置 MultiReader.GetSequentialSubReaders() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetSequentialSubReaders01">
            <summary>设置 MultiReader.GetSequentialSubReaders() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetTermFreqVector(System.Int32,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetTermFreqVector(System.Int32,System.String,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetTermFreqVector(System.Int32,System.String)">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 n, String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetTermFreqVectorInt32String">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 n, String field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 MultiReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetTermFreqVectors(System.Int32)">
            <summary>设置 MultiReader.GetTermFreqVectors(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetTermFreqVectorsInt32">
            <summary>设置 MultiReader.GetTermFreqVectors(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetTermInfosIndexDivisor">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetTermInfosIndexDivisor01">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetUniqueTermCount">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetUniqueTermCount01">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.GetVersion">
            <summary>设置 MultiReader.GetVersion() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.GetVersion01">
            <summary>设置 MultiReader.GetVersion() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.HasDeletions">
            <summary>设置 MultiReader.HasDeletions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.HasDeletions01">
            <summary>设置 MultiReader.HasDeletions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.HasNorms(System.String)">
            <summary>设置 MultiReader.HasNorms(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.HasNormsString">
            <summary>设置 MultiReader.HasNorms(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.IncRef">
            <summary>设置 IndexReader.IncRef() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.IncRef01">
            <summary>设置 IndexReader.IncRef() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.InitializeStub">
            <summary>初始化 type StubMultiReader 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.IsCurrent">
            <summary>设置 MultiReader.IsCurrent() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.IsCurrent01">
            <summary>设置 MultiReader.IsCurrent() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.IsDeleted(System.Int32)">
            <summary>设置 MultiReader.IsDeleted(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.IsDeletedInt32">
            <summary>设置 MultiReader.IsDeleted(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.IsOptimized">
            <summary>设置 MultiReader.IsOptimized() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.IsOptimized01">
            <summary>设置 MultiReader.IsOptimized() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.MaxDoc">
            <summary>设置 MultiReader.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.MaxDoc01">
            <summary>设置 MultiReader.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Norms(System.String,System.Byte[],System.Int32)">
            <summary>设置 MultiReader.Norms(String field, Byte[] result, Int32 offset) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Norms(System.String)">
            <summary>设置 MultiReader.Norms(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.NormsString">
            <summary>设置 MultiReader.Norms(String field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.NormsStringByteArrayInt32">
            <summary>设置 MultiReader.Norms(String field, Byte[] result, Int32 offset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.NumDeletedDocs">
            <summary>设置 IndexReader.NumDeletedDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.NumDeletedDocs01">
            <summary>设置 IndexReader.NumDeletedDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.NumDocs">
            <summary>设置 MultiReader.NumDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.NumDocs01">
            <summary>设置 MultiReader.NumDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Reopen">
            <summary>设置 MultiReader.Reopen() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Reopen(Lucene.Net.Index.IndexCommit)">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Reopen(System.Boolean)">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.Reopen01">
            <summary>设置 MultiReader.Reopen() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.ReopenBoolean">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.ReopenIndexCommit">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.SetDisableFakeNorms(System.Boolean)">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.SetDisableFakeNormsBoolean">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.SetNorm(System.Int32,System.String,System.Byte)">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.SetNorm(System.Int32,System.String,System.Single)">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.SetNormInt32StringByte">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.SetNormInt32StringSingle">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.SetTermInfosIndexDivisor(System.Int32)">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.SetTermInfosIndexDivisorInt32">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.TermDocs">
            <summary>设置 MultiReader.TermDocs() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.TermDocs(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.TermDocs(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.TermDocs01">
            <summary>设置 MultiReader.TermDocs() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.TermDocsTerm">
            <summary>设置 IndexReader.TermDocs(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.TermPositions">
            <summary>设置 MultiReader.TermPositions() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.TermPositions(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.TermPositions(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.TermPositions01">
            <summary>设置 MultiReader.TermPositions() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.TermPositionsTerm">
            <summary>设置 IndexReader.TermPositions(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Terms">
            <summary>设置 MultiReader.Terms() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.Terms(Lucene.Net.Index.Term)">
            <summary>设置 MultiReader.Terms(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.Terms01">
            <summary>设置 MultiReader.Terms() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.TermsTerm">
            <summary>设置 MultiReader.Terms(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultiReader.UndeleteAll">
            <summary>设置 IndexReader.UndeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultiReader.UndeleteAll01">
            <summary>设置 IndexReader.UndeleteAll() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMultiReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMultiReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMultiReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubMultipleTermPositions">
            <summary>Lucene.Net.Index.MultipleTermPositions 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultipleTermPositions.#ctor(Lucene.Net.Index.IndexReader,Lucene.Net.Index.Term[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultipleTermPositions.GetPayload(System.Byte[],System.Int32)">
            <summary>设置 MultipleTermPositions.GetPayload(Byte[] data, Int32 offset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultipleTermPositions.GetPayloadByteArrayInt32">
            <summary>设置 MultipleTermPositions.GetPayload(Byte[] data, Int32 offset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultipleTermPositions.GetPayloadLength">
            <summary>设置 MultipleTermPositions.GetPayloadLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultipleTermPositions.GetPayloadLength01">
            <summary>设置 MultipleTermPositions.GetPayloadLength() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultipleTermPositions.InitializeStub">
            <summary>初始化 type StubMultipleTermPositions 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultipleTermPositions.IsPayloadAvailable">
            <summary>设置 MultipleTermPositions.IsPayloadAvailable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultipleTermPositions.IsPayloadAvailable01">
            <summary>设置 MultipleTermPositions.IsPayloadAvailable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultipleTermPositions.Read(System.Int32[],System.Int32[])">
            <summary>设置 MultipleTermPositions.Read(Int32[] arg0, Int32[] arg1) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultipleTermPositions.ReadInt32ArrayInt32Array">
            <summary>设置 MultipleTermPositions.Read(Int32[] arg0, Int32[] arg1) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultipleTermPositions.Seek(Lucene.Net.Index.Term)">
            <summary>设置 MultipleTermPositions.Seek(Term arg0) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubMultipleTermPositions.Seek(Lucene.Net.Index.TermEnum)">
            <summary>设置 MultipleTermPositions.Seek(TermEnum termEnum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultipleTermPositions.SeekTerm">
            <summary>设置 MultipleTermPositions.Seek(Term arg0) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubMultipleTermPositions.SeekTermEnum">
            <summary>设置 MultipleTermPositions.Seek(TermEnum termEnum) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMultipleTermPositions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMultipleTermPositions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubMultipleTermPositions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubParallelReader">
            <summary>Lucene.Net.Index.ParallelReader 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.AcquireWriteLock">
            <summary>设置 IndexReader.AcquireWriteLock() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.AcquireWriteLock01">
            <summary>设置 IndexReader.AcquireWriteLock() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Add(Lucene.Net.Index.IndexReader)">
            <summary>设置 ParallelReader.Add(IndexReader reader) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Add(Lucene.Net.Index.IndexReader,System.Boolean)">
            <summary>设置 ParallelReader.Add(IndexReader reader, Boolean ignoreStoredFields) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.AddIndexReader">
            <summary>设置 ParallelReader.Add(IndexReader reader) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.AddIndexReaderBoolean">
            <summary>设置 ParallelReader.Add(IndexReader reader, Boolean ignoreStoredFields) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Clone(System.Boolean)">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Clone">
            <summary>设置 ParallelReader.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.Clone01">
            <summary>设置 ParallelReader.Clone() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.CloneBoolean">
            <summary>设置 IndexReader.Clone(Boolean openReadOnly) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DecRef">
            <summary>设置 IndexReader.DecRef() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DecRef01">
            <summary>设置 IndexReader.DecRef() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DeleteDocument(System.Int32)">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DeleteDocumentInt32">
            <summary>设置 IndexReader.DeleteDocument(Int32 docNum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DeleteDocuments(Lucene.Net.Index.Term)">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DeleteDocumentsTerm">
            <summary>设置 IndexReader.DeleteDocuments(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Directory">
            <summary>设置 IndexReader.Directory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.Directory01">
            <summary>设置 IndexReader.Directory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DoClose">
            <summary>设置 ParallelReader.DoClose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DoClose01">
            <summary>设置 ParallelReader.DoClose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DoCommit">
            <summary>设置 ParallelReader.DoCommit() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DoCommit(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>设置 ParallelReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DoCommit01">
            <summary>设置 ParallelReader.DoCommit() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DoCommitIDictionaryOfStringString">
            <summary>设置 ParallelReader.DoCommit(IDictionary`2&lt;String,String&gt; commitUserData) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DoDelete(System.Int32)">
            <summary>设置 ParallelReader.DoDelete(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DoDeleteInt32">
            <summary>设置 ParallelReader.DoDelete(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DoReopen(System.Boolean)">
            <summary>设置 ParallelReader.DoReopen(Boolean doClone) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DoReopenBoolean">
            <summary>设置 ParallelReader.DoReopen(Boolean doClone) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DoSetNorm(System.Int32,System.String,System.Byte)">
            <summary>设置 ParallelReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DoSetNormInt32StringByte">
            <summary>设置 ParallelReader.DoSetNorm(Int32 n, String field, Byte value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DoUndeleteAll">
            <summary>设置 ParallelReader.DoUndeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DoUndeleteAll01">
            <summary>设置 ParallelReader.DoUndeleteAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 ParallelReader.DocFreq(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DocFreqTerm">
            <summary>设置 ParallelReader.DocFreq(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Document(System.Int32)">
            <summary>设置 IndexReader.Document(Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Document(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 ParallelReader.Document(Int32 n, FieldSelector fieldSelector) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DocumentInt32">
            <summary>设置 IndexReader.Document(Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.DocumentInt32FieldSelector">
            <summary>设置 ParallelReader.Document(Int32 n, FieldSelector fieldSelector) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetDeletesCacheKey">
            <summary>设置 IndexReader.GetDeletesCacheKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetDeletesCacheKey01">
            <summary>设置 IndexReader.GetDeletesCacheKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetDisableFakeNorms">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetDisableFakeNorms01">
            <summary>设置 IndexReader.GetDisableFakeNorms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetFieldCacheKey">
            <summary>设置 IndexReader.GetFieldCacheKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetFieldCacheKey01">
            <summary>设置 IndexReader.GetFieldCacheKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetFieldNames(Lucene.Net.Index.IndexReader.FieldOption)">
            <summary>设置 ParallelReader.GetFieldNames(FieldOption fieldNames) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetFieldNamesIndexReaderFieldOption">
            <summary>设置 ParallelReader.GetFieldNames(FieldOption fieldNames) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetIndexCommit">
            <summary>设置 IndexReader.GetIndexCommit() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetIndexCommit01">
            <summary>设置 IndexReader.GetIndexCommit() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetRefCount">
            <summary>设置 IndexReader.GetRefCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetRefCount01">
            <summary>设置 IndexReader.GetRefCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetSequentialSubReaders">
            <summary>设置 IndexReader.GetSequentialSubReaders() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetSequentialSubReaders01">
            <summary>设置 IndexReader.GetSequentialSubReaders() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetSubReaders">
            <summary>设置 ParallelReader.GetSubReaders() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetSubReaders01">
            <summary>设置 ParallelReader.GetSubReaders() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetTermFreqVector(System.Int32,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetTermFreqVector(System.Int32,System.String)">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 n, String field) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetTermFreqVector(System.Int32,System.String,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetTermFreqVectorInt32String">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 n, String field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetTermFreqVectorInt32StringTermVectorMapper">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 docNumber, String field, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetTermFreqVectorInt32TermVectorMapper">
            <summary>设置 ParallelReader.GetTermFreqVector(Int32 docNumber, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetTermFreqVectors(System.Int32)">
            <summary>设置 ParallelReader.GetTermFreqVectors(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetTermFreqVectorsInt32">
            <summary>设置 ParallelReader.GetTermFreqVectors(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetTermInfosIndexDivisor">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetTermInfosIndexDivisor01">
            <summary>设置 IndexReader.GetTermInfosIndexDivisor() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetUniqueTermCount">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetUniqueTermCount01">
            <summary>设置 IndexReader.GetUniqueTermCount() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.GetVersion">
            <summary>设置 ParallelReader.GetVersion() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.GetVersion01">
            <summary>设置 ParallelReader.GetVersion() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.HasDeletions">
            <summary>设置 ParallelReader.HasDeletions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.HasDeletions01">
            <summary>设置 ParallelReader.HasDeletions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.HasNorms(System.String)">
            <summary>设置 ParallelReader.HasNorms(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.HasNormsString">
            <summary>设置 ParallelReader.HasNorms(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.IncRef">
            <summary>设置 IndexReader.IncRef() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.IncRef01">
            <summary>设置 IndexReader.IncRef() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.InitializeStub">
            <summary>初始化 type StubParallelReader 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.IsCurrent">
            <summary>设置 ParallelReader.IsCurrent() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.IsCurrent01">
            <summary>设置 ParallelReader.IsCurrent() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.IsDeleted(System.Int32)">
            <summary>设置 ParallelReader.IsDeleted(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.IsDeletedInt32">
            <summary>设置 ParallelReader.IsDeleted(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.IsOptimized">
            <summary>设置 ParallelReader.IsOptimized() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.IsOptimized01">
            <summary>设置 ParallelReader.IsOptimized() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.MaxDoc">
            <summary>设置 ParallelReader.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.MaxDoc01">
            <summary>设置 ParallelReader.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Norms(System.String)">
            <summary>设置 ParallelReader.Norms(String field) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Norms(System.String,System.Byte[],System.Int32)">
            <summary>设置 ParallelReader.Norms(String field, Byte[] result, Int32 offset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.NormsString">
            <summary>设置 ParallelReader.Norms(String field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.NormsStringByteArrayInt32">
            <summary>设置 ParallelReader.Norms(String field, Byte[] result, Int32 offset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.NumDeletedDocs">
            <summary>设置 IndexReader.NumDeletedDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.NumDeletedDocs01">
            <summary>设置 IndexReader.NumDeletedDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.NumDocs">
            <summary>设置 ParallelReader.NumDocs() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.NumDocs01">
            <summary>设置 ParallelReader.NumDocs() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Reopen">
            <summary>设置 ParallelReader.Reopen() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Reopen(Lucene.Net.Index.IndexCommit)">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Reopen(System.Boolean)">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.Reopen01">
            <summary>设置 ParallelReader.Reopen() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.ReopenBoolean">
            <summary>设置 IndexReader.Reopen(Boolean openReadOnly) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.ReopenIndexCommit">
            <summary>设置 IndexReader.Reopen(IndexCommit commit) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.SetDisableFakeNorms(System.Boolean)">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.SetDisableFakeNormsBoolean">
            <summary>设置 IndexReader.SetDisableFakeNorms(Boolean disableFakeNorms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.SetNorm(System.Int32,System.String,System.Byte)">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.SetNorm(System.Int32,System.String,System.Single)">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.SetNormInt32StringByte">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Byte value_Renamed) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.SetNormInt32StringSingle">
            <summary>设置 IndexReader.SetNorm(Int32 doc, String field, Single value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.SetTermInfosIndexDivisor(System.Int32)">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.SetTermInfosIndexDivisorInt32">
            <summary>设置 IndexReader.SetTermInfosIndexDivisor(Int32 indexDivisor) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.TermDocs">
            <summary>设置 ParallelReader.TermDocs() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.TermDocs(Lucene.Net.Index.Term)">
            <summary>设置 ParallelReader.TermDocs(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.TermDocs01">
            <summary>设置 ParallelReader.TermDocs() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.TermDocsTerm">
            <summary>设置 ParallelReader.TermDocs(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.TermPositions">
            <summary>设置 ParallelReader.TermPositions() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.TermPositions(Lucene.Net.Index.Term)">
            <summary>设置 ParallelReader.TermPositions(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.TermPositions01">
            <summary>设置 ParallelReader.TermPositions() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.TermPositionsTerm">
            <summary>设置 ParallelReader.TermPositions(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Terms">
            <summary>设置 ParallelReader.Terms() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.Terms(Lucene.Net.Index.Term)">
            <summary>设置 ParallelReader.Terms(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.Terms01">
            <summary>设置 ParallelReader.Terms() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.TermsTerm">
            <summary>设置 ParallelReader.Terms(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubParallelReader.UndeleteAll">
            <summary>设置 IndexReader.UndeleteAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubParallelReader.UndeleteAll01">
            <summary>设置 IndexReader.UndeleteAll() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubParallelReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubParallelReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubParallelReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubPayload">
            <summary>Lucene.Net.Index.Payload 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.#ctor(System.Byte[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.ByteAt(System.Int32)">
            <summary>设置 Payload.ByteAt(Int32 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.ByteAtInt32">
            <summary>设置 Payload.ByteAt(Int32 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.Clone">
            <summary>设置 Payload.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.Clone01">
            <summary>设置 Payload.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.CopyTo(System.Byte[],System.Int32)">
            <summary>设置 Payload.CopyTo(Byte[] target, Int32 targetOffset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.CopyToByteArrayInt32">
            <summary>设置 Payload.CopyTo(Byte[] target, Int32 targetOffset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.Equals(System.Object)">
            <summary>设置 Payload.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.EqualsObject">
            <summary>设置 Payload.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.GetData">
            <summary>设置 Payload.GetData() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.GetData01">
            <summary>设置 Payload.GetData() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.GetHashCode">
            <summary>设置 Payload.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.GetHashCode01">
            <summary>设置 Payload.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.GetOffset">
            <summary>设置 Payload.GetOffset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.GetOffset01">
            <summary>设置 Payload.GetOffset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.InitializeStub">
            <summary>初始化 type StubPayload 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.Length">
            <summary>设置 Payload.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.Length01">
            <summary>设置 Payload.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.SetData(System.Byte[])">
            <summary>设置 Payload.SetData(Byte[] data) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 Payload.SetData(Byte[] data, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.SetDataByteArray">
            <summary>设置 Payload.SetData(Byte[] data) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.SetDataByteArrayInt32Int32">
            <summary>设置 Payload.SetData(Byte[] data, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPayload.ToByteArray">
            <summary>设置 Payload.ToByteArray() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPayload.ToByteArray01">
            <summary>设置 Payload.ToByteArray() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubPayload.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubPayload.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubPayload.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper">
            <summary>Lucene.Net.Index.PositionBasedTermVectorMapper 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.GetFieldToTerms">
            <summary>设置 PositionBasedTermVectorMapper.GetFieldToTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.GetFieldToTerms01">
            <summary>设置 PositionBasedTermVectorMapper.GetFieldToTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.InitializeStub">
            <summary>初始化 type StubPositionBasedTermVectorMapper 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.IsIgnoringOffsets">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.IsIgnoringOffsets01">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.IsIgnoringPositions">
            <summary>设置 PositionBasedTermVectorMapper.IsIgnoringPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.IsIgnoringPositions01">
            <summary>设置 PositionBasedTermVectorMapper.IsIgnoringPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.Map(System.String,System.Int32,Lucene.Net.Index.TermVectorOffsetInfo[],System.Int32[])">
            <summary>设置 PositionBasedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 PositionBasedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.SetDocumentNumber(System.Int32)">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.SetDocumentNumberInt32">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.SetExpectations(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>设置 PositionBasedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 PositionBasedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubPositionBasedTermVectorMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubSegmentTermDocs">
            <summary>Lucene.Net.Index.SegmentTermDocs 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.#ctor(Lucene.Net.Index.SegmentReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.Close">
            <summary>设置 SegmentTermDocs.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSegmentTermDocs.Close01">
            <summary>设置 SegmentTermDocs.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.InitializeStub">
            <summary>初始化 type StubSegmentTermDocs 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.Next">
            <summary>设置 SegmentTermDocs.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSegmentTermDocs.Next01">
            <summary>设置 SegmentTermDocs.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.Read(System.Int32[],System.Int32[])">
            <summary>设置 SegmentTermDocs.Read(Int32[] docs, Int32[] freqs) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSegmentTermDocs.ReadInt32ArrayInt32Array">
            <summary>设置 SegmentTermDocs.Read(Int32[] docs, Int32[] freqs) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.Seek(Lucene.Net.Index.Term)">
            <summary>设置 SegmentTermDocs.Seek(Term term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.Seek(Lucene.Net.Index.TermEnum)">
            <summary>设置 SegmentTermDocs.Seek(TermEnum termEnum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSegmentTermDocs.SeekTerm">
            <summary>设置 SegmentTermDocs.Seek(Term term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSegmentTermDocs.SeekTermEnum">
            <summary>设置 SegmentTermDocs.Seek(TermEnum termEnum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.SkipProx(System.Int64,System.Int32)">
            <summary>设置 SegmentTermDocs.SkipProx(Int64 proxPointer, Int32 payloadLength) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSegmentTermDocs.SkipProxInt64Int32">
            <summary>设置 SegmentTermDocs.SkipProx(Int64 proxPointer, Int32 payloadLength) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.SkipTo(System.Int32)">
            <summary>设置 SegmentTermDocs.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSegmentTermDocs.SkipToInt32">
            <summary>设置 SegmentTermDocs.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSegmentTermDocs.SkippingDoc">
            <summary>设置 SegmentTermDocs.SkippingDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSegmentTermDocs.SkippingDoc01">
            <summary>设置 SegmentTermDocs.SkippingDoc() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSegmentTermDocs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSegmentTermDocs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSegmentTermDocs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubSerialMergeScheduler">
            <summary>Lucene.Net.Index.SerialMergeScheduler 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.Close">
            <summary>设置 SerialMergeScheduler.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.Close01">
            <summary>设置 SerialMergeScheduler.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.InitializeStub">
            <summary>初始化 type StubSerialMergeScheduler 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.Merge(Lucene.Net.Index.IndexWriter)">
            <summary>设置 SerialMergeScheduler.Merge(IndexWriter writer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.MergeIndexWriter">
            <summary>设置 SerialMergeScheduler.Merge(IndexWriter writer) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSerialMergeScheduler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy">
            <summary>Lucene.Net.Index.SnapshotDeletionPolicy 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.#ctor(Lucene.Net.Index.IndexDeletionPolicy)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.InitializeStub">
            <summary>初始化 type StubSnapshotDeletionPolicy 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.OnCommit(System.Collections.Generic.IList{Lucene.Net.Index.IndexCommit})">
            <summary>设置 SnapshotDeletionPolicy.OnCommit(IList`1&lt;IndexCommit&gt; commits) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.OnCommitIListOfIndexCommit">
            <summary>设置 SnapshotDeletionPolicy.OnCommit(IList`1&lt;IndexCommit&gt; commits) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.OnInit(System.Collections.Generic.IList{Lucene.Net.Index.IndexCommit})">
            <summary>设置 SnapshotDeletionPolicy.OnInit(IList`1&lt;IndexCommit&gt; commits) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.OnInitIListOfIndexCommit">
            <summary>设置 SnapshotDeletionPolicy.OnInit(IList`1&lt;IndexCommit&gt; commits) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.Release">
            <summary>设置 SnapshotDeletionPolicy.Release() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.Release01">
            <summary>设置 SnapshotDeletionPolicy.Release() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.Snapshot">
            <summary>设置 SnapshotDeletionPolicy.Snapshot() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.Snapshot01">
            <summary>设置 SnapshotDeletionPolicy.Snapshot() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSnapshotDeletionPolicy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper">
            <summary>Lucene.Net.Index.SortedTermVectorMapper 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.#ctor(System.Collections.Generic.IComparer{Lucene.Net.Index.TermVectorEntry})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.#ctor(System.Boolean,System.Boolean,System.Collections.Generic.IComparer{Lucene.Net.Index.TermVectorEntry})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.GetTermVectorEntrySet">
            <summary>设置 SortedTermVectorMapper.GetTermVectorEntrySet() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.GetTermVectorEntrySet01">
            <summary>设置 SortedTermVectorMapper.GetTermVectorEntrySet() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.InitializeStub">
            <summary>初始化 type StubSortedTermVectorMapper 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.IsIgnoringOffsets">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.IsIgnoringOffsets01">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.IsIgnoringPositions">
            <summary>设置 TermVectorMapper.IsIgnoringPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.IsIgnoringPositions01">
            <summary>设置 TermVectorMapper.IsIgnoringPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.Map(System.String,System.Int32,Lucene.Net.Index.TermVectorOffsetInfo[],System.Int32[])">
            <summary>设置 SortedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 SortedTermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.SetDocumentNumber(System.Int32)">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.SetDocumentNumberInt32">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.SetExpectations(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>设置 SortedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 SortedTermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubSortedTermVectorMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermDocs">
            <summary>Lucene.Net.Index.TermDocs 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.#ctor">
            <summary>初始化 type StubTermDocs 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermDocs.Close">
            <summary>设置 TermDocs.Close() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermDocs.Doc">
            <summary>设置 TermDocs.Doc() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermDocs.Freq">
            <summary>设置 TermDocs.Freq() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.ln::Lucene#Net#Index#TermDocs#Close">
            <summary>设置 TermDocs.Close() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.ln::Lucene#Net#Index#TermDocs#Doc">
            <summary>设置 TermDocs.Doc() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.ln::Lucene#Net#Index#TermDocs#Freq">
            <summary>设置 TermDocs.Freq() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.ln::Lucene#Net#Index#TermDocs#Next">
            <summary>设置 TermDocs.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.ln::Lucene#Net#Index#TermDocs#Read(System.Int32[],System.Int32[])">
            <summary>设置 TermDocs.Read(Int32[] docs, Int32[] freqs) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.ln::Lucene#Net#Index#TermDocs#Seek(Lucene.Net.Index.Term)">
            <summary>设置 TermDocs.Seek(Term term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.ln::Lucene#Net#Index#TermDocs#Seek(Lucene.Net.Index.TermEnum)">
            <summary>设置 TermDocs.Seek(TermEnum termEnum) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermDocs.ln::Lucene#Net#Index#TermDocs#SkipTo(System.Int32)">
            <summary>设置 TermDocs.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermDocs.Next">
            <summary>设置 TermDocs.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermDocs.ReadInt32ArrayInt32Array">
            <summary>设置 TermDocs.Read(Int32[] docs, Int32[] freqs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermDocs.SeekTerm">
            <summary>设置 TermDocs.Seek(Term term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermDocs.SeekTermEnum">
            <summary>设置 TermDocs.Seek(TermEnum termEnum) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermDocs.SkipToInt32">
            <summary>设置 TermDocs.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermEnum">
            <summary>Lucene.Net.Index.TermEnum 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermEnum.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermEnum.Close">
            <summary>设置 TermEnum.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermEnum.Close01">
            <summary>设置 TermEnum.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermEnum.DocFreq">
            <summary>设置 TermEnum.DocFreq() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermEnum.DocFreq01">
            <summary>设置 TermEnum.DocFreq() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermEnum.InitializeStub">
            <summary>初始化 type StubTermEnum 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermEnum.Next">
            <summary>设置 TermEnum.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermEnum.Next01">
            <summary>设置 TermEnum.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermEnum.SkipTo(Lucene.Net.Index.Term)">
            <summary>设置 TermEnum.SkipTo(Term target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermEnum.SkipToTerm">
            <summary>设置 TermEnum.SkipTo(Term target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermEnum.Term">
            <summary>设置 TermEnum.Term() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermEnum.Term01">
            <summary>设置 TermEnum.Term() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermEnum.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermEnum.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermEnum.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermFreqVector">
            <summary>Lucene.Net.Index.TermFreqVector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermFreqVector.#ctor">
            <summary>初始化 type StubTermFreqVector 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermFreqVector.GetField">
            <summary>设置 TermFreqVector.GetField() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermFreqVector.GetTermFrequencies">
            <summary>设置 TermFreqVector.GetTermFrequencies() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermFreqVector.GetTerms">
            <summary>设置 TermFreqVector.GetTerms() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermFreqVector.IndexOfString">
            <summary>设置 TermFreqVector.IndexOf(String term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermFreqVector.IndexesOfStringArrayInt32Int32">
            <summary>设置 TermFreqVector.IndexesOf(String[] terms, Int32 start, Int32 len) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermFreqVector.ln::Lucene#Net#Index#TermFreqVector#GetField">
            <summary>设置 TermFreqVector.GetField() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermFreqVector.ln::Lucene#Net#Index#TermFreqVector#GetTermFrequencies">
            <summary>设置 TermFreqVector.GetTermFrequencies() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermFreqVector.ln::Lucene#Net#Index#TermFreqVector#GetTerms">
            <summary>设置 TermFreqVector.GetTerms() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermFreqVector.ln::Lucene#Net#Index#TermFreqVector#IndexOf(System.String)">
            <summary>设置 TermFreqVector.IndexOf(String term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermFreqVector.ln::Lucene#Net#Index#TermFreqVector#IndexesOf(System.String[],System.Int32,System.Int32)">
            <summary>设置 TermFreqVector.IndexesOf(String[] terms, Int32 start, Int32 len) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermFreqVector.ln::Lucene#Net#Index#TermFreqVector#Size">
            <summary>设置 TermFreqVector.Size() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermFreqVector.Size">
            <summary>设置 TermFreqVector.Size() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermPositionVector">
            <summary>Lucene.Net.Index.TermPositionVector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.#ctor">
            <summary>初始化 type StubTermPositionVector 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositionVector.GetField">
            <summary>设置 TermFreqVector.GetField() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositionVector.GetOffsetsInt32">
            <summary>设置 TermPositionVector.GetOffsets(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositionVector.GetTermFrequencies">
            <summary>设置 TermFreqVector.GetTermFrequencies() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositionVector.GetTermPositionsInt32">
            <summary>设置 TermPositionVector.GetTermPositions(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositionVector.GetTerms">
            <summary>设置 TermFreqVector.GetTerms() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositionVector.IndexOfString">
            <summary>设置 TermFreqVector.IndexOf(String term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositionVector.IndexesOfStringArrayInt32Int32">
            <summary>设置 TermFreqVector.IndexesOf(String[] terms, Int32 start, Int32 len) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.ln::Lucene#Net#Index#TermFreqVector#GetField">
            <summary>设置 TermFreqVector.GetField() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.ln::Lucene#Net#Index#TermFreqVector#GetTermFrequencies">
            <summary>设置 TermFreqVector.GetTermFrequencies() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.ln::Lucene#Net#Index#TermFreqVector#GetTerms">
            <summary>设置 TermFreqVector.GetTerms() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.ln::Lucene#Net#Index#TermFreqVector#IndexOf(System.String)">
            <summary>设置 TermFreqVector.IndexOf(String term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.ln::Lucene#Net#Index#TermFreqVector#IndexesOf(System.String[],System.Int32,System.Int32)">
            <summary>设置 TermFreqVector.IndexesOf(String[] terms, Int32 start, Int32 len) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.ln::Lucene#Net#Index#TermFreqVector#Size">
            <summary>设置 TermFreqVector.Size() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.ln::Lucene#Net#Index#TermPositionVector#GetOffsets(System.Int32)">
            <summary>设置 TermPositionVector.GetOffsets(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositionVector.ln::Lucene#Net#Index#TermPositionVector#GetTermPositions(System.Int32)">
            <summary>设置 TermPositionVector.GetTermPositions(Int32 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositionVector.Size">
            <summary>设置 TermFreqVector.Size() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermPositions">
            <summary>Lucene.Net.Index.TermPositions 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.#ctor">
            <summary>初始化 type StubTermPositions 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.Close">
            <summary>设置 TermDocs.Close() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.Doc">
            <summary>设置 TermDocs.Doc() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.Freq">
            <summary>设置 TermDocs.Freq() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.GetPayloadByteArrayInt32">
            <summary>设置 TermPositions.GetPayload(Byte[] data, Int32 offset) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.GetPayloadLength">
            <summary>设置 TermPositions.GetPayloadLength() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.IsPayloadAvailable">
            <summary>设置 TermPositions.IsPayloadAvailable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermDocs#Close">
            <summary>设置 TermDocs.Close() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermDocs#Doc">
            <summary>设置 TermDocs.Doc() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermDocs#Freq">
            <summary>设置 TermDocs.Freq() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermDocs#Next">
            <summary>设置 TermDocs.Next() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermDocs#Read(System.Int32[],System.Int32[])">
            <summary>设置 TermDocs.Read(Int32[] docs, Int32[] freqs) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermDocs#Seek(Lucene.Net.Index.Term)">
            <summary>设置 TermDocs.Seek(Term term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermDocs#Seek(Lucene.Net.Index.TermEnum)">
            <summary>设置 TermDocs.Seek(TermEnum termEnum) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermDocs#SkipTo(System.Int32)">
            <summary>设置 TermDocs.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermPositions#GetPayload(System.Byte[],System.Int32)">
            <summary>设置 TermPositions.GetPayload(Byte[] data, Int32 offset) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermPositions#GetPayloadLength">
            <summary>设置 TermPositions.GetPayloadLength() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermPositions#IsPayloadAvailable">
            <summary>设置 TermPositions.IsPayloadAvailable() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermPositions.ln::Lucene#Net#Index#TermPositions#NextPosition">
            <summary>设置 TermPositions.NextPosition() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.Next">
            <summary>设置 TermDocs.Next() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.NextPosition">
            <summary>设置 TermPositions.NextPosition() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.ReadInt32ArrayInt32Array">
            <summary>设置 TermDocs.Read(Int32[] docs, Int32[] freqs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.SeekTerm">
            <summary>设置 TermDocs.Seek(Term term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.SeekTermEnum">
            <summary>设置 TermDocs.Seek(TermEnum termEnum) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermPositions.SkipToInt32">
            <summary>设置 TermDocs.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermVectorEntry">
            <summary>Lucene.Net.Index.TermVectorEntry 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.#ctor(System.String,System.String,System.Int32,Lucene.Net.Index.TermVectorOffsetInfo[],System.Int32[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.Equals(System.Object)">
            <summary>设置 TermVectorEntry.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntry.EqualsObject">
            <summary>设置 TermVectorEntry.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetField">
            <summary>设置 TermVectorEntry.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetField01">
            <summary>设置 TermVectorEntry.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetFrequency">
            <summary>设置 TermVectorEntry.GetFrequency() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetFrequency01">
            <summary>设置 TermVectorEntry.GetFrequency() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetHashCode">
            <summary>设置 TermVectorEntry.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetHashCode01">
            <summary>设置 TermVectorEntry.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetOffsets">
            <summary>设置 TermVectorEntry.GetOffsets() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetOffsets01">
            <summary>设置 TermVectorEntry.GetOffsets() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetPositions">
            <summary>设置 TermVectorEntry.GetPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetPositions01">
            <summary>设置 TermVectorEntry.GetPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetTerm">
            <summary>设置 TermVectorEntry.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntry.GetTerm01">
            <summary>设置 TermVectorEntry.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.InitializeStub">
            <summary>初始化 type StubTermVectorEntry 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntry.ToString">
            <summary>设置 TermVectorEntry.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntry.ToString01">
            <summary>设置 TermVectorEntry.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorEntry.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorEntry.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorEntry.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermVectorEntryFreqSortedComparator">
            <summary>Lucene.Net.Index.TermVectorEntryFreqSortedComparator 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntryFreqSortedComparator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntryFreqSortedComparator.Compare(System.Object,System.Object)">
            <summary>设置 TermVectorEntryFreqSortedComparator.Compare(Object object_Renamed, Object object1) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorEntryFreqSortedComparator.CompareObjectObject">
            <summary>设置 TermVectorEntryFreqSortedComparator.Compare(Object object_Renamed, Object object1) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorEntryFreqSortedComparator.InitializeStub">
            <summary>初始化 type StubTermVectorEntryFreqSortedComparator 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorEntryFreqSortedComparator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorEntryFreqSortedComparator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorEntryFreqSortedComparator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermVectorMapper">
            <summary>Lucene.Net.Index.TermVectorMapper 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorMapper.#ctor(System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorMapper.InitializeStub">
            <summary>初始化 type StubTermVectorMapper 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorMapper.IsIgnoringOffsets">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorMapper.IsIgnoringOffsets01">
            <summary>设置 TermVectorMapper.IsIgnoringOffsets() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorMapper.IsIgnoringPositions">
            <summary>设置 TermVectorMapper.IsIgnoringPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorMapper.IsIgnoringPositions01">
            <summary>设置 TermVectorMapper.IsIgnoringPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorMapper.Map(System.String,System.Int32,Lucene.Net.Index.TermVectorOffsetInfo[],System.Int32[])">
            <summary>设置 TermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorMapper.MapStringInt32TermVectorOffsetInfoArrayInt32Array">
            <summary>设置 TermVectorMapper.Map(String term, Int32 frequency, TermVectorOffsetInfo[] offsets, Int32[] positions) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorMapper.SetDocumentNumber(System.Int32)">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorMapper.SetDocumentNumberInt32">
            <summary>设置 TermVectorMapper.SetDocumentNumber(Int32 documentNumber) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorMapper.SetExpectations(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>设置 TermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorMapper.SetExpectationsStringInt32BooleanBoolean">
            <summary>设置 TermVectorMapper.SetExpectations(String field, Int32 numTerms, Boolean storeOffsets, Boolean storePositions) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo">
            <summary>Lucene.Net.Index.TermVectorOffsetInfo 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.Equals(System.Object)">
            <summary>设置 TermVectorOffsetInfo.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.EqualsObject">
            <summary>设置 TermVectorOffsetInfo.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.GetEndOffset">
            <summary>设置 TermVectorOffsetInfo.GetEndOffset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.GetEndOffset01">
            <summary>设置 TermVectorOffsetInfo.GetEndOffset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.GetHashCode">
            <summary>设置 TermVectorOffsetInfo.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.GetHashCode01">
            <summary>设置 TermVectorOffsetInfo.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.GetStartOffset">
            <summary>设置 TermVectorOffsetInfo.GetStartOffset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.GetStartOffset01">
            <summary>设置 TermVectorOffsetInfo.GetStartOffset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.InitializeStub">
            <summary>初始化 type StubTermVectorOffsetInfo 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.SetEndOffset(System.Int32)">
            <summary>设置 TermVectorOffsetInfo.SetEndOffset(Int32 endOffset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.SetEndOffsetInt32">
            <summary>设置 TermVectorOffsetInfo.SetEndOffset(Int32 endOffset) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.SetStartOffset(System.Int32)">
            <summary>设置 TermVectorOffsetInfo.SetStartOffset(Int32 startOffset) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.SetStartOffsetInt32">
            <summary>设置 TermVectorOffsetInfo.SetStartOffset(Int32 startOffset) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorOffsetInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Index.Fakes.StubTermVectorsReader">
            <summary>Lucene.Net.Index.TermVectorsReader 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorsReader.#ctor(Lucene.Net.Store.Directory,System.String,Lucene.Net.Index.FieldInfos)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorsReader.Clone">
            <summary>设置 TermVectorsReader.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorsReader.Clone01">
            <summary>设置 TermVectorsReader.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorsReader.Get(System.Int32)">
            <summary>设置 TermVectorsReader.Get(Int32 docNum) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorsReader.Get(System.Int32,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 TermVectorsReader.Get(Int32 docNumber, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorsReader.Get(System.Int32,System.String,Lucene.Net.Index.TermVectorMapper)">
            <summary>设置 TermVectorsReader.Get(Int32 docNum, String field, TermVectorMapper mapper) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorsReader.Get(System.Int32,System.String)">
            <summary>设置 TermVectorsReader.Get(Int32 docNum, String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorsReader.GetInt32">
            <summary>设置 TermVectorsReader.Get(Int32 docNum) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorsReader.GetInt32String">
            <summary>设置 TermVectorsReader.Get(Int32 docNum, String field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorsReader.GetInt32StringTermVectorMapper">
            <summary>设置 TermVectorsReader.Get(Int32 docNum, String field, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Index.Fakes.StubTermVectorsReader.GetInt32TermVectorMapper">
            <summary>设置 TermVectorsReader.Get(Int32 docNumber, TermVectorMapper mapper) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Index.Fakes.StubTermVectorsReader.InitializeStub">
            <summary>初始化 type StubTermVectorsReader 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorsReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorsReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Index.Fakes.StubTermVectorsReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Messages.Fakes.ShimMessageImpl">
            <summary>Lucene.Net.Messages.MessageImpl 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimMessageImpl.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimMessageImpl.#ctor(Lucene.Net.Messages.MessageImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimMessageImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimMessageImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimMessageImpl.Bind(Lucene.Net.Messages.Message)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.ConstructorString">
            <summary>设置 MessageImpl.MessageImpl(String key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.ConstructorStringObjectArray">
            <summary>设置 MessageImpl.MessageImpl(String key, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.GetArguments">
            <summary>设置 MessageImpl.GetArguments() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.GetKey">
            <summary>设置 MessageImpl.GetKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.GetLocalizedMessage">
            <summary>设置 MessageImpl.GetLocalizedMessage() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.ToString">
            <summary>设置 MessageImpl.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Messages.Fakes.ShimMessageImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.AllInstances.GetArguments">
            <summary>设置 MessageImpl.GetArguments() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.AllInstances.GetKey">
            <summary>设置 MessageImpl.GetKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.AllInstances.GetLocalizedMessage">
            <summary>设置 MessageImpl.GetLocalizedMessage() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimMessageImpl.AllInstances.ToString01">
            <summary>设置 MessageImpl.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Messages.Fakes.ShimNLS">
            <summary>Lucene.Net.Messages.NLS 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimNLS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimNLS.#ctor(Lucene.Net.Messages.NLS)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimNLS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.ShimNLS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.Constructor">
            <summary>设置 NLS.NLS() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.GetLocalizedMessageString">
            <summary>设置 NLS.GetLocalizedMessage(String key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.GetLocalizedMessageStringObjectArray">
            <summary>设置 NLS.GetLocalizedMessage(String key, Object[] args) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.InitializeMessagesStringType">
            <summary>设置 NLS.InitializeMessages(String bundleName, Type clazz) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.LoadType">
            <summary>设置 NLS.Load(Type clazz) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.LoadfieldValueFieldInfoBooleanType">
            <summary>设置 NLS.LoadfieldValue(FieldInfo field, Boolean isFieldAccessible, Type clazz) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.MakeAccessibleFieldInfo">
            <summary>设置 NLS.MakeAccessible(FieldInfo field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.StaticConstructor">
            <summary>设置 NLS.NLS() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.ShimNLS.ValidateMessageStringType">
            <summary>设置 NLS.ValidateMessage(String key, Type clazz) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Messages.Fakes.ShimNLS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Messages.Fakes.StubMessageImpl">
            <summary>Lucene.Net.Messages.MessageImpl 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubMessageImpl.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubMessageImpl.#ctor(System.String,System.Object[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubMessageImpl.GetArguments">
            <summary>设置 MessageImpl.GetArguments() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Messages.Fakes.StubMessageImpl.GetArguments01">
            <summary>设置 MessageImpl.GetArguments() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubMessageImpl.GetKey">
            <summary>设置 MessageImpl.GetKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Messages.Fakes.StubMessageImpl.GetKey01">
            <summary>设置 MessageImpl.GetKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubMessageImpl.GetLocalizedMessage">
            <summary>设置 MessageImpl.GetLocalizedMessage() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Messages.Fakes.StubMessageImpl.GetLocalizedMessage01">
            <summary>设置 MessageImpl.GetLocalizedMessage() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubMessageImpl.InitializeStub">
            <summary>初始化 type StubMessageImpl 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubMessageImpl.ToString">
            <summary>设置 MessageImpl.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Messages.Fakes.StubMessageImpl.ToString01">
            <summary>设置 MessageImpl.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.StubMessageImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.StubMessageImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.StubMessageImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Messages.Fakes.StubNLS">
            <summary>Lucene.Net.Messages.NLS 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubNLS.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubNLS.InitializeStub">
            <summary>初始化 type StubNLS 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.StubNLS.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.StubNLS.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Messages.Fakes.StubNLS.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Messages.Fakes.StubNLSException">
            <summary>Lucene.Net.Messages.NLSException 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubNLSException.#ctor">
            <summary>初始化 type StubNLSException 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Messages.Fakes.StubNLSException.GetMessageObject">
            <summary>设置 NLSException.GetMessageObject() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Messages.Fakes.StubNLSException.ln::Lucene#Net#Messages#NLSException#GetMessageObject">
            <summary>设置 NLSException.GetMessageObject() 的 存根</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream">
            <summary>Lucene.Net.QueryParsers.FastCharStream 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.#ctor(Lucene.Net.QueryParsers.FastCharStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.Bind(Lucene.Net.QueryParsers.CharStream)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.BackupInt32">
            <summary>设置 FastCharStream.Backup(Int32 amount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.BeginToken">
            <summary>设置 FastCharStream.BeginToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.ConstructorTextReader">
            <summary>设置 FastCharStream.FastCharStream(TextReader r) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.Done">
            <summary>设置 FastCharStream.Done() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.GetBeginColumn">
            <summary>设置 FastCharStream.GetBeginColumn() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.GetBeginLine">
            <summary>设置 FastCharStream.GetBeginLine() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.GetColumn">
            <summary>设置 FastCharStream.GetColumn() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.GetEndColumn">
            <summary>设置 FastCharStream.GetEndColumn() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.GetEndLine">
            <summary>设置 FastCharStream.GetEndLine() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.GetImage">
            <summary>设置 FastCharStream.GetImage() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.GetLine">
            <summary>设置 FastCharStream.GetLine() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.GetSuffixInt32">
            <summary>设置 FastCharStream.GetSuffix(Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.ReadChar">
            <summary>设置 FastCharStream.ReadChar() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.Refill">
            <summary>设置 FastCharStream.Refill() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.BackupInt32">
            <summary>设置 FastCharStream.Backup(Int32 amount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.BeginToken">
            <summary>设置 FastCharStream.BeginToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.Done">
            <summary>设置 FastCharStream.Done() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.GetBeginColumn">
            <summary>设置 FastCharStream.GetBeginColumn() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.GetBeginLine">
            <summary>设置 FastCharStream.GetBeginLine() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.GetColumn">
            <summary>设置 FastCharStream.GetColumn() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.GetEndColumn">
            <summary>设置 FastCharStream.GetEndColumn() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.GetEndLine">
            <summary>设置 FastCharStream.GetEndLine() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.GetImage">
            <summary>设置 FastCharStream.GetImage() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.GetLine">
            <summary>设置 FastCharStream.GetLine() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.GetSuffixInt32">
            <summary>设置 FastCharStream.GetSuffix(Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.ReadChar">
            <summary>设置 FastCharStream.ReadChar() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimFastCharStream.AllInstances.Refill">
            <summary>设置 FastCharStream.Refill() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser">
            <summary>Lucene.Net.QueryParsers.MultiFieldQueryParser 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.#ctor(Lucene.Net.QueryParsers.MultiFieldQueryParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ApplySlopQueryInt32">
            <summary>设置 MultiFieldQueryParser.ApplySlop(Query q, Int32 slop) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ConstructorStringArrayAnalyzer">
            <summary>设置 MultiFieldQueryParser.MultiFieldQueryParser(String[] fields, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ConstructorStringArrayAnalyzerIDictionary">
            <summary>设置 MultiFieldQueryParser.MultiFieldQueryParser(String[] fields, Analyzer analyzer, IDictionary boosts) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ConstructorVersionStringArrayAnalyzer">
            <summary>设置 MultiFieldQueryParser.MultiFieldQueryParser(Version matchVersion, String[] fields, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ConstructorVersionStringArrayAnalyzerIDictionary">
            <summary>设置 MultiFieldQueryParser.MultiFieldQueryParser(Version matchVersion, String[] fields, Analyzer analyzer, IDictionary boosts) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.GetFieldQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetFieldQuery(String field, String queryText) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.GetFieldQueryStringStringInt32">
            <summary>设置 MultiFieldQueryParser.GetFieldQuery(String field, String queryText, Int32 slop) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.GetFuzzyQueryStringStringSingle">
            <summary>设置 MultiFieldQueryParser.GetFuzzyQuery(String field, String termStr, Single minSimilarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.GetPrefixQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetPrefixQuery(String field, String termStr) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.GetRangeQueryStringStringStringBoolean">
            <summary>设置 MultiFieldQueryParser.GetRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.GetWildcardQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetWildcardQuery(String field, String termStr) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ParseStringArrayStringArrayAnalyzer">
            <summary>设置 MultiFieldQueryParser.Parse(String[] queries, String[] fields, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ParseStringArrayStringArrayBooleanClauseOccurArrayAnalyzer">
            <summary>设置 MultiFieldQueryParser.Parse(String[] queries, String[] fields, Occur[] flags, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ParseStringStringArrayBooleanClauseOccurArrayAnalyzer">
            <summary>设置 MultiFieldQueryParser.Parse(String query, String[] fields, Occur[] flags, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ParseVersionStringArrayStringArrayAnalyzer">
            <summary>设置 MultiFieldQueryParser.Parse(Version matchVersion, String[] queries, String[] fields, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ParseVersionStringArrayStringArrayBooleanClauseOccurArrayAnalyzer">
            <summary>设置 MultiFieldQueryParser.Parse(Version matchVersion, String[] queries, String[] fields, Occur[] flags, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.ParseVersionStringStringArrayBooleanClauseOccurArrayAnalyzer">
            <summary>设置 MultiFieldQueryParser.Parse(Version matchVersion, String query, String[] fields, Occur[] flags, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.AllInstances.ApplySlopQueryInt32">
            <summary>设置 MultiFieldQueryParser.ApplySlop(Query q, Int32 slop) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.AllInstances.GetFieldQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetFieldQuery(String field, String queryText) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.AllInstances.GetFieldQueryStringStringInt32">
            <summary>设置 MultiFieldQueryParser.GetFieldQuery(String field, String queryText, Int32 slop) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.AllInstances.GetFuzzyQueryStringStringSingle">
            <summary>设置 MultiFieldQueryParser.GetFuzzyQuery(String field, String termStr, Single minSimilarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.AllInstances.GetPrefixQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetPrefixQuery(String field, String termStr) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.AllInstances.GetRangeQueryStringStringStringBoolean">
            <summary>设置 MultiFieldQueryParser.GetRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimMultiFieldQueryParser.AllInstances.GetWildcardQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetWildcardQuery(String field, String termStr) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimParseException">
            <summary>Lucene.Net.QueryParsers.ParseException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimParseException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimParseException.#ctor(Lucene.Net.QueryParsers.ParseException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimParseException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimParseException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimParseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.Add_escapesString">
            <summary>设置 ParseException.Add_escapes(String str) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.Constructor">
            <summary>设置 ParseException.ParseException() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.ConstructorString">
            <summary>设置 ParseException.ParseException(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.ConstructorStringException">
            <summary>设置 ParseException.ParseException(String message, Exception ex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.ConstructorTokenInt32ArrayArrayStringArray">
            <summary>设置 ParseException.ParseException(Token currentTokenVal, Int32[][] expectedTokenSequencesVal, String[] tokenImageVal) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.MessageGet">
            <summary>设置 ParseException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimParseException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.AllInstances.Add_escapesString">
            <summary>设置 ParseException.Add_escapes(String str) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimParseException.AllInstances.MessageGet">
            <summary>设置 ParseException.get_Message() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimQueryParser">
            <summary>Lucene.Net.QueryParsers.QueryParser 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.#ctor(Lucene.Net.QueryParsers.QueryParser)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AddClauseIListOfBooleanClauseInt32Int32Query">
            <summary>设置 QueryParser.AddClause(IList`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AddClauseListOfBooleanClauseInt32Int32Query">
            <summary>设置 QueryParser.AddClause(List`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ClauseString">
            <summary>设置 QueryParser.Clause(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Conjunction">
            <summary>设置 QueryParser.Conjunction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ConstructorCharStream">
            <summary>设置 QueryParser.QueryParser(CharStream stream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ConstructorQueryParserTokenManager">
            <summary>设置 QueryParser.QueryParser(QueryParserTokenManager tm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ConstructorStringAnalyzer">
            <summary>设置 QueryParser.QueryParser(String f, Analyzer a) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ConstructorVersionStringAnalyzer">
            <summary>设置 QueryParser.QueryParser(Version matchVersion, String f, Analyzer a) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Disable_tracing">
            <summary>设置 QueryParser.Disable_tracing() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.DiscardEscapeCharString">
            <summary>设置 QueryParser.DiscardEscapeChar(String input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Enable_tracing">
            <summary>设置 QueryParser.Enable_tracing() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.EscapeString">
            <summary>设置 QueryParser.Escape(String s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GenerateParseException">
            <summary>设置 QueryParser.GenerateParseException() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetAllowLeadingWildcard">
            <summary>设置 QueryParser.GetAllowLeadingWildcard() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetAnalyzer">
            <summary>设置 QueryParser.GetAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetBooleanQueryIListOfBooleanClause">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetBooleanQueryIListOfBooleanClauseBoolean">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetBooleanQueryListOfBooleanClause">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetBooleanQueryListOfBooleanClauseBoolean">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetDateResolutionString">
            <summary>设置 QueryParser.GetDateResolution(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetDefaultOperator">
            <summary>设置 QueryParser.GetDefaultOperator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetEnablePositionIncrements">
            <summary>设置 QueryParser.GetEnablePositionIncrements() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetField">
            <summary>设置 QueryParser.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetFieldQueryStringString">
            <summary>设置 QueryParser.GetFieldQuery(String field, String queryText) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetFieldQueryStringStringInt32">
            <summary>设置 QueryParser.GetFieldQuery(String field, String queryText, Int32 slop) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetFuzzyMinSim">
            <summary>设置 QueryParser.GetFuzzyMinSim() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetFuzzyPrefixLength">
            <summary>设置 QueryParser.GetFuzzyPrefixLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetFuzzyQueryStringStringSingle">
            <summary>设置 QueryParser.GetFuzzyQuery(String field, String termStr, Single minSimilarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetLowercaseExpandedTerms">
            <summary>设置 QueryParser.GetLowercaseExpandedTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetMultiTermRewriteMethod">
            <summary>设置 QueryParser.GetMultiTermRewriteMethod() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetNextToken">
            <summary>设置 QueryParser.GetNextToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetPhraseSlop">
            <summary>设置 QueryParser.GetPhraseSlop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetPrefixQueryStringString">
            <summary>设置 QueryParser.GetPrefixQuery(String field, String termStr) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetRangeQueryStringStringStringBoolean">
            <summary>设置 QueryParser.GetRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetTokenInt32">
            <summary>设置 QueryParser.GetToken(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetUseOldRangeQuery">
            <summary>设置 QueryParser.GetUseOldRangeQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.GetWildcardQueryStringString">
            <summary>设置 QueryParser.GetWildcardQuery(String field, String termStr) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.HexToIntChar">
            <summary>设置 QueryParser.HexToInt(Char c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.InitBlock">
            <summary>设置 QueryParser.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_2_1Int32">
            <summary>设置 QueryParser.Jj_2_1(Int32 xla) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_3R_2">
            <summary>设置 QueryParser.Jj_3R_2() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_3R_3">
            <summary>设置 QueryParser.Jj_3R_3() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_3_1">
            <summary>设置 QueryParser.Jj_3_1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_add_error_tokenInt32Int32">
            <summary>设置 QueryParser.Jj_add_error_token(Int32 kind, Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_consume_tokenInt32">
            <summary>设置 QueryParser.Jj_consume_token(Int32 kind) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_la1_init_0">
            <summary>设置 QueryParser.Jj_la1_init_0() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_la1_init_1">
            <summary>设置 QueryParser.Jj_la1_init_1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_ntk">
            <summary>设置 QueryParser.Jj_ntk() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_rescan_token">
            <summary>设置 QueryParser.Jj_rescan_token() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_saveInt32Int32">
            <summary>设置 QueryParser.Jj_save(Int32 index, Int32 xla) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Jj_scan_tokenInt32">
            <summary>设置 QueryParser.Jj_scan_token(Int32 kind) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.MainStringArray">
            <summary>设置 QueryParser.Main(String[] args) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.Modifiers">
            <summary>设置 QueryParser.Modifiers() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewBooleanClauseQueryBooleanClauseOccur">
            <summary>设置 QueryParser.NewBooleanClause(Query q, Occur occur) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewBooleanQueryBoolean">
            <summary>设置 QueryParser.NewBooleanQuery(Boolean disableCoord) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewFuzzyQueryTermSingleInt32">
            <summary>设置 QueryParser.NewFuzzyQuery(Term term, Single minimumSimilarity, Int32 prefixLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewMatchAllDocsQuery">
            <summary>设置 QueryParser.NewMatchAllDocsQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewMultiPhraseQuery">
            <summary>设置 QueryParser.NewMultiPhraseQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewPhraseQuery">
            <summary>设置 QueryParser.NewPhraseQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewPrefixQueryTerm">
            <summary>设置 QueryParser.NewPrefixQuery(Term prefix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewRangeQueryStringStringStringBoolean">
            <summary>设置 QueryParser.NewRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewTermQueryTerm">
            <summary>设置 QueryParser.NewTermQuery(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.NewWildcardQueryTerm">
            <summary>设置 QueryParser.NewWildcardQuery(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ParseString">
            <summary>设置 QueryParser.Parse(String query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.QueryString">
            <summary>设置 QueryParser.Query(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ReInitCharStream">
            <summary>设置 QueryParser.ReInit(CharStream stream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ReInitQueryParserTokenManager">
            <summary>设置 QueryParser.ReInit(QueryParserTokenManager tm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetAllowLeadingWildcardBoolean">
            <summary>设置 QueryParser.SetAllowLeadingWildcard(Boolean allowLeadingWildcard) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetDateResolutionDateToolsResolution">
            <summary>设置 QueryParser.SetDateResolution(Resolution dateResolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetDateResolutionStringDateToolsResolution">
            <summary>设置 QueryParser.SetDateResolution(String fieldName, Resolution dateResolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetDefaultOperatorQueryParserOperator">
            <summary>设置 QueryParser.SetDefaultOperator(Operator op) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetEnablePositionIncrementsBoolean">
            <summary>设置 QueryParser.SetEnablePositionIncrements(Boolean enable) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetFuzzyMinSimSingle">
            <summary>设置 QueryParser.SetFuzzyMinSim(Single fuzzyMinSim) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetFuzzyPrefixLengthInt32">
            <summary>设置 QueryParser.SetFuzzyPrefixLength(Int32 fuzzyPrefixLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetLowercaseExpandedTermsBoolean">
            <summary>设置 QueryParser.SetLowercaseExpandedTerms(Boolean lowercaseExpandedTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetMultiTermRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 QueryParser.SetMultiTermRewriteMethod(RewriteMethod method) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetPhraseSlopInt32">
            <summary>设置 QueryParser.SetPhraseSlop(Int32 phraseSlop) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.SetUseOldRangeQueryBoolean">
            <summary>设置 QueryParser.SetUseOldRangeQuery(Boolean useOldRangeQuery) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.StaticConstructor">
            <summary>设置 QueryParser.QueryParser() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.TermString">
            <summary>设置 QueryParser.Term(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.TopLevelQueryString">
            <summary>设置 QueryParser.TopLevelQuery(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.AddClauseIListOfBooleanClauseInt32Int32Query">
            <summary>设置 QueryParser.AddClause(IList`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.AddClauseListOfBooleanClauseInt32Int32Query">
            <summary>设置 QueryParser.AddClause(List`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.ClauseString">
            <summary>设置 QueryParser.Clause(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Conjunction">
            <summary>设置 QueryParser.Conjunction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Disable_tracing">
            <summary>设置 QueryParser.Disable_tracing() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.DiscardEscapeCharString">
            <summary>设置 QueryParser.DiscardEscapeChar(String input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Enable_tracing">
            <summary>设置 QueryParser.Enable_tracing() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GenerateParseException">
            <summary>设置 QueryParser.GenerateParseException() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetAllowLeadingWildcard">
            <summary>设置 QueryParser.GetAllowLeadingWildcard() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetAnalyzer">
            <summary>设置 QueryParser.GetAnalyzer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetBooleanQueryIListOfBooleanClause">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetBooleanQueryIListOfBooleanClauseBoolean">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetBooleanQueryListOfBooleanClause">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetBooleanQueryListOfBooleanClauseBoolean">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetDateResolutionString">
            <summary>设置 QueryParser.GetDateResolution(String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetDefaultOperator">
            <summary>设置 QueryParser.GetDefaultOperator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetEnablePositionIncrements">
            <summary>设置 QueryParser.GetEnablePositionIncrements() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetField">
            <summary>设置 QueryParser.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetFieldQueryStringString">
            <summary>设置 QueryParser.GetFieldQuery(String field, String queryText) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetFieldQueryStringStringInt32">
            <summary>设置 QueryParser.GetFieldQuery(String field, String queryText, Int32 slop) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetFuzzyMinSim">
            <summary>设置 QueryParser.GetFuzzyMinSim() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetFuzzyPrefixLength">
            <summary>设置 QueryParser.GetFuzzyPrefixLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetFuzzyQueryStringStringSingle">
            <summary>设置 QueryParser.GetFuzzyQuery(String field, String termStr, Single minSimilarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetLowercaseExpandedTerms">
            <summary>设置 QueryParser.GetLowercaseExpandedTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetMultiTermRewriteMethod">
            <summary>设置 QueryParser.GetMultiTermRewriteMethod() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetNextToken">
            <summary>设置 QueryParser.GetNextToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetPhraseSlop">
            <summary>设置 QueryParser.GetPhraseSlop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetPrefixQueryStringString">
            <summary>设置 QueryParser.GetPrefixQuery(String field, String termStr) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetRangeQueryStringStringStringBoolean">
            <summary>设置 QueryParser.GetRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetTokenInt32">
            <summary>设置 QueryParser.GetToken(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetUseOldRangeQuery">
            <summary>设置 QueryParser.GetUseOldRangeQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.GetWildcardQueryStringString">
            <summary>设置 QueryParser.GetWildcardQuery(String field, String termStr) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.InitBlock">
            <summary>设置 QueryParser.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_2_1Int32">
            <summary>设置 QueryParser.Jj_2_1(Int32 xla) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_3R_2">
            <summary>设置 QueryParser.Jj_3R_2() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_3R_3">
            <summary>设置 QueryParser.Jj_3R_3() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_3_1">
            <summary>设置 QueryParser.Jj_3_1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_add_error_tokenInt32Int32">
            <summary>设置 QueryParser.Jj_add_error_token(Int32 kind, Int32 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_consume_tokenInt32">
            <summary>设置 QueryParser.Jj_consume_token(Int32 kind) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_ntk">
            <summary>设置 QueryParser.Jj_ntk() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_rescan_token">
            <summary>设置 QueryParser.Jj_rescan_token() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_saveInt32Int32">
            <summary>设置 QueryParser.Jj_save(Int32 index, Int32 xla) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Jj_scan_tokenInt32">
            <summary>设置 QueryParser.Jj_scan_token(Int32 kind) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.Modifiers">
            <summary>设置 QueryParser.Modifiers() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewBooleanClauseQueryBooleanClauseOccur">
            <summary>设置 QueryParser.NewBooleanClause(Query q, Occur occur) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewBooleanQueryBoolean">
            <summary>设置 QueryParser.NewBooleanQuery(Boolean disableCoord) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewFuzzyQueryTermSingleInt32">
            <summary>设置 QueryParser.NewFuzzyQuery(Term term, Single minimumSimilarity, Int32 prefixLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewMatchAllDocsQuery">
            <summary>设置 QueryParser.NewMatchAllDocsQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewMultiPhraseQuery">
            <summary>设置 QueryParser.NewMultiPhraseQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewPhraseQuery">
            <summary>设置 QueryParser.NewPhraseQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewPrefixQueryTerm">
            <summary>设置 QueryParser.NewPrefixQuery(Term prefix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewRangeQueryStringStringStringBoolean">
            <summary>设置 QueryParser.NewRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewTermQueryTerm">
            <summary>设置 QueryParser.NewTermQuery(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.NewWildcardQueryTerm">
            <summary>设置 QueryParser.NewWildcardQuery(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.ParseString">
            <summary>设置 QueryParser.Parse(String query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.QueryString">
            <summary>设置 QueryParser.Query(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.ReInitCharStream">
            <summary>设置 QueryParser.ReInit(CharStream stream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.ReInitQueryParserTokenManager">
            <summary>设置 QueryParser.ReInit(QueryParserTokenManager tm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetAllowLeadingWildcardBoolean">
            <summary>设置 QueryParser.SetAllowLeadingWildcard(Boolean allowLeadingWildcard) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetDateResolutionDateToolsResolution">
            <summary>设置 QueryParser.SetDateResolution(Resolution dateResolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetDateResolutionStringDateToolsResolution">
            <summary>设置 QueryParser.SetDateResolution(String fieldName, Resolution dateResolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetDefaultOperatorQueryParserOperator">
            <summary>设置 QueryParser.SetDefaultOperator(Operator op) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetEnablePositionIncrementsBoolean">
            <summary>设置 QueryParser.SetEnablePositionIncrements(Boolean enable) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetFuzzyMinSimSingle">
            <summary>设置 QueryParser.SetFuzzyMinSim(Single fuzzyMinSim) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetFuzzyPrefixLengthInt32">
            <summary>设置 QueryParser.SetFuzzyPrefixLength(Int32 fuzzyPrefixLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetLowercaseExpandedTermsBoolean">
            <summary>设置 QueryParser.SetLowercaseExpandedTerms(Boolean lowercaseExpandedTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetMultiTermRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 QueryParser.SetMultiTermRewriteMethod(RewriteMethod method) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetPhraseSlopInt32">
            <summary>设置 QueryParser.SetPhraseSlop(Int32 phraseSlop) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.SetUseOldRangeQueryBoolean">
            <summary>设置 QueryParser.SetUseOldRangeQuery(Boolean useOldRangeQuery) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.TermString">
            <summary>设置 QueryParser.Term(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.AllInstances.TopLevelQueryString">
            <summary>设置 QueryParser.TopLevelQuery(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator">
            <summary>Lucene.Net.QueryParsers.QueryParser+Operator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator.#ctor(Lucene.Net.QueryParsers.QueryParser.Operator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator.ConstructorString">
            <summary>设置 Operator.Operator(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator.StaticConstructor">
            <summary>设置 Operator.Operator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimQueryParser.ShimOperator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants">
            <summary>Lucene.Net.QueryParsers.QueryParserConstants 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants.#ctor(Lucene.Net.QueryParsers.QueryParserConstants)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants.Constructor">
            <summary>设置 QueryParserConstants.QueryParserConstants() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants.StaticConstructor">
            <summary>设置 QueryParserConstants.QueryParserConstants() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimQueryParserConstants.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager">
            <summary>Lucene.Net.QueryParsers.QueryParserTokenManager 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.#ctor(Lucene.Net.QueryParsers.QueryParserTokenManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.ConstructorCharStream">
            <summary>设置 QueryParserTokenManager.QueryParserTokenManager(CharStream stream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.ConstructorCharStreamInt32">
            <summary>设置 QueryParserTokenManager.QueryParserTokenManager(CharStream stream, Int32 lexState) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.GetNextToken">
            <summary>设置 QueryParserTokenManager.GetNextToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.InitBlock">
            <summary>设置 QueryParserTokenManager.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjAddStatesInt32Int32">
            <summary>设置 QueryParserTokenManager.JjAddStates(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjCanMove_0Int32Int32Int32UInt64UInt64">
            <summary>设置 QueryParserTokenManager.JjCanMove_0(Int32 hiByte, Int32 i1, Int32 i2, UInt64 l1, UInt64 l2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjCanMove_1Int32Int32Int32UInt64UInt64">
            <summary>设置 QueryParserTokenManager.JjCanMove_1(Int32 hiByte, Int32 i1, Int32 i2, UInt64 l1, UInt64 l2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjCanMove_2Int32Int32Int32UInt64UInt64">
            <summary>设置 QueryParserTokenManager.JjCanMove_2(Int32 hiByte, Int32 i1, Int32 i2, UInt64 l1, UInt64 l2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjCheckNAddInt32">
            <summary>设置 QueryParserTokenManager.JjCheckNAdd(Int32 state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjCheckNAddStatesInt32Int32">
            <summary>设置 QueryParserTokenManager.JjCheckNAddStates(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjCheckNAddTwoStatesInt32Int32">
            <summary>设置 QueryParserTokenManager.JjCheckNAddTwoStates(Int32 state1, Int32 state2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjFillToken">
            <summary>设置 QueryParserTokenManager.JjFillToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveNfa_0Int32Int32">
            <summary>设置 QueryParserTokenManager.JjMoveNfa_0(Int32 startState, Int32 curPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveNfa_1Int32Int32">
            <summary>设置 QueryParserTokenManager.JjMoveNfa_1(Int32 startState, Int32 curPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveNfa_2Int32Int32">
            <summary>设置 QueryParserTokenManager.JjMoveNfa_2(Int32 startState, Int32 curPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveNfa_3Int32Int32">
            <summary>设置 QueryParserTokenManager.JjMoveNfa_3(Int32 startState, Int32 curPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveStringLiteralDfa0_0">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa0_0() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveStringLiteralDfa0_1">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa0_1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveStringLiteralDfa0_2">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa0_2() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveStringLiteralDfa0_3">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa0_3() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveStringLiteralDfa1_1Int64">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa1_1(Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjMoveStringLiteralDfa1_2Int64">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa1_2(Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStartNfaWithStates_1Int32Int32Int32">
            <summary>设置 QueryParserTokenManager.JjStartNfaWithStates_1(Int32 pos, Int32 kind, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStartNfaWithStates_2Int32Int32Int32">
            <summary>设置 QueryParserTokenManager.JjStartNfaWithStates_2(Int32 pos, Int32 kind, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStartNfaWithStates_3Int32Int32Int32">
            <summary>设置 QueryParserTokenManager.JjStartNfaWithStates_3(Int32 pos, Int32 kind, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStartNfa_1Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStartNfa_1(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStartNfa_2Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStartNfa_2(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStartNfa_3Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStartNfa_3(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStopAtPosInt32Int32">
            <summary>设置 QueryParserTokenManager.JjStopAtPos(Int32 pos, Int32 kind) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStopStringLiteralDfa_1Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStopStringLiteralDfa_1(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStopStringLiteralDfa_2Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStopStringLiteralDfa_2(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.JjStopStringLiteralDfa_3Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStopStringLiteralDfa_3(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.ReInitCharStream">
            <summary>设置 QueryParserTokenManager.ReInit(CharStream stream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.ReInitCharStreamInt32">
            <summary>设置 QueryParserTokenManager.ReInit(CharStream stream, Int32 lexState) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.ReInitRounds">
            <summary>设置 QueryParserTokenManager.ReInitRounds() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.SetDebugStreamStreamWriter">
            <summary>设置 QueryParserTokenManager.SetDebugStream(StreamWriter ds) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.StaticConstructor">
            <summary>设置 QueryParserTokenManager.QueryParserTokenManager() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.SwitchToInt32">
            <summary>设置 QueryParserTokenManager.SwitchTo(Int32 lexState) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.GetNextToken">
            <summary>设置 QueryParserTokenManager.GetNextToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.InitBlock">
            <summary>设置 QueryParserTokenManager.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjAddStatesInt32Int32">
            <summary>设置 QueryParserTokenManager.JjAddStates(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjCheckNAddInt32">
            <summary>设置 QueryParserTokenManager.JjCheckNAdd(Int32 state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjCheckNAddStatesInt32Int32">
            <summary>设置 QueryParserTokenManager.JjCheckNAddStates(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjCheckNAddTwoStatesInt32Int32">
            <summary>设置 QueryParserTokenManager.JjCheckNAddTwoStates(Int32 state1, Int32 state2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjFillToken">
            <summary>设置 QueryParserTokenManager.JjFillToken() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveNfa_0Int32Int32">
            <summary>设置 QueryParserTokenManager.JjMoveNfa_0(Int32 startState, Int32 curPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveNfa_1Int32Int32">
            <summary>设置 QueryParserTokenManager.JjMoveNfa_1(Int32 startState, Int32 curPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveNfa_2Int32Int32">
            <summary>设置 QueryParserTokenManager.JjMoveNfa_2(Int32 startState, Int32 curPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveNfa_3Int32Int32">
            <summary>设置 QueryParserTokenManager.JjMoveNfa_3(Int32 startState, Int32 curPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveStringLiteralDfa0_0">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa0_0() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveStringLiteralDfa0_1">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa0_1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveStringLiteralDfa0_2">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa0_2() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveStringLiteralDfa0_3">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa0_3() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveStringLiteralDfa1_1Int64">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa1_1(Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjMoveStringLiteralDfa1_2Int64">
            <summary>设置 QueryParserTokenManager.JjMoveStringLiteralDfa1_2(Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStartNfaWithStates_1Int32Int32Int32">
            <summary>设置 QueryParserTokenManager.JjStartNfaWithStates_1(Int32 pos, Int32 kind, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStartNfaWithStates_2Int32Int32Int32">
            <summary>设置 QueryParserTokenManager.JjStartNfaWithStates_2(Int32 pos, Int32 kind, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStartNfaWithStates_3Int32Int32Int32">
            <summary>设置 QueryParserTokenManager.JjStartNfaWithStates_3(Int32 pos, Int32 kind, Int32 state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStartNfa_1Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStartNfa_1(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStartNfa_2Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStartNfa_2(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStartNfa_3Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStartNfa_3(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStopAtPosInt32Int32">
            <summary>设置 QueryParserTokenManager.JjStopAtPos(Int32 pos, Int32 kind) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStopStringLiteralDfa_1Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStopStringLiteralDfa_1(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStopStringLiteralDfa_2Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStopStringLiteralDfa_2(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.JjStopStringLiteralDfa_3Int32Int64">
            <summary>设置 QueryParserTokenManager.JjStopStringLiteralDfa_3(Int32 pos, Int64 active0) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.ReInitCharStream">
            <summary>设置 QueryParserTokenManager.ReInit(CharStream stream) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.ReInitCharStreamInt32">
            <summary>设置 QueryParserTokenManager.ReInit(CharStream stream, Int32 lexState) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.ReInitRounds">
            <summary>设置 QueryParserTokenManager.ReInitRounds() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.SetDebugStreamStreamWriter">
            <summary>设置 QueryParserTokenManager.SetDebugStream(StreamWriter ds) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimQueryParserTokenManager.AllInstances.SwitchToInt32">
            <summary>设置 QueryParserTokenManager.SwitchTo(Int32 lexState) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimToken">
            <summary>Lucene.Net.QueryParsers.Token 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimToken.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimToken.#ctor(Lucene.Net.QueryParsers.Token)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimToken.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimToken.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.Constructor">
            <summary>设置 Token.Token() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.ConstructorInt32">
            <summary>设置 Token.Token(Int32 kind) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.ConstructorInt32String">
            <summary>设置 Token.Token(Int32 kind, String image) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.GetValue">
            <summary>设置 Token.GetValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.NewTokenInt32">
            <summary>设置 Token.NewToken(Int32 ofKind) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.NewTokenInt32String">
            <summary>设置 Token.NewToken(Int32 ofKind, String image) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.ToString">
            <summary>设置 Token.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimToken.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.AllInstances.GetValue">
            <summary>设置 Token.GetValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimToken.AllInstances.ToString01">
            <summary>设置 Token.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError">
            <summary>Lucene.Net.QueryParsers.TokenMgrError 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.#ctor(Lucene.Net.QueryParsers.TokenMgrError)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.Constructor">
            <summary>设置 TokenMgrError.TokenMgrError() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.ConstructorBooleanInt32Int32Int32StringCharInt32">
            <summary>设置 TokenMgrError.TokenMgrError(Boolean EOFSeen, Int32 lexState, Int32 errorLine, Int32 errorColumn, String errorAfter, Char curChar, Int32 reason) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.ConstructorStringInt32">
            <summary>设置 TokenMgrError.TokenMgrError(String message, Int32 reason) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.LexicalErrorBooleanInt32Int32Int32StringChar">
            <summary>设置 TokenMgrError.LexicalError(Boolean EOFSeen, Int32 lexState, Int32 errorLine, Int32 errorColumn, String errorAfter, Char curChar) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.MessageGet">
            <summary>设置 TokenMgrError.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.addEscapesString">
            <summary>设置 TokenMgrError.addEscapes(String str) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.ShimTokenMgrError.AllInstances.MessageGet">
            <summary>设置 TokenMgrError.get_Message() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.StubCharStream">
            <summary>Lucene.Net.QueryParsers.CharStream 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.#ctor">
            <summary>初始化 type StubCharStream 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.BackupInt32">
            <summary>设置 CharStream.Backup(Int32 amount) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.BeginToken">
            <summary>设置 CharStream.BeginToken() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.Done">
            <summary>设置 CharStream.Done() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.GetBeginColumn">
            <summary>设置 CharStream.GetBeginColumn() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.GetBeginLine">
            <summary>设置 CharStream.GetBeginLine() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.GetColumn">
            <summary>设置 CharStream.GetColumn() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.GetEndColumn">
            <summary>设置 CharStream.GetEndColumn() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.GetEndLine">
            <summary>设置 CharStream.GetEndLine() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.GetImage">
            <summary>设置 CharStream.GetImage() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.GetLine">
            <summary>设置 CharStream.GetLine() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.GetSuffixInt32">
            <summary>设置 CharStream.GetSuffix(Int32 len) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#Backup(System.Int32)">
            <summary>设置 CharStream.Backup(Int32 amount) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#BeginToken">
            <summary>设置 CharStream.BeginToken() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#Done">
            <summary>设置 CharStream.Done() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#GetBeginColumn">
            <summary>设置 CharStream.GetBeginColumn() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#GetBeginLine">
            <summary>设置 CharStream.GetBeginLine() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#GetColumn">
            <summary>设置 CharStream.GetColumn() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#GetEndColumn">
            <summary>设置 CharStream.GetEndColumn() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#GetEndLine">
            <summary>设置 CharStream.GetEndLine() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#GetImage">
            <summary>设置 CharStream.GetImage() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#GetLine">
            <summary>设置 CharStream.GetLine() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#GetSuffix(System.Int32)">
            <summary>设置 CharStream.GetSuffix(Int32 len) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubCharStream.ln::Lucene#Net#QueryParsers#CharStream#ReadChar">
            <summary>设置 CharStream.ReadChar() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubCharStream.ReadChar">
            <summary>设置 CharStream.ReadChar() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser">
            <summary>Lucene.Net.QueryParsers.MultiFieldQueryParser 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.#ctor(System.String[],Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.#ctor(System.String[],Lucene.Net.Analysis.Analyzer,System.Collections.IDictionary)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.#ctor(Lucene.Net.Util.Version,System.String[],Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.#ctor(Lucene.Net.Util.Version,System.String[],Lucene.Net.Analysis.Analyzer,System.Collections.IDictionary)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.AddClause(System.Collections.Generic.IList{Lucene.Net.Search.BooleanClause},System.Int32,System.Int32,Lucene.Net.Search.Query)">
            <summary>设置 QueryParser.AddClause(IList`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.AddClause(System.Collections.Generic.List{Lucene.Net.Search.BooleanClause},System.Int32,System.Int32,Lucene.Net.Search.Query)">
            <summary>设置 QueryParser.AddClause(List`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.AddClauseIListOfBooleanClauseInt32Int32Query">
            <summary>设置 QueryParser.AddClause(IList`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.AddClauseListOfBooleanClauseInt32Int32Query">
            <summary>设置 QueryParser.AddClause(List`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GenerateParseException">
            <summary>设置 QueryParser.GenerateParseException() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GenerateParseException01">
            <summary>设置 QueryParser.GenerateParseException() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetAllowLeadingWildcard">
            <summary>设置 QueryParser.GetAllowLeadingWildcard() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetAllowLeadingWildcard01">
            <summary>设置 QueryParser.GetAllowLeadingWildcard() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetAnalyzer">
            <summary>设置 QueryParser.GetAnalyzer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetAnalyzer01">
            <summary>设置 QueryParser.GetAnalyzer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetBooleanQuery(System.Collections.Generic.IList{Lucene.Net.Search.BooleanClause})">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetBooleanQuery(System.Collections.Generic.List{Lucene.Net.Search.BooleanClause})">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetBooleanQuery(System.Collections.Generic.IList{Lucene.Net.Search.BooleanClause},System.Boolean)">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetBooleanQuery(System.Collections.Generic.List{Lucene.Net.Search.BooleanClause},System.Boolean)">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetBooleanQueryIListOfBooleanClause">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetBooleanQueryIListOfBooleanClauseBoolean">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetBooleanQueryListOfBooleanClause">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetBooleanQueryListOfBooleanClauseBoolean">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetDateResolution(System.String)">
            <summary>设置 QueryParser.GetDateResolution(String fieldName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetDateResolutionString">
            <summary>设置 QueryParser.GetDateResolution(String fieldName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetDefaultOperator">
            <summary>设置 QueryParser.GetDefaultOperator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetDefaultOperator01">
            <summary>设置 QueryParser.GetDefaultOperator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetEnablePositionIncrements">
            <summary>设置 QueryParser.GetEnablePositionIncrements() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetEnablePositionIncrements01">
            <summary>设置 QueryParser.GetEnablePositionIncrements() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetField">
            <summary>设置 QueryParser.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetField01">
            <summary>设置 QueryParser.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFieldQuery(System.String,System.String)">
            <summary>设置 MultiFieldQueryParser.GetFieldQuery(String field, String queryText) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFieldQuery(System.String,System.String,System.Int32)">
            <summary>设置 MultiFieldQueryParser.GetFieldQuery(String field, String queryText, Int32 slop) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFieldQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetFieldQuery(String field, String queryText) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFieldQueryStringStringInt32">
            <summary>设置 MultiFieldQueryParser.GetFieldQuery(String field, String queryText, Int32 slop) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFuzzyMinSim">
            <summary>设置 QueryParser.GetFuzzyMinSim() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFuzzyMinSim01">
            <summary>设置 QueryParser.GetFuzzyMinSim() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFuzzyPrefixLength">
            <summary>设置 QueryParser.GetFuzzyPrefixLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFuzzyPrefixLength01">
            <summary>设置 QueryParser.GetFuzzyPrefixLength() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFuzzyQuery(System.String,System.String,System.Single)">
            <summary>设置 MultiFieldQueryParser.GetFuzzyQuery(String field, String termStr, Single minSimilarity) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetFuzzyQueryStringStringSingle">
            <summary>设置 MultiFieldQueryParser.GetFuzzyQuery(String field, String termStr, Single minSimilarity) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetLowercaseExpandedTerms">
            <summary>设置 QueryParser.GetLowercaseExpandedTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetLowercaseExpandedTerms01">
            <summary>设置 QueryParser.GetLowercaseExpandedTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetMultiTermRewriteMethod">
            <summary>设置 QueryParser.GetMultiTermRewriteMethod() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetMultiTermRewriteMethod01">
            <summary>设置 QueryParser.GetMultiTermRewriteMethod() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetPhraseSlop">
            <summary>设置 QueryParser.GetPhraseSlop() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetPhraseSlop01">
            <summary>设置 QueryParser.GetPhraseSlop() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetPrefixQuery(System.String,System.String)">
            <summary>设置 MultiFieldQueryParser.GetPrefixQuery(String field, String termStr) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetPrefixQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetPrefixQuery(String field, String termStr) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetRangeQuery(System.String,System.String,System.String,System.Boolean)">
            <summary>设置 MultiFieldQueryParser.GetRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetRangeQueryStringStringStringBoolean">
            <summary>设置 MultiFieldQueryParser.GetRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetUseOldRangeQuery">
            <summary>设置 QueryParser.GetUseOldRangeQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetUseOldRangeQuery01">
            <summary>设置 QueryParser.GetUseOldRangeQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetWildcardQuery(System.String,System.String)">
            <summary>设置 MultiFieldQueryParser.GetWildcardQuery(String field, String termStr) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.GetWildcardQueryStringString">
            <summary>设置 MultiFieldQueryParser.GetWildcardQuery(String field, String termStr) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.InitializeStub">
            <summary>初始化 type StubMultiFieldQueryParser 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewBooleanClause(Lucene.Net.Search.Query,Lucene.Net.Search.BooleanClause.Occur)">
            <summary>设置 QueryParser.NewBooleanClause(Query q, Occur occur) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewBooleanClauseQueryBooleanClauseOccur">
            <summary>设置 QueryParser.NewBooleanClause(Query q, Occur occur) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewBooleanQuery(System.Boolean)">
            <summary>设置 QueryParser.NewBooleanQuery(Boolean disableCoord) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewBooleanQueryBoolean">
            <summary>设置 QueryParser.NewBooleanQuery(Boolean disableCoord) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewFuzzyQuery(Lucene.Net.Index.Term,System.Single,System.Int32)">
            <summary>设置 QueryParser.NewFuzzyQuery(Term term, Single minimumSimilarity, Int32 prefixLength) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewFuzzyQueryTermSingleInt32">
            <summary>设置 QueryParser.NewFuzzyQuery(Term term, Single minimumSimilarity, Int32 prefixLength) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewMatchAllDocsQuery">
            <summary>设置 QueryParser.NewMatchAllDocsQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewMatchAllDocsQuery01">
            <summary>设置 QueryParser.NewMatchAllDocsQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewMultiPhraseQuery">
            <summary>设置 QueryParser.NewMultiPhraseQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewMultiPhraseQuery01">
            <summary>设置 QueryParser.NewMultiPhraseQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewPhraseQuery">
            <summary>设置 QueryParser.NewPhraseQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewPhraseQuery01">
            <summary>设置 QueryParser.NewPhraseQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewPrefixQuery(Lucene.Net.Index.Term)">
            <summary>设置 QueryParser.NewPrefixQuery(Term prefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewPrefixQueryTerm">
            <summary>设置 QueryParser.NewPrefixQuery(Term prefix) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewRangeQuery(System.String,System.String,System.String,System.Boolean)">
            <summary>设置 QueryParser.NewRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewRangeQueryStringStringStringBoolean">
            <summary>设置 QueryParser.NewRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewTermQuery(Lucene.Net.Index.Term)">
            <summary>设置 QueryParser.NewTermQuery(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewTermQueryTerm">
            <summary>设置 QueryParser.NewTermQuery(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewWildcardQuery(Lucene.Net.Index.Term)">
            <summary>设置 QueryParser.NewWildcardQuery(Term t) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.NewWildcardQueryTerm">
            <summary>设置 QueryParser.NewWildcardQuery(Term t) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.ReInit(Lucene.Net.QueryParsers.CharStream)">
            <summary>设置 QueryParser.ReInit(CharStream stream) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.ReInit(Lucene.Net.QueryParsers.QueryParserTokenManager)">
            <summary>设置 QueryParser.ReInit(QueryParserTokenManager tm) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.ReInitCharStream">
            <summary>设置 QueryParser.ReInit(CharStream stream) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.ReInitQueryParserTokenManager">
            <summary>设置 QueryParser.ReInit(QueryParserTokenManager tm) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetAllowLeadingWildcard(System.Boolean)">
            <summary>设置 QueryParser.SetAllowLeadingWildcard(Boolean allowLeadingWildcard) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetAllowLeadingWildcardBoolean">
            <summary>设置 QueryParser.SetAllowLeadingWildcard(Boolean allowLeadingWildcard) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetDateResolution(Lucene.Net.Documents.DateTools.Resolution)">
            <summary>设置 QueryParser.SetDateResolution(Resolution dateResolution) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetDateResolution(System.String,Lucene.Net.Documents.DateTools.Resolution)">
            <summary>设置 QueryParser.SetDateResolution(String fieldName, Resolution dateResolution) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetDateResolutionDateToolsResolution">
            <summary>设置 QueryParser.SetDateResolution(Resolution dateResolution) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetDateResolutionStringDateToolsResolution">
            <summary>设置 QueryParser.SetDateResolution(String fieldName, Resolution dateResolution) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetDefaultOperator(Lucene.Net.QueryParsers.QueryParser.Operator)">
            <summary>设置 QueryParser.SetDefaultOperator(Operator op) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetDefaultOperatorQueryParserOperator">
            <summary>设置 QueryParser.SetDefaultOperator(Operator op) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetEnablePositionIncrements(System.Boolean)">
            <summary>设置 QueryParser.SetEnablePositionIncrements(Boolean enable) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetEnablePositionIncrementsBoolean">
            <summary>设置 QueryParser.SetEnablePositionIncrements(Boolean enable) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetFuzzyMinSim(System.Single)">
            <summary>设置 QueryParser.SetFuzzyMinSim(Single fuzzyMinSim) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetFuzzyMinSimSingle">
            <summary>设置 QueryParser.SetFuzzyMinSim(Single fuzzyMinSim) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetFuzzyPrefixLength(System.Int32)">
            <summary>设置 QueryParser.SetFuzzyPrefixLength(Int32 fuzzyPrefixLength) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetFuzzyPrefixLengthInt32">
            <summary>设置 QueryParser.SetFuzzyPrefixLength(Int32 fuzzyPrefixLength) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetLowercaseExpandedTerms(System.Boolean)">
            <summary>设置 QueryParser.SetLowercaseExpandedTerms(Boolean lowercaseExpandedTerms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetLowercaseExpandedTermsBoolean">
            <summary>设置 QueryParser.SetLowercaseExpandedTerms(Boolean lowercaseExpandedTerms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetMultiTermRewriteMethod(Lucene.Net.Search.MultiTermQuery.RewriteMethod)">
            <summary>设置 QueryParser.SetMultiTermRewriteMethod(RewriteMethod method) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetMultiTermRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 QueryParser.SetMultiTermRewriteMethod(RewriteMethod method) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetPhraseSlop(System.Int32)">
            <summary>设置 QueryParser.SetPhraseSlop(Int32 phraseSlop) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetPhraseSlopInt32">
            <summary>设置 QueryParser.SetPhraseSlop(Int32 phraseSlop) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetUseOldRangeQuery(System.Boolean)">
            <summary>设置 QueryParser.SetUseOldRangeQuery(Boolean useOldRangeQuery) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.SetUseOldRangeQueryBoolean">
            <summary>设置 QueryParser.SetUseOldRangeQuery(Boolean useOldRangeQuery) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubMultiFieldQueryParser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.StubParseException">
            <summary>Lucene.Net.QueryParsers.ParseException 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.#ctor(Lucene.Net.QueryParsers.Token,System.Int32[][],System.String[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.Add_escapes(System.String)">
            <summary>设置 ParseException.Add_escapes(String str) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.Add_escapesString">
            <summary>设置 ParseException.Add_escapes(String str) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubParseException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubParseException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.InitializeStub">
            <summary>初始化 type StubParseException 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.MessageGet">
            <summary>设置 ParseException.get_Message() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubParseException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubParseException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubParseException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubParseException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubParseException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubParseException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubParseException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubParseException.Message">
            <summary>设置 ParseException.get_Message() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubParseException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubParseException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.StubQueryParser">
            <summary>Lucene.Net.QueryParsers.QueryParser 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.#ctor(Lucene.Net.QueryParsers.CharStream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.#ctor(Lucene.Net.QueryParsers.QueryParserTokenManager)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.#ctor(System.String,Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.#ctor(Lucene.Net.Util.Version,System.String,Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.AddClause(System.Collections.Generic.IList{Lucene.Net.Search.BooleanClause},System.Int32,System.Int32,Lucene.Net.Search.Query)">
            <summary>设置 QueryParser.AddClause(IList`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.AddClause(System.Collections.Generic.List{Lucene.Net.Search.BooleanClause},System.Int32,System.Int32,Lucene.Net.Search.Query)">
            <summary>设置 QueryParser.AddClause(List`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.AddClauseIListOfBooleanClauseInt32Int32Query">
            <summary>设置 QueryParser.AddClause(IList`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.AddClauseListOfBooleanClauseInt32Int32Query">
            <summary>设置 QueryParser.AddClause(List`1&lt;BooleanClause&gt; clauses, Int32 conj, Int32 mods, Query q) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GenerateParseException">
            <summary>设置 QueryParser.GenerateParseException() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GenerateParseException01">
            <summary>设置 QueryParser.GenerateParseException() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetAllowLeadingWildcard">
            <summary>设置 QueryParser.GetAllowLeadingWildcard() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetAllowLeadingWildcard01">
            <summary>设置 QueryParser.GetAllowLeadingWildcard() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetAnalyzer">
            <summary>设置 QueryParser.GetAnalyzer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetAnalyzer01">
            <summary>设置 QueryParser.GetAnalyzer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetBooleanQuery(System.Collections.Generic.IList{Lucene.Net.Search.BooleanClause})">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetBooleanQuery(System.Collections.Generic.List{Lucene.Net.Search.BooleanClause})">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetBooleanQuery(System.Collections.Generic.IList{Lucene.Net.Search.BooleanClause},System.Boolean)">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetBooleanQuery(System.Collections.Generic.List{Lucene.Net.Search.BooleanClause},System.Boolean)">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetBooleanQueryIListOfBooleanClause">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetBooleanQueryIListOfBooleanClauseBoolean">
            <summary>设置 QueryParser.GetBooleanQuery(IList`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetBooleanQueryListOfBooleanClause">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetBooleanQueryListOfBooleanClauseBoolean">
            <summary>设置 QueryParser.GetBooleanQuery(List`1&lt;BooleanClause&gt; clauses, Boolean disableCoord) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetDateResolution(System.String)">
            <summary>设置 QueryParser.GetDateResolution(String fieldName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetDateResolutionString">
            <summary>设置 QueryParser.GetDateResolution(String fieldName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetDefaultOperator">
            <summary>设置 QueryParser.GetDefaultOperator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetDefaultOperator01">
            <summary>设置 QueryParser.GetDefaultOperator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetEnablePositionIncrements">
            <summary>设置 QueryParser.GetEnablePositionIncrements() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetEnablePositionIncrements01">
            <summary>设置 QueryParser.GetEnablePositionIncrements() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetField">
            <summary>设置 QueryParser.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetField01">
            <summary>设置 QueryParser.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFieldQuery(System.String,System.String)">
            <summary>设置 QueryParser.GetFieldQuery(String field, String queryText) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFieldQuery(System.String,System.String,System.Int32)">
            <summary>设置 QueryParser.GetFieldQuery(String field, String queryText, Int32 slop) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFieldQueryStringString">
            <summary>设置 QueryParser.GetFieldQuery(String field, String queryText) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFieldQueryStringStringInt32">
            <summary>设置 QueryParser.GetFieldQuery(String field, String queryText, Int32 slop) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFuzzyMinSim">
            <summary>设置 QueryParser.GetFuzzyMinSim() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFuzzyMinSim01">
            <summary>设置 QueryParser.GetFuzzyMinSim() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFuzzyPrefixLength">
            <summary>设置 QueryParser.GetFuzzyPrefixLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFuzzyPrefixLength01">
            <summary>设置 QueryParser.GetFuzzyPrefixLength() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFuzzyQuery(System.String,System.String,System.Single)">
            <summary>设置 QueryParser.GetFuzzyQuery(String field, String termStr, Single minSimilarity) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetFuzzyQueryStringStringSingle">
            <summary>设置 QueryParser.GetFuzzyQuery(String field, String termStr, Single minSimilarity) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetLowercaseExpandedTerms">
            <summary>设置 QueryParser.GetLowercaseExpandedTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetLowercaseExpandedTerms01">
            <summary>设置 QueryParser.GetLowercaseExpandedTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetMultiTermRewriteMethod">
            <summary>设置 QueryParser.GetMultiTermRewriteMethod() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetMultiTermRewriteMethod01">
            <summary>设置 QueryParser.GetMultiTermRewriteMethod() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetPhraseSlop">
            <summary>设置 QueryParser.GetPhraseSlop() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetPhraseSlop01">
            <summary>设置 QueryParser.GetPhraseSlop() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetPrefixQuery(System.String,System.String)">
            <summary>设置 QueryParser.GetPrefixQuery(String field, String termStr) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetPrefixQueryStringString">
            <summary>设置 QueryParser.GetPrefixQuery(String field, String termStr) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetRangeQuery(System.String,System.String,System.String,System.Boolean)">
            <summary>设置 QueryParser.GetRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetRangeQueryStringStringStringBoolean">
            <summary>设置 QueryParser.GetRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetUseOldRangeQuery">
            <summary>设置 QueryParser.GetUseOldRangeQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetUseOldRangeQuery01">
            <summary>设置 QueryParser.GetUseOldRangeQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetWildcardQuery(System.String,System.String)">
            <summary>设置 QueryParser.GetWildcardQuery(String field, String termStr) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.GetWildcardQueryStringString">
            <summary>设置 QueryParser.GetWildcardQuery(String field, String termStr) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.InitializeStub">
            <summary>初始化 type StubQueryParser 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewBooleanClause(Lucene.Net.Search.Query,Lucene.Net.Search.BooleanClause.Occur)">
            <summary>设置 QueryParser.NewBooleanClause(Query q, Occur occur) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewBooleanClauseQueryBooleanClauseOccur">
            <summary>设置 QueryParser.NewBooleanClause(Query q, Occur occur) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewBooleanQuery(System.Boolean)">
            <summary>设置 QueryParser.NewBooleanQuery(Boolean disableCoord) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewBooleanQueryBoolean">
            <summary>设置 QueryParser.NewBooleanQuery(Boolean disableCoord) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewFuzzyQuery(Lucene.Net.Index.Term,System.Single,System.Int32)">
            <summary>设置 QueryParser.NewFuzzyQuery(Term term, Single minimumSimilarity, Int32 prefixLength) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewFuzzyQueryTermSingleInt32">
            <summary>设置 QueryParser.NewFuzzyQuery(Term term, Single minimumSimilarity, Int32 prefixLength) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewMatchAllDocsQuery">
            <summary>设置 QueryParser.NewMatchAllDocsQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewMatchAllDocsQuery01">
            <summary>设置 QueryParser.NewMatchAllDocsQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewMultiPhraseQuery">
            <summary>设置 QueryParser.NewMultiPhraseQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewMultiPhraseQuery01">
            <summary>设置 QueryParser.NewMultiPhraseQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewPhraseQuery">
            <summary>设置 QueryParser.NewPhraseQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewPhraseQuery01">
            <summary>设置 QueryParser.NewPhraseQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewPrefixQuery(Lucene.Net.Index.Term)">
            <summary>设置 QueryParser.NewPrefixQuery(Term prefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewPrefixQueryTerm">
            <summary>设置 QueryParser.NewPrefixQuery(Term prefix) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewRangeQuery(System.String,System.String,System.String,System.Boolean)">
            <summary>设置 QueryParser.NewRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewRangeQueryStringStringStringBoolean">
            <summary>设置 QueryParser.NewRangeQuery(String field, String part1, String part2, Boolean inclusive) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewTermQuery(Lucene.Net.Index.Term)">
            <summary>设置 QueryParser.NewTermQuery(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewTermQueryTerm">
            <summary>设置 QueryParser.NewTermQuery(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewWildcardQuery(Lucene.Net.Index.Term)">
            <summary>设置 QueryParser.NewWildcardQuery(Term t) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.NewWildcardQueryTerm">
            <summary>设置 QueryParser.NewWildcardQuery(Term t) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.Parse(System.String)">
            <summary>设置 QueryParser.Parse(String query) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.ParseString">
            <summary>设置 QueryParser.Parse(String query) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.ReInit(Lucene.Net.QueryParsers.CharStream)">
            <summary>设置 QueryParser.ReInit(CharStream stream) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.ReInit(Lucene.Net.QueryParsers.QueryParserTokenManager)">
            <summary>设置 QueryParser.ReInit(QueryParserTokenManager tm) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.ReInitCharStream">
            <summary>设置 QueryParser.ReInit(CharStream stream) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.ReInitQueryParserTokenManager">
            <summary>设置 QueryParser.ReInit(QueryParserTokenManager tm) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetAllowLeadingWildcard(System.Boolean)">
            <summary>设置 QueryParser.SetAllowLeadingWildcard(Boolean allowLeadingWildcard) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetAllowLeadingWildcardBoolean">
            <summary>设置 QueryParser.SetAllowLeadingWildcard(Boolean allowLeadingWildcard) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetDateResolution(Lucene.Net.Documents.DateTools.Resolution)">
            <summary>设置 QueryParser.SetDateResolution(Resolution dateResolution) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetDateResolution(System.String,Lucene.Net.Documents.DateTools.Resolution)">
            <summary>设置 QueryParser.SetDateResolution(String fieldName, Resolution dateResolution) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetDateResolutionDateToolsResolution">
            <summary>设置 QueryParser.SetDateResolution(Resolution dateResolution) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetDateResolutionStringDateToolsResolution">
            <summary>设置 QueryParser.SetDateResolution(String fieldName, Resolution dateResolution) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetDefaultOperator(Lucene.Net.QueryParsers.QueryParser.Operator)">
            <summary>设置 QueryParser.SetDefaultOperator(Operator op) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetDefaultOperatorQueryParserOperator">
            <summary>设置 QueryParser.SetDefaultOperator(Operator op) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetEnablePositionIncrements(System.Boolean)">
            <summary>设置 QueryParser.SetEnablePositionIncrements(Boolean enable) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetEnablePositionIncrementsBoolean">
            <summary>设置 QueryParser.SetEnablePositionIncrements(Boolean enable) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetFuzzyMinSim(System.Single)">
            <summary>设置 QueryParser.SetFuzzyMinSim(Single fuzzyMinSim) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetFuzzyMinSimSingle">
            <summary>设置 QueryParser.SetFuzzyMinSim(Single fuzzyMinSim) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetFuzzyPrefixLength(System.Int32)">
            <summary>设置 QueryParser.SetFuzzyPrefixLength(Int32 fuzzyPrefixLength) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetFuzzyPrefixLengthInt32">
            <summary>设置 QueryParser.SetFuzzyPrefixLength(Int32 fuzzyPrefixLength) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetLowercaseExpandedTerms(System.Boolean)">
            <summary>设置 QueryParser.SetLowercaseExpandedTerms(Boolean lowercaseExpandedTerms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetLowercaseExpandedTermsBoolean">
            <summary>设置 QueryParser.SetLowercaseExpandedTerms(Boolean lowercaseExpandedTerms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetMultiTermRewriteMethod(Lucene.Net.Search.MultiTermQuery.RewriteMethod)">
            <summary>设置 QueryParser.SetMultiTermRewriteMethod(RewriteMethod method) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetMultiTermRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 QueryParser.SetMultiTermRewriteMethod(RewriteMethod method) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetPhraseSlop(System.Int32)">
            <summary>设置 QueryParser.SetPhraseSlop(Int32 phraseSlop) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetPhraseSlopInt32">
            <summary>设置 QueryParser.SetPhraseSlop(Int32 phraseSlop) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetUseOldRangeQuery(System.Boolean)">
            <summary>设置 QueryParser.SetUseOldRangeQuery(Boolean useOldRangeQuery) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParser.SetUseOldRangeQueryBoolean">
            <summary>设置 QueryParser.SetUseOldRangeQuery(Boolean useOldRangeQuery) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParser.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParser.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParser.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.StubQueryParserConstants">
            <summary>Lucene.Net.QueryParsers.QueryParserConstants 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserConstants.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserConstants.InitializeStub">
            <summary>初始化 type StubQueryParserConstants 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParserConstants.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParserConstants.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParserConstants.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager">
            <summary>Lucene.Net.QueryParsers.QueryParserTokenManager 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.#ctor(Lucene.Net.QueryParsers.CharStream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.#ctor(Lucene.Net.QueryParsers.CharStream,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.GetNextToken">
            <summary>设置 QueryParserTokenManager.GetNextToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.GetNextToken01">
            <summary>设置 QueryParserTokenManager.GetNextToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.InitializeStub">
            <summary>初始化 type StubQueryParserTokenManager 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.JjFillToken">
            <summary>设置 QueryParserTokenManager.JjFillToken() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.JjFillToken01">
            <summary>设置 QueryParserTokenManager.JjFillToken() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.ReInit(Lucene.Net.QueryParsers.CharStream)">
            <summary>设置 QueryParserTokenManager.ReInit(CharStream stream) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.ReInit(Lucene.Net.QueryParsers.CharStream,System.Int32)">
            <summary>设置 QueryParserTokenManager.ReInit(CharStream stream, Int32 lexState) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.ReInitCharStream">
            <summary>设置 QueryParserTokenManager.ReInit(CharStream stream) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.ReInitCharStreamInt32">
            <summary>设置 QueryParserTokenManager.ReInit(CharStream stream, Int32 lexState) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.SwitchTo(System.Int32)">
            <summary>设置 QueryParserTokenManager.SwitchTo(Int32 lexState) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.SwitchToInt32">
            <summary>设置 QueryParserTokenManager.SwitchTo(Int32 lexState) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubQueryParserTokenManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.StubToken">
            <summary>Lucene.Net.QueryParsers.Token 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubToken.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubToken.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubToken.#ctor(System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubToken.GetValue">
            <summary>设置 Token.GetValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubToken.GetValue01">
            <summary>设置 Token.GetValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubToken.InitializeStub">
            <summary>初始化 type StubToken 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubToken.ToString">
            <summary>设置 Token.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubToken.ToString01">
            <summary>设置 Token.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubToken.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubToken.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubToken.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError">
            <summary>Lucene.Net.QueryParsers.TokenMgrError 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.#ctor(System.Boolean,System.Int32,System.Int32,System.Int32,System.String,System.Char,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubTokenMgrError.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.AttachBackingFieldToSource">
            <summary>附加委托以将 StubTokenMgrError.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.InitializeStub">
            <summary>初始化 type StubTokenMgrError 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.MessageGet">
            <summary>设置 TokenMgrError.get_Message() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.Message">
            <summary>设置 TokenMgrError.get_Message() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.QueryParsers.Fakes.StubTokenMgrError.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanClause">
            <summary>Lucene.Net.Search.BooleanClause 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanClause.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanClause.#ctor(Lucene.Net.Search.BooleanClause)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanClause.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanClause.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.ConstructorQueryBooleanClauseOccur">
            <summary>设置 BooleanClause.BooleanClause(Query query, Occur occur) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.EqualsObject">
            <summary>设置 BooleanClause.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.GetHashCode">
            <summary>设置 BooleanClause.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.GetOccur">
            <summary>设置 BooleanClause.GetOccur() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.GetQuery">
            <summary>设置 BooleanClause.GetQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.IsProhibited">
            <summary>设置 BooleanClause.IsProhibited() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.IsRequired">
            <summary>设置 BooleanClause.IsRequired() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.SetOccurBooleanClauseOccur">
            <summary>设置 BooleanClause.SetOccur(Occur occur) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.SetQueryQuery">
            <summary>设置 BooleanClause.SetQuery(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.ToString">
            <summary>设置 BooleanClause.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.EqualsObject">
            <summary>设置 BooleanClause.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.GetHashCode01">
            <summary>设置 BooleanClause.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.GetOccur">
            <summary>设置 BooleanClause.GetOccur() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.GetQuery">
            <summary>设置 BooleanClause.GetQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.IsProhibited">
            <summary>设置 BooleanClause.IsProhibited() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.IsRequired">
            <summary>设置 BooleanClause.IsRequired() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.SetOccurBooleanClauseOccur">
            <summary>设置 BooleanClause.SetOccur(Occur occur) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.SetQueryQuery">
            <summary>设置 BooleanClause.SetQuery(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.AllInstances.ToString01">
            <summary>设置 BooleanClause.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur">
            <summary>Lucene.Net.Search.BooleanClause+Occur 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.#ctor(Lucene.Net.Search.BooleanClause.Occur)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.ConstructorString">
            <summary>设置 Occur.Occur(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.StaticConstructor">
            <summary>设置 Occur.Occur() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.ToString">
            <summary>设置 Occur.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanClause.ShimOccur.AllInstances.ToString01">
            <summary>设置 Occur.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanQuery">
            <summary>Lucene.Net.Search.BooleanQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.#ctor(Lucene.Net.Search.BooleanQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AddBooleanClause">
            <summary>设置 BooleanQuery.Add(BooleanClause clause) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AddQueryBooleanClauseOccur">
            <summary>设置 BooleanQuery.Add(Query query, Occur occur) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.Clauses">
            <summary>设置 BooleanQuery.Clauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.Clone">
            <summary>设置 BooleanQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.Constructor">
            <summary>设置 BooleanQuery.BooleanQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.ConstructorBoolean">
            <summary>设置 BooleanQuery.BooleanQuery(Boolean disableCoord) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.CreateWeightSearcher">
            <summary>设置 BooleanQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.EqualsObject">
            <summary>设置 BooleanQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 BooleanQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.GetAllowDocsOutOfOrder">
            <summary>设置 BooleanQuery.GetAllowDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.GetClauses">
            <summary>设置 BooleanQuery.GetClauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.GetHashCode">
            <summary>设置 BooleanQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.GetMaxClauseCount">
            <summary>设置 BooleanQuery.GetMaxClauseCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.GetMinimumNumberShouldMatch">
            <summary>设置 BooleanQuery.GetMinimumNumberShouldMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.GetSimilaritySearcher">
            <summary>设置 BooleanQuery.GetSimilarity(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.GetUseScorer14">
            <summary>设置 BooleanQuery.GetUseScorer14() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.IsCoordDisabled">
            <summary>设置 BooleanQuery.IsCoordDisabled() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.RewriteIndexReader">
            <summary>设置 BooleanQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.SetAllowDocsOutOfOrderBoolean">
            <summary>设置 BooleanQuery.SetAllowDocsOutOfOrder(Boolean allow) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.SetMaxClauseCountInt32">
            <summary>设置 BooleanQuery.SetMaxClauseCount(Int32 maxClauseCount) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.SetMinimumNumberShouldMatchInt32">
            <summary>设置 BooleanQuery.SetMinimumNumberShouldMatch(Int32 min) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.SetUseScorer14Boolean">
            <summary>设置 BooleanQuery.SetUseScorer14(Boolean use14) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.StaticConstructor">
            <summary>设置 BooleanQuery.BooleanQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.ToStringString">
            <summary>设置 BooleanQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.AddBooleanClause">
            <summary>设置 BooleanQuery.Add(BooleanClause clause) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.AddQueryBooleanClauseOccur">
            <summary>设置 BooleanQuery.Add(Query query, Occur occur) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.Clauses">
            <summary>设置 BooleanQuery.Clauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.Clone">
            <summary>设置 BooleanQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 BooleanQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.EqualsObject">
            <summary>设置 BooleanQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 BooleanQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.GetClauses">
            <summary>设置 BooleanQuery.GetClauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.GetHashCode01">
            <summary>设置 BooleanQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.GetMinimumNumberShouldMatch">
            <summary>设置 BooleanQuery.GetMinimumNumberShouldMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.GetSimilaritySearcher">
            <summary>设置 BooleanQuery.GetSimilarity(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.IsCoordDisabled">
            <summary>设置 BooleanQuery.IsCoordDisabled() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.RewriteIndexReader">
            <summary>设置 BooleanQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.SetMinimumNumberShouldMatchInt32">
            <summary>设置 BooleanQuery.SetMinimumNumberShouldMatch(Int32 min) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.AllInstances.ToStringString">
            <summary>设置 BooleanQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses">
            <summary>Lucene.Net.Search.BooleanQuery+TooManyClauses 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.#ctor(Lucene.Net.Search.BooleanQuery.TooManyClauses)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.Constructor">
            <summary>设置 TooManyClauses.TooManyClauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.MessageGet">
            <summary>设置 TooManyClauses.get_Message() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanQuery.ShimTooManyClauses.AllInstances.MessageGet">
            <summary>设置 TooManyClauses.get_Message() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanScorer">
            <summary>Lucene.Net.Search.BooleanScorer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanScorer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanScorer.#ctor(Lucene.Net.Search.BooleanScorer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanScorer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimBooleanScorer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AdvanceInt32">
            <summary>设置 BooleanScorer.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.ConstructorSimilarityInt32IListIList">
            <summary>设置 BooleanScorer.BooleanScorer(Similarity similarity, Int32 minNrShouldMatch, IList optionalScorers, IList prohibitedScorers) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.Doc">
            <summary>设置 BooleanScorer.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.DocID">
            <summary>设置 BooleanScorer.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.ExplainInt32">
            <summary>设置 BooleanScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.InitBlock">
            <summary>设置 BooleanScorer.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.Next">
            <summary>设置 BooleanScorer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.NextDoc">
            <summary>设置 BooleanScorer.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.Score">
            <summary>设置 BooleanScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.ScoreCollector">
            <summary>设置 BooleanScorer.Score(Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.ScoreCollectorInt32Int32">
            <summary>设置 BooleanScorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.ScoreHitCollector">
            <summary>设置 BooleanScorer.Score(HitCollector hc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.ScoreHitCollectorInt32">
            <summary>设置 BooleanScorer.Score(HitCollector hc, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.SkipToInt32">
            <summary>设置 BooleanScorer.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.ToString">
            <summary>设置 BooleanScorer.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.AdvanceInt32">
            <summary>设置 BooleanScorer.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.Doc">
            <summary>设置 BooleanScorer.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.DocID">
            <summary>设置 BooleanScorer.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.ExplainInt32">
            <summary>设置 BooleanScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.InitBlock">
            <summary>设置 BooleanScorer.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.Next">
            <summary>设置 BooleanScorer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.NextDoc">
            <summary>设置 BooleanScorer.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.Score">
            <summary>设置 BooleanScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.ScoreCollector">
            <summary>设置 BooleanScorer.Score(Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.ScoreCollectorInt32Int32">
            <summary>设置 BooleanScorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.ScoreHitCollector">
            <summary>设置 BooleanScorer.Score(HitCollector hc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.ScoreHitCollectorInt32">
            <summary>设置 BooleanScorer.Score(HitCollector hc, Int32 max) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.SkipToInt32">
            <summary>设置 BooleanScorer.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimBooleanScorer.AllInstances.ToString01">
            <summary>设置 BooleanScorer.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCacheEntry">
            <summary>Lucene.Net.Search.CacheEntry 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCacheEntry.#ctor(Lucene.Net.Search.CacheEntry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCacheEntry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCacheEntry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.Constructor">
            <summary>设置 CacheEntry.CacheEntry() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.EstimateSize">
            <summary>设置 CacheEntry.EstimateSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.EstimateSizeRamUsageEstimator">
            <summary>设置 CacheEntry.EstimateSize(RamUsageEstimator ramCalc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.GetEstimatedSize">
            <summary>设置 CacheEntry.GetEstimatedSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.SetEstimatedSizeString">
            <summary>设置 CacheEntry.SetEstimatedSize(String size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.ToString">
            <summary>设置 CacheEntry.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCacheEntry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.AllInstances.EstimateSize">
            <summary>设置 CacheEntry.EstimateSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.AllInstances.EstimateSizeRamUsageEstimator">
            <summary>设置 CacheEntry.EstimateSize(RamUsageEstimator ramCalc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.AllInstances.GetEstimatedSize">
            <summary>设置 CacheEntry.GetEstimatedSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.AllInstances.SetEstimatedSizeString">
            <summary>设置 CacheEntry.SetEstimatedSize(String size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCacheEntry.AllInstances.ToString01">
            <summary>设置 CacheEntry.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCachingSpanFilter">
            <summary>Lucene.Net.Search.CachingSpanFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.#ctor(Lucene.Net.Search.CachingSpanFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.BitSpansIndexReader">
            <summary>设置 CachingSpanFilter.BitSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.ConstructorSpanFilter">
            <summary>设置 CachingSpanFilter.CachingSpanFilter(SpanFilter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.ConstructorSpanFilterCachingWrapperFilterDeletesMode">
            <summary>设置 CachingSpanFilter.CachingSpanFilter(SpanFilter filter, DeletesMode deletesMode) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.EqualsObject">
            <summary>设置 CachingSpanFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.GetCachedResultIndexReader">
            <summary>设置 CachingSpanFilter.GetCachedResult(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.GetDocIdSetIndexReader">
            <summary>设置 CachingSpanFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.GetHashCode">
            <summary>设置 CachingSpanFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.ToString">
            <summary>设置 CachingSpanFilter.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter._ctorb__0IndexReaderObject">
            <summary>设置 CachingSpanFilter.&lt;.ctor&gt;b__0(IndexReader r, Object value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.AllInstances.BitSpansIndexReader">
            <summary>设置 CachingSpanFilter.BitSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.AllInstances.EqualsObject">
            <summary>设置 CachingSpanFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.AllInstances.GetCachedResultIndexReader">
            <summary>设置 CachingSpanFilter.GetCachedResult(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.AllInstances.GetDocIdSetIndexReader">
            <summary>设置 CachingSpanFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.AllInstances.GetHashCode01">
            <summary>设置 CachingSpanFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingSpanFilter.AllInstances.ToString01">
            <summary>设置 CachingSpanFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter">
            <summary>Lucene.Net.Search.CachingWrapperFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.#ctor(Lucene.Net.Search.CachingWrapperFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ConstructorFilter">
            <summary>设置 CachingWrapperFilter.CachingWrapperFilter(Filter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ConstructorFilterCachingWrapperFilterDeletesMode">
            <summary>设置 CachingWrapperFilter.CachingWrapperFilter(Filter filter, DeletesMode deletesMode) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.DocIdSetToCacheDocIdSetIndexReader">
            <summary>设置 CachingWrapperFilter.DocIdSetToCache(DocIdSet docIdSet, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.EqualsObject">
            <summary>设置 CachingWrapperFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.GetDocIdSetIndexReader">
            <summary>设置 CachingWrapperFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.GetHashCode">
            <summary>设置 CachingWrapperFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ToString">
            <summary>设置 CachingWrapperFilter.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter._ctorb__0IndexReaderObject">
            <summary>设置 CachingWrapperFilter.&lt;.ctor&gt;b__0(IndexReader reader, Object docIdSet) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.AllInstances.DocIdSetToCacheDocIdSetIndexReader">
            <summary>设置 CachingWrapperFilter.DocIdSetToCache(DocIdSet docIdSet, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.AllInstances.EqualsObject">
            <summary>设置 CachingWrapperFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.AllInstances.GetDocIdSetIndexReader">
            <summary>设置 CachingWrapperFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.AllInstances.GetHashCode01">
            <summary>设置 CachingWrapperFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.AllInstances.ToString01">
            <summary>设置 CachingWrapperFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode">
            <summary>Lucene.Net.Search.CachingWrapperFilter+DeletesMode 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode.#ctor(Lucene.Net.Search.CachingWrapperFilter.DeletesMode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode.ConstructorString">
            <summary>设置 DeletesMode.DeletesMode(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode.StaticConstructor">
            <summary>设置 DeletesMode.DeletesMode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCachingWrapperFilter.ShimDeletesMode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCollector">
            <summary>Lucene.Net.Search.Collector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCollector.#ctor(Lucene.Net.Search.Collector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCollector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCollector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCollector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCollector.Constructor">
            <summary>设置 Collector.Collector() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCollector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimComplexExplanation">
            <summary>Lucene.Net.Search.ComplexExplanation 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimComplexExplanation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimComplexExplanation.#ctor(Lucene.Net.Search.ComplexExplanation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimComplexExplanation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimComplexExplanation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.Constructor">
            <summary>设置 ComplexExplanation.ComplexExplanation() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.ConstructorBooleanSingleString">
            <summary>设置 ComplexExplanation.ComplexExplanation(Boolean match, Single value_Renamed, String description) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.GetMatch">
            <summary>设置 ComplexExplanation.GetMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.GetSummary">
            <summary>设置 ComplexExplanation.GetSummary() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.IsMatch">
            <summary>设置 ComplexExplanation.IsMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.SetMatchNullableOfBoolean">
            <summary>设置 ComplexExplanation.SetMatch(Nullable`1&lt;Boolean&gt; match) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimComplexExplanation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.AllInstances.GetMatch">
            <summary>设置 ComplexExplanation.GetMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.AllInstances.GetSummary">
            <summary>设置 ComplexExplanation.GetSummary() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.AllInstances.IsMatch">
            <summary>设置 ComplexExplanation.IsMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimComplexExplanation.AllInstances.SetMatchNullableOfBoolean">
            <summary>设置 ComplexExplanation.SetMatch(Nullable`1&lt;Boolean&gt; match) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimConstantScoreQuery">
            <summary>Lucene.Net.Search.ConstantScoreQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.#ctor(Lucene.Net.Search.ConstantScoreQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.Clone">
            <summary>设置 ConstantScoreQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.ConstructorFilter">
            <summary>设置 ConstantScoreQuery.ConstantScoreQuery(Filter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.CreateWeightSearcher">
            <summary>设置 ConstantScoreQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.EqualsObject">
            <summary>设置 ConstantScoreQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 ConstantScoreQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.GetFilter">
            <summary>设置 ConstantScoreQuery.GetFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.GetHashCode">
            <summary>设置 ConstantScoreQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.RewriteIndexReader">
            <summary>设置 ConstantScoreQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.ToStringString">
            <summary>设置 ConstantScoreQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances.Clone">
            <summary>设置 ConstantScoreQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 ConstantScoreQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances.EqualsObject">
            <summary>设置 ConstantScoreQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 ConstantScoreQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances.GetFilter">
            <summary>设置 ConstantScoreQuery.GetFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances.GetHashCode01">
            <summary>设置 ConstantScoreQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances.RewriteIndexReader">
            <summary>设置 ConstantScoreQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimConstantScoreQuery.AllInstances.ToStringString">
            <summary>设置 ConstantScoreQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCreationPlaceholder">
            <summary>Lucene.Net.Search.CreationPlaceholder 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCreationPlaceholder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCreationPlaceholder.#ctor(Lucene.Net.Search.CreationPlaceholder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCreationPlaceholder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimCreationPlaceholder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCreationPlaceholder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimCreationPlaceholder.Constructor">
            <summary>设置 CreationPlaceholder.CreationPlaceholder() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimCreationPlaceholder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimDefaultSimilarity">
            <summary>Lucene.Net.Search.DefaultSimilarity 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.#ctor(Lucene.Net.Search.DefaultSimilarity)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.ComputeNormStringFieldInvertState">
            <summary>设置 DefaultSimilarity.ComputeNorm(String field, FieldInvertState state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.Constructor">
            <summary>设置 DefaultSimilarity.DefaultSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.CoordInt32Int32">
            <summary>设置 DefaultSimilarity.Coord(Int32 overlap, Int32 maxOverlap) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.GetDiscountOverlaps">
            <summary>设置 DefaultSimilarity.GetDiscountOverlaps() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.IdfInt32Int32">
            <summary>设置 DefaultSimilarity.Idf(Int32 docFreq, Int32 numDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.LengthNormStringInt32">
            <summary>设置 DefaultSimilarity.LengthNorm(String fieldName, Int32 numTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.QueryNormSingle">
            <summary>设置 DefaultSimilarity.QueryNorm(Single sumOfSquaredWeights) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.SetDiscountOverlapsBoolean">
            <summary>设置 DefaultSimilarity.SetDiscountOverlaps(Boolean v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.SloppyFreqInt32">
            <summary>设置 DefaultSimilarity.SloppyFreq(Int32 distance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.TfSingle">
            <summary>设置 DefaultSimilarity.Tf(Single freq) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.ComputeNormStringFieldInvertState">
            <summary>设置 DefaultSimilarity.ComputeNorm(String field, FieldInvertState state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.CoordInt32Int32">
            <summary>设置 DefaultSimilarity.Coord(Int32 overlap, Int32 maxOverlap) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.GetDiscountOverlaps">
            <summary>设置 DefaultSimilarity.GetDiscountOverlaps() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.IdfInt32Int32">
            <summary>设置 DefaultSimilarity.Idf(Int32 docFreq, Int32 numDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.LengthNormStringInt32">
            <summary>设置 DefaultSimilarity.LengthNorm(String fieldName, Int32 numTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.QueryNormSingle">
            <summary>设置 DefaultSimilarity.QueryNorm(Single sumOfSquaredWeights) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.SetDiscountOverlapsBoolean">
            <summary>设置 DefaultSimilarity.SetDiscountOverlaps(Boolean v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.SloppyFreqInt32">
            <summary>设置 DefaultSimilarity.SloppyFreq(Int32 distance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDefaultSimilarity.AllInstances.TfSingle">
            <summary>设置 DefaultSimilarity.Tf(Single freq) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery">
            <summary>Lucene.Net.Search.DisjunctionMaxQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.#ctor(Lucene.Net.Search.DisjunctionMaxQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AddIListOfQuery">
            <summary>设置 DisjunctionMaxQuery.Add(IList`1&lt;Query&gt; disjuncts) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AddQuery">
            <summary>设置 DisjunctionMaxQuery.Add(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.Clone">
            <summary>设置 DisjunctionMaxQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.ConstructorIListOfQuerySingle">
            <summary>设置 DisjunctionMaxQuery.DisjunctionMaxQuery(IList`1&lt;Query&gt; disjuncts, Single tieBreakerMultiplier) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.ConstructorSingle">
            <summary>设置 DisjunctionMaxQuery.DisjunctionMaxQuery(Single tieBreakerMultiplier) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.CreateWeightSearcher">
            <summary>设置 DisjunctionMaxQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.EqualsObject">
            <summary>设置 DisjunctionMaxQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 DisjunctionMaxQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.GetHashCode">
            <summary>设置 DisjunctionMaxQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.Iterator">
            <summary>设置 DisjunctionMaxQuery.Iterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.RewriteIndexReader">
            <summary>设置 DisjunctionMaxQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.ToStringString">
            <summary>设置 DisjunctionMaxQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.AddIListOfQuery">
            <summary>设置 DisjunctionMaxQuery.Add(IList`1&lt;Query&gt; disjuncts) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.AddQuery">
            <summary>设置 DisjunctionMaxQuery.Add(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.Clone">
            <summary>设置 DisjunctionMaxQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 DisjunctionMaxQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.EqualsObject">
            <summary>设置 DisjunctionMaxQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 DisjunctionMaxQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.GetHashCode01">
            <summary>设置 DisjunctionMaxQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.Iterator">
            <summary>设置 DisjunctionMaxQuery.Iterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.RewriteIndexReader">
            <summary>设置 DisjunctionMaxQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDisjunctionMaxQuery.AllInstances.ToStringString">
            <summary>设置 DisjunctionMaxQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimDocIdSet">
            <summary>Lucene.Net.Search.DocIdSet 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDocIdSet.#ctor(Lucene.Net.Search.DocIdSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDocIdSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDocIdSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSet.Constructor">
            <summary>设置 DocIdSet.DocIdSet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSet.IsCacheable">
            <summary>设置 DocIdSet.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSet.StaticConstructor">
            <summary>设置 DocIdSet.DocIdSet() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimDocIdSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSet.AllInstances.IsCacheable">
            <summary>设置 DocIdSet.IsCacheable() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimDocIdSetIterator">
            <summary>Lucene.Net.Search.DocIdSetIterator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.#ctor(Lucene.Net.Search.DocIdSetIterator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.AdvanceInt32">
            <summary>设置 DocIdSetIterator.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.Constructor">
            <summary>设置 DocIdSetIterator.DocIdSetIterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.Doc">
            <summary>设置 DocIdSetIterator.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.DocID">
            <summary>设置 DocIdSetIterator.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.Next">
            <summary>设置 DocIdSetIterator.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.NextDoc">
            <summary>设置 DocIdSetIterator.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.SkipToInt32">
            <summary>设置 DocIdSetIterator.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.StaticConstructor">
            <summary>设置 DocIdSetIterator.DocIdSetIterator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.AllInstances.AdvanceInt32">
            <summary>设置 DocIdSetIterator.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.AllInstances.Doc">
            <summary>设置 DocIdSetIterator.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.AllInstances.DocID">
            <summary>设置 DocIdSetIterator.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.AllInstances.Next">
            <summary>设置 DocIdSetIterator.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.AllInstances.NextDoc">
            <summary>设置 DocIdSetIterator.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimDocIdSetIterator.AllInstances.SkipToInt32">
            <summary>设置 DocIdSetIterator.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimExplanation">
            <summary>Lucene.Net.Search.Explanation 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimExplanation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimExplanation.#ctor(Lucene.Net.Search.Explanation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimExplanation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimExplanation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AddDetailExplanation">
            <summary>设置 Explanation.AddDetail(Explanation detail) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.Constructor">
            <summary>设置 Explanation.Explanation() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.ConstructorSingleString">
            <summary>设置 Explanation.Explanation(Single value_Renamed, String description) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.GetDescription">
            <summary>设置 Explanation.GetDescription() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.GetDetails">
            <summary>设置 Explanation.GetDetails() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.GetSummary">
            <summary>设置 Explanation.GetSummary() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.GetValue">
            <summary>设置 Explanation.GetValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.IsMatch">
            <summary>设置 Explanation.IsMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.SetDescriptionString">
            <summary>设置 Explanation.SetDescription(String description) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.SetValueSingle">
            <summary>设置 Explanation.SetValue(Single value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.ToHtml">
            <summary>设置 Explanation.ToHtml() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.ToString">
            <summary>设置 Explanation.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.ToStringInt32">
            <summary>设置 Explanation.ToString(Int32 depth) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.AddDetailExplanation">
            <summary>设置 Explanation.AddDetail(Explanation detail) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.GetDescription">
            <summary>设置 Explanation.GetDescription() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.GetDetails">
            <summary>设置 Explanation.GetDetails() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.GetSummary">
            <summary>设置 Explanation.GetSummary() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.GetValue">
            <summary>设置 Explanation.GetValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.IsMatch">
            <summary>设置 Explanation.IsMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.SetDescriptionString">
            <summary>设置 Explanation.SetDescription(String description) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.SetValueSingle">
            <summary>设置 Explanation.SetValue(Single value_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.ToHtml">
            <summary>设置 Explanation.ToHtml() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.ToString01">
            <summary>设置 Explanation.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.AllInstances.ToStringInt32">
            <summary>设置 Explanation.ToString(Int32 depth) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimExplanation.ShimIDFExplanation">
            <summary>Lucene.Net.Search.Explanation+IDFExplanation 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimExplanation.ShimIDFExplanation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimExplanation.ShimIDFExplanation.#ctor(Lucene.Net.Search.Explanation.IDFExplanation)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimExplanation.ShimIDFExplanation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimExplanation.ShimIDFExplanation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.ShimIDFExplanation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimExplanation.ShimIDFExplanation.Constructor">
            <summary>设置 IDFExplanation.IDFExplanation() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimExplanation.ShimIDFExplanation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter">
            <summary>Lucene.Net.Search.FieldCacheRangeFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.#ctor(Lucene.Net.Search.FieldCacheRangeFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.ConstructorStringParserObjectObjectBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.FieldCacheRangeFilter(String field, Parser parser, Object lowerVal, Object upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.EqualsObject">
            <summary>设置 FieldCacheRangeFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.GetHashCode">
            <summary>设置 FieldCacheRangeFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewByteRangeStringByteByteBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewByteRange(String field, Byte lowerVal, Byte upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewByteRangeStringByteParserByteByteBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewByteRange(String field, ByteParser parser, Byte lowerVal, Byte upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewDoubleRangeStringDoubleParserValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewDoubleRange(String field, DoubleParser parser, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewDoubleRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewDoubleRange(String field, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewFloatRangeStringFloatParserValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewFloatRange(String field, FloatParser parser, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewFloatRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewFloatRange(String field, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewIntRangeStringIntParserValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewIntRange(String field, IntParser parser, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewIntRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewIntRange(String field, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewLongRangeStringLongParserValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewLongRange(String field, LongParser parser, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewLongRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewLongRange(String field, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewShortRangeStringShortParserValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewShortRange(String field, ShortParser parser, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewShortRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewShortRange(String field, ValueType lowerVal, ValueType upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.NewStringRangeStringStringStringBooleanBoolean">
            <summary>设置 FieldCacheRangeFilter.NewStringRange(String field, String lowerVal, String upperVal, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.ToString">
            <summary>设置 FieldCacheRangeFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.AllInstances.EqualsObject">
            <summary>设置 FieldCacheRangeFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.AllInstances.GetHashCode01">
            <summary>设置 FieldCacheRangeFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheRangeFilter.AllInstances.ToString01">
            <summary>设置 FieldCacheRangeFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter">
            <summary>Lucene.Net.Search.FieldCacheTermsFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.#ctor(Lucene.Net.Search.FieldCacheTermsFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.ConstructorStringStringArray">
            <summary>设置 FieldCacheTermsFilter.FieldCacheTermsFilter(String field, String[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.GetDocIdSetIndexReader">
            <summary>设置 FieldCacheTermsFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.GetFieldCache">
            <summary>设置 FieldCacheTermsFilter.GetFieldCache() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.AllInstances.GetDocIdSetIndexReader">
            <summary>设置 FieldCacheTermsFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCacheTermsFilter.AllInstances.GetFieldCache">
            <summary>设置 FieldCacheTermsFilter.GetFieldCache() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldCache_Fields">
            <summary>Lucene.Net.Search.FieldCache_Fields 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCache_Fields.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCache_Fields.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldCache_Fields.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCache_Fields.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldCache_Fields.StaticConstructor">
            <summary>设置 FieldCache_Fields.FieldCache_Fields() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldCache_Fields.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator">
            <summary>Lucene.Net.Search.FieldComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.#ctor(Lucene.Net.Search.FieldComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.BinarySearchStringArrayString">
            <summary>设置 FieldComparator.BinarySearch(String[] a, String key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.BinarySearchStringArrayStringInt32Int32">
            <summary>设置 FieldComparator.BinarySearch(String[] a, String key, Int32 low, Int32 high) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.Constructor">
            <summary>设置 FieldComparator.FieldComparator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.SetScorerScorer">
            <summary>设置 FieldComparator.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.AllInstances.SetScorerScorer">
            <summary>设置 FieldComparator.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator">
            <summary>Lucene.Net.Search.FieldComparator+ByteComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.#ctor(Lucene.Net.Search.FieldComparator.ByteComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.CompareBottomInt32">
            <summary>设置 ByteComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.CompareInt32Int32">
            <summary>设置 ByteComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.ConstructorInt32StringParser">
            <summary>设置 ByteComparator.ByteComparator(Int32 numHits, String field, Parser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.CopyInt32Int32">
            <summary>设置 ByteComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.SetBottomInt32">
            <summary>设置 ByteComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 ByteComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.ValueInt32">
            <summary>设置 ByteComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.AllInstances.CompareBottomInt32">
            <summary>设置 ByteComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.AllInstances.CompareInt32Int32">
            <summary>设置 ByteComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.AllInstances.CopyInt32Int32">
            <summary>设置 ByteComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.AllInstances.SetBottomInt32">
            <summary>设置 ByteComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 ByteComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimByteComparator.AllInstances.ValueInt32">
            <summary>设置 ByteComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator">
            <summary>Lucene.Net.Search.FieldComparator+DocComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.#ctor(Lucene.Net.Search.FieldComparator.DocComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.CompareBottomInt32">
            <summary>设置 DocComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.CompareInt32Int32">
            <summary>设置 DocComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.ConstructorInt32">
            <summary>设置 DocComparator.DocComparator(Int32 numHits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.CopyInt32Int32">
            <summary>设置 DocComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.SetBottomInt32">
            <summary>设置 DocComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 DocComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.ValueInt32">
            <summary>设置 DocComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.AllInstances.CompareBottomInt32">
            <summary>设置 DocComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.AllInstances.CompareInt32Int32">
            <summary>设置 DocComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.AllInstances.CopyInt32Int32">
            <summary>设置 DocComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.AllInstances.SetBottomInt32">
            <summary>设置 DocComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 DocComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDocComparator.AllInstances.ValueInt32">
            <summary>设置 DocComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator">
            <summary>Lucene.Net.Search.FieldComparator+DoubleComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.#ctor(Lucene.Net.Search.FieldComparator.DoubleComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.CompareBottomInt32">
            <summary>设置 DoubleComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.CompareInt32Int32">
            <summary>设置 DoubleComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.ConstructorInt32StringParser">
            <summary>设置 DoubleComparator.DoubleComparator(Int32 numHits, String field, Parser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.CopyInt32Int32">
            <summary>设置 DoubleComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.SetBottomInt32">
            <summary>设置 DoubleComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 DoubleComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.ValueInt32">
            <summary>设置 DoubleComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.AllInstances.CompareBottomInt32">
            <summary>设置 DoubleComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.AllInstances.CompareInt32Int32">
            <summary>设置 DoubleComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.AllInstances.CopyInt32Int32">
            <summary>设置 DoubleComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.AllInstances.SetBottomInt32">
            <summary>设置 DoubleComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 DoubleComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimDoubleComparator.AllInstances.ValueInt32">
            <summary>设置 DoubleComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator">
            <summary>Lucene.Net.Search.FieldComparator+FloatComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.#ctor(Lucene.Net.Search.FieldComparator.FloatComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.CompareBottomInt32">
            <summary>设置 FloatComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.CompareInt32Int32">
            <summary>设置 FloatComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.ConstructorInt32StringParser">
            <summary>设置 FloatComparator.FloatComparator(Int32 numHits, String field, Parser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.CopyInt32Int32">
            <summary>设置 FloatComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.SetBottomInt32">
            <summary>设置 FloatComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 FloatComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.ValueInt32">
            <summary>设置 FloatComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.AllInstances.CompareBottomInt32">
            <summary>设置 FloatComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.AllInstances.CompareInt32Int32">
            <summary>设置 FloatComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.AllInstances.CopyInt32Int32">
            <summary>设置 FloatComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.AllInstances.SetBottomInt32">
            <summary>设置 FloatComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 FloatComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimFloatComparator.AllInstances.ValueInt32">
            <summary>设置 FloatComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator">
            <summary>Lucene.Net.Search.FieldComparator+IntComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.#ctor(Lucene.Net.Search.FieldComparator.IntComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.CompareBottomInt32">
            <summary>设置 IntComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.CompareInt32Int32">
            <summary>设置 IntComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.ConstructorInt32StringParser">
            <summary>设置 IntComparator.IntComparator(Int32 numHits, String field, Parser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.CopyInt32Int32">
            <summary>设置 IntComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.SetBottomInt32">
            <summary>设置 IntComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 IntComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.ValueInt32">
            <summary>设置 IntComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.AllInstances.CompareBottomInt32">
            <summary>设置 IntComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.AllInstances.CompareInt32Int32">
            <summary>设置 IntComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.AllInstances.CopyInt32Int32">
            <summary>设置 IntComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.AllInstances.SetBottomInt32">
            <summary>设置 IntComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 IntComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimIntComparator.AllInstances.ValueInt32">
            <summary>设置 IntComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator">
            <summary>Lucene.Net.Search.FieldComparator+LongComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.#ctor(Lucene.Net.Search.FieldComparator.LongComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.CompareBottomInt32">
            <summary>设置 LongComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.CompareInt32Int32">
            <summary>设置 LongComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.ConstructorInt32StringParser">
            <summary>设置 LongComparator.LongComparator(Int32 numHits, String field, Parser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.CopyInt32Int32">
            <summary>设置 LongComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.SetBottomInt32">
            <summary>设置 LongComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 LongComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.ValueInt32">
            <summary>设置 LongComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.AllInstances.CompareBottomInt32">
            <summary>设置 LongComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.AllInstances.CompareInt32Int32">
            <summary>设置 LongComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.AllInstances.CopyInt32Int32">
            <summary>设置 LongComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.AllInstances.SetBottomInt32">
            <summary>设置 LongComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 LongComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimLongComparator.AllInstances.ValueInt32">
            <summary>设置 LongComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator">
            <summary>Lucene.Net.Search.FieldComparator+RelevanceComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.#ctor(Lucene.Net.Search.FieldComparator.RelevanceComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.CompareBottomInt32">
            <summary>设置 RelevanceComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.CompareInt32Int32">
            <summary>设置 RelevanceComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.ConstructorInt32">
            <summary>设置 RelevanceComparator.RelevanceComparator(Int32 numHits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.CopyInt32Int32">
            <summary>设置 RelevanceComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.SetBottomInt32">
            <summary>设置 RelevanceComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 RelevanceComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.SetScorerScorer">
            <summary>设置 RelevanceComparator.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.ValueInt32">
            <summary>设置 RelevanceComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.AllInstances.CompareBottomInt32">
            <summary>设置 RelevanceComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.AllInstances.CompareInt32Int32">
            <summary>设置 RelevanceComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.AllInstances.CopyInt32Int32">
            <summary>设置 RelevanceComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.AllInstances.SetBottomInt32">
            <summary>设置 RelevanceComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 RelevanceComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.AllInstances.SetScorerScorer">
            <summary>设置 RelevanceComparator.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimRelevanceComparator.AllInstances.ValueInt32">
            <summary>设置 RelevanceComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator">
            <summary>Lucene.Net.Search.FieldComparator+ShortComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.#ctor(Lucene.Net.Search.FieldComparator.ShortComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.CompareBottomInt32">
            <summary>设置 ShortComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.CompareInt32Int32">
            <summary>设置 ShortComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.ConstructorInt32StringParser">
            <summary>设置 ShortComparator.ShortComparator(Int32 numHits, String field, Parser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.CopyInt32Int32">
            <summary>设置 ShortComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.SetBottomInt32">
            <summary>设置 ShortComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 ShortComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.ValueInt32">
            <summary>设置 ShortComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.AllInstances.CompareBottomInt32">
            <summary>设置 ShortComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.AllInstances.CompareInt32Int32">
            <summary>设置 ShortComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.AllInstances.CopyInt32Int32">
            <summary>设置 ShortComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.AllInstances.SetBottomInt32">
            <summary>设置 ShortComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 ShortComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimShortComparator.AllInstances.ValueInt32">
            <summary>设置 ShortComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale">
            <summary>Lucene.Net.Search.FieldComparator+StringComparatorLocale 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.#ctor(Lucene.Net.Search.FieldComparator.StringComparatorLocale)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.CompareBottomInt32">
            <summary>设置 StringComparatorLocale.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.CompareInt32Int32">
            <summary>设置 StringComparatorLocale.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.CopyInt32Int32">
            <summary>设置 StringComparatorLocale.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.SetBottomInt32">
            <summary>设置 StringComparatorLocale.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.SetNextReaderIndexReaderInt32">
            <summary>设置 StringComparatorLocale.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.ValueInt32">
            <summary>设置 StringComparatorLocale.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.AllInstances.CompareBottomInt32">
            <summary>设置 StringComparatorLocale.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.AllInstances.CompareInt32Int32">
            <summary>设置 StringComparatorLocale.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.AllInstances.CopyInt32Int32">
            <summary>设置 StringComparatorLocale.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.AllInstances.SetBottomInt32">
            <summary>设置 StringComparatorLocale.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 StringComparatorLocale.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringComparatorLocale.AllInstances.ValueInt32">
            <summary>设置 StringComparatorLocale.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator">
            <summary>Lucene.Net.Search.FieldComparator+StringOrdValComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.#ctor(Lucene.Net.Search.FieldComparator.StringOrdValComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.CompareBottomInt32">
            <summary>设置 StringOrdValComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.CompareInt32Int32">
            <summary>设置 StringOrdValComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.ConstructorInt32StringInt32Boolean">
            <summary>设置 StringOrdValComparator.StringOrdValComparator(Int32 numHits, String field, Int32 sortPos, Boolean reversed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.ConvertInt32">
            <summary>设置 StringOrdValComparator.Convert(Int32 slot) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.CopyInt32Int32">
            <summary>设置 StringOrdValComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.GetBottomSlot">
            <summary>设置 StringOrdValComparator.GetBottomSlot() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.GetField">
            <summary>设置 StringOrdValComparator.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.GetValues">
            <summary>设置 StringOrdValComparator.GetValues() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.SetBottomInt32">
            <summary>设置 StringOrdValComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 StringOrdValComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.ValueInt32">
            <summary>设置 StringOrdValComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.CompareBottomInt32">
            <summary>设置 StringOrdValComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.CompareInt32Int32">
            <summary>设置 StringOrdValComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.ConvertInt32">
            <summary>设置 StringOrdValComparator.Convert(Int32 slot) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.CopyInt32Int32">
            <summary>设置 StringOrdValComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.GetBottomSlot">
            <summary>设置 StringOrdValComparator.GetBottomSlot() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.GetField">
            <summary>设置 StringOrdValComparator.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.GetValues">
            <summary>设置 StringOrdValComparator.GetValues() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.SetBottomInt32">
            <summary>设置 StringOrdValComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 StringOrdValComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringOrdValComparator.AllInstances.ValueInt32">
            <summary>设置 StringOrdValComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator">
            <summary>Lucene.Net.Search.FieldComparator+StringValComparator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.#ctor(Lucene.Net.Search.FieldComparator.StringValComparator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.CompareBottomInt32">
            <summary>设置 StringValComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.CompareInt32Int32">
            <summary>设置 StringValComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.ConstructorInt32String">
            <summary>设置 StringValComparator.StringValComparator(Int32 numHits, String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.CopyInt32Int32">
            <summary>设置 StringValComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.SetBottomInt32">
            <summary>设置 StringValComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 StringValComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.ValueInt32">
            <summary>设置 StringValComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.AllInstances.CompareBottomInt32">
            <summary>设置 StringValComparator.CompareBottom(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.AllInstances.CompareInt32Int32">
            <summary>设置 StringValComparator.Compare(Int32 slot1, Int32 slot2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.AllInstances.CopyInt32Int32">
            <summary>设置 StringValComparator.Copy(Int32 slot, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.AllInstances.SetBottomInt32">
            <summary>设置 StringValComparator.SetBottom(Int32 bottom) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 StringValComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparator.ShimStringValComparator.AllInstances.ValueInt32">
            <summary>设置 StringValComparator.Value(Int32 slot) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparatorSource">
            <summary>Lucene.Net.Search.FieldComparatorSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparatorSource.#ctor(Lucene.Net.Search.FieldComparatorSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparatorSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldComparatorSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparatorSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldComparatorSource.Constructor">
            <summary>设置 FieldComparatorSource.FieldComparatorSource() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldComparatorSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldDoc">
            <summary>Lucene.Net.Search.FieldDoc 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldDoc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldDoc.#ctor(Lucene.Net.Search.FieldDoc)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldDoc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldDoc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.ConstructorInt32Single">
            <summary>设置 FieldDoc.FieldDoc(Int32 doc, Single score) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.ConstructorInt32SingleIComparableArray">
            <summary>设置 FieldDoc.FieldDoc(Int32 doc, Single score, IComparable[] fields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.OnDeserializedStreamingContext">
            <summary>设置 FieldDoc.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.OnSerializingStreamingContext">
            <summary>设置 FieldDoc.OnSerializing(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.ToString">
            <summary>设置 FieldDoc.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldDoc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.AllInstances.OnDeserializedStreamingContext">
            <summary>设置 FieldDoc.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.AllInstances.OnSerializingStreamingContext">
            <summary>设置 FieldDoc.OnSerializing(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldDoc.AllInstances.ToString01">
            <summary>设置 FieldDoc.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue">
            <summary>Lucene.Net.Search.FieldValueHitQueue 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.#ctor(Lucene.Net.Search.FieldValueHitQueue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ConstructorSortFieldArray">
            <summary>设置 FieldValueHitQueue.FieldValueHitQueue(SortField[] fields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.CreateSortFieldArrayInt32">
            <summary>设置 FieldValueHitQueue.Create(SortField[] fields, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.FillFieldsFieldValueHitQueueEntry">
            <summary>设置 FieldValueHitQueue.FillFields(Entry entry) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.GetComparators">
            <summary>设置 FieldValueHitQueue.GetComparators() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.GetFields">
            <summary>设置 FieldValueHitQueue.GetFields() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.GetReverseMul">
            <summary>设置 FieldValueHitQueue.GetReverseMul() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.AllInstances.FillFieldsFieldValueHitQueueEntry">
            <summary>设置 FieldValueHitQueue.FillFields(Entry entry) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.AllInstances.GetComparators">
            <summary>设置 FieldValueHitQueue.GetComparators() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.AllInstances.GetFields">
            <summary>设置 FieldValueHitQueue.GetFields() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.AllInstances.GetReverseMul">
            <summary>设置 FieldValueHitQueue.GetReverseMul() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry">
            <summary>Lucene.Net.Search.FieldValueHitQueue+Entry 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.#ctor(Lucene.Net.Search.FieldValueHitQueue.Entry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.ConstructorInt32Int32Single">
            <summary>设置 Entry.Entry(Int32 slot, Int32 docID, Single score) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.ToString">
            <summary>设置 Entry.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFieldValueHitQueue.ShimEntry.AllInstances.ToString01">
            <summary>设置 Entry.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilter">
            <summary>Lucene.Net.Search.Filter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilter.#ctor(Lucene.Net.Search.Filter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilter.Constructor">
            <summary>设置 Filter.Filter() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilterManager">
            <summary>Lucene.Net.Search.FilterManager 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilterManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilterManager.#ctor(Lucene.Net.Search.FilterManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilterManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilterManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.Constructor">
            <summary>设置 FilterManager.FilterManager() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.GetFilterFilter">
            <summary>设置 FilterManager.GetFilter(Filter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.GetInstance">
            <summary>设置 FilterManager.GetInstance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.SetCacheSizeInt32">
            <summary>设置 FilterManager.SetCacheSize(Int32 cacheCleanSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.SetCleanThreadSleepTimeInt64">
            <summary>设置 FilterManager.SetCleanThreadSleepTime(Int64 cleanSleepTime) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilterManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.AllInstances.GetFilterFilter">
            <summary>设置 FilterManager.GetFilter(Filter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.AllInstances.SetCacheSizeInt32">
            <summary>设置 FilterManager.SetCacheSize(Int32 cacheCleanSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilterManager.AllInstances.SetCleanThreadSleepTimeInt64">
            <summary>设置 FilterManager.SetCleanThreadSleepTime(Int64 cleanSleepTime) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet">
            <summary>Lucene.Net.Search.FilteredDocIdSet 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.#ctor(Lucene.Net.Search.FilteredDocIdSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.ConstructorDocIdSetFuncOfInt32Boolean">
            <summary>设置 FilteredDocIdSet.FilteredDocIdSet(DocIdSet innerSet, Func`2&lt;Int32,Boolean&gt; match) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.IsCacheable">
            <summary>设置 FilteredDocIdSet.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.Iterator">
            <summary>设置 FilteredDocIdSet.Iterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet._Iteratorb__0Int32">
            <summary>设置 FilteredDocIdSet.&lt;Iterator&gt;b__0(Int32 docid) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.AllInstances.IsCacheable">
            <summary>设置 FilteredDocIdSet.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.AllInstances.Iterator">
            <summary>设置 FilteredDocIdSet.Iterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSet.AllInstances._Iteratorb__0Int32">
            <summary>设置 FilteredDocIdSet.&lt;Iterator&gt;b__0(Int32 docid) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator">
            <summary>Lucene.Net.Search.FilteredDocIdSetIterator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.#ctor(Lucene.Net.Search.FilteredDocIdSetIterator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.AdvanceInt32">
            <summary>设置 FilteredDocIdSetIterator.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.ConstructorDocIdSetIteratorFuncOfInt32Boolean">
            <summary>设置 FilteredDocIdSetIterator.FilteredDocIdSetIterator(DocIdSetIterator innerIter, Func`2&lt;Int32,Boolean&gt; match) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.Doc">
            <summary>设置 FilteredDocIdSetIterator.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.DocID">
            <summary>设置 FilteredDocIdSetIterator.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.Next">
            <summary>设置 FilteredDocIdSetIterator.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.NextDoc">
            <summary>设置 FilteredDocIdSetIterator.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.SkipToInt32">
            <summary>设置 FilteredDocIdSetIterator.SkipTo(Int32 n) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.AllInstances.AdvanceInt32">
            <summary>设置 FilteredDocIdSetIterator.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.AllInstances.Doc">
            <summary>设置 FilteredDocIdSetIterator.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.AllInstances.DocID">
            <summary>设置 FilteredDocIdSetIterator.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.AllInstances.Next">
            <summary>设置 FilteredDocIdSetIterator.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.AllInstances.NextDoc">
            <summary>设置 FilteredDocIdSetIterator.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredDocIdSetIterator.AllInstances.SkipToInt32">
            <summary>设置 FilteredDocIdSetIterator.SkipTo(Int32 n) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilteredQuery">
            <summary>Lucene.Net.Search.FilteredQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredQuery.#ctor(Lucene.Net.Search.FilteredQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.ConstructorQueryFilter">
            <summary>设置 FilteredQuery.FilteredQuery(Query query, Filter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.CreateWeightSearcher">
            <summary>设置 FilteredQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.EqualsObject">
            <summary>设置 FilteredQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 FilteredQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.GetFilter">
            <summary>设置 FilteredQuery.GetFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.GetHashCode">
            <summary>设置 FilteredQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.GetQuery">
            <summary>设置 FilteredQuery.GetQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.RewriteIndexReader">
            <summary>设置 FilteredQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.ToStringString">
            <summary>设置 FilteredQuery.ToString(String s) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 FilteredQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances.EqualsObject">
            <summary>设置 FilteredQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 FilteredQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances.GetFilter">
            <summary>设置 FilteredQuery.GetFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances.GetHashCode01">
            <summary>设置 FilteredQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances.GetQuery">
            <summary>设置 FilteredQuery.GetQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances.RewriteIndexReader">
            <summary>设置 FilteredQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredQuery.AllInstances.ToStringString">
            <summary>设置 FilteredQuery.ToString(String s) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilteredTermEnum">
            <summary>Lucene.Net.Search.FilteredTermEnum 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.#ctor(Lucene.Net.Search.FilteredTermEnum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.Close">
            <summary>设置 FilteredTermEnum.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.Constructor">
            <summary>设置 FilteredTermEnum.FilteredTermEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.DocFreq">
            <summary>设置 FilteredTermEnum.DocFreq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.Next">
            <summary>设置 FilteredTermEnum.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.SetEnumTermEnum">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.Term">
            <summary>设置 FilteredTermEnum.Term() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.AllInstances.Close">
            <summary>设置 FilteredTermEnum.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.AllInstances.DocFreq">
            <summary>设置 FilteredTermEnum.DocFreq() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.AllInstances.Next">
            <summary>设置 FilteredTermEnum.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.AllInstances.SetEnumTermEnum">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFilteredTermEnum.AllInstances.Term">
            <summary>设置 FilteredTermEnum.Term() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFuzzyQuery">
            <summary>Lucene.Net.Search.FuzzyQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyQuery.#ctor(Lucene.Net.Search.FuzzyQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.ConstructorTerm">
            <summary>设置 FuzzyQuery.FuzzyQuery(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.ConstructorTermSingle">
            <summary>设置 FuzzyQuery.FuzzyQuery(Term term, Single minimumSimilarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.ConstructorTermSingleInt32">
            <summary>设置 FuzzyQuery.FuzzyQuery(Term term, Single minimumSimilarity, Int32 prefixLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.EqualsObject">
            <summary>设置 FuzzyQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.GetEnumIndexReader">
            <summary>设置 FuzzyQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.GetHashCode">
            <summary>设置 FuzzyQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.GetMinSimilarity">
            <summary>设置 FuzzyQuery.GetMinSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.GetPrefixLength">
            <summary>设置 FuzzyQuery.GetPrefixLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.GetTerm">
            <summary>设置 FuzzyQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.RewriteIndexReader">
            <summary>设置 FuzzyQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 FuzzyQuery.SetRewriteMethod(RewriteMethod method) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.ToStringString">
            <summary>设置 FuzzyQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.EqualsObject">
            <summary>设置 FuzzyQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.GetEnumIndexReader">
            <summary>设置 FuzzyQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.GetHashCode01">
            <summary>设置 FuzzyQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.GetMinSimilarity">
            <summary>设置 FuzzyQuery.GetMinSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.GetPrefixLength">
            <summary>设置 FuzzyQuery.GetPrefixLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.GetTerm">
            <summary>设置 FuzzyQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.RewriteIndexReader">
            <summary>设置 FuzzyQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 FuzzyQuery.SetRewriteMethod(RewriteMethod method) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyQuery.AllInstances.ToStringString">
            <summary>设置 FuzzyQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum">
            <summary>Lucene.Net.Search.FuzzyTermEnum 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.#ctor(Lucene.Net.Search.FuzzyTermEnum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.CalculateMaxDistanceInt32">
            <summary>设置 FuzzyTermEnum.CalculateMaxDistance(Int32 m) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.Close">
            <summary>设置 FuzzyTermEnum.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.ConstructorIndexReaderTerm">
            <summary>设置 FuzzyTermEnum.FuzzyTermEnum(IndexReader reader, Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.ConstructorIndexReaderTermSingle">
            <summary>设置 FuzzyTermEnum.FuzzyTermEnum(IndexReader reader, Term term, Single minSimilarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.ConstructorIndexReaderTermSingleInt32">
            <summary>设置 FuzzyTermEnum.FuzzyTermEnum(IndexReader reader, Term term, Single minSimilarity, Int32 prefixLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.Difference">
            <summary>设置 FuzzyTermEnum.Difference() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.EndEnum">
            <summary>设置 FuzzyTermEnum.EndEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.GetMaxDistanceInt32">
            <summary>设置 FuzzyTermEnum.GetMaxDistance(Int32 m) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.GrowDistanceArrayInt32">
            <summary>设置 FuzzyTermEnum.GrowDistanceArray(Int32 m) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.InitDistanceArray">
            <summary>设置 FuzzyTermEnum.InitDistanceArray() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.InitializeMaxDistances">
            <summary>设置 FuzzyTermEnum.InitializeMaxDistances() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.MinInt32Int32Int32">
            <summary>设置 FuzzyTermEnum.Min(Int32 a, Int32 b, Int32 c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.SimilarityString">
            <summary>设置 FuzzyTermEnum.Similarity(String target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.TermCompareTerm">
            <summary>设置 FuzzyTermEnum.TermCompare(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.CalculateMaxDistanceInt32">
            <summary>设置 FuzzyTermEnum.CalculateMaxDistance(Int32 m) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.Close">
            <summary>设置 FuzzyTermEnum.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.Difference">
            <summary>设置 FuzzyTermEnum.Difference() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.EndEnum">
            <summary>设置 FuzzyTermEnum.EndEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.GetMaxDistanceInt32">
            <summary>设置 FuzzyTermEnum.GetMaxDistance(Int32 m) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.GrowDistanceArrayInt32">
            <summary>设置 FuzzyTermEnum.GrowDistanceArray(Int32 m) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.InitDistanceArray">
            <summary>设置 FuzzyTermEnum.InitDistanceArray() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.InitializeMaxDistances">
            <summary>设置 FuzzyTermEnum.InitializeMaxDistances() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.SimilarityString">
            <summary>设置 FuzzyTermEnum.Similarity(String target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimFuzzyTermEnum.AllInstances.TermCompareTerm">
            <summary>设置 FuzzyTermEnum.TermCompare(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimHitQueue">
            <summary>Lucene.Net.Search.HitQueue 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimHitQueue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimHitQueue.#ctor(Lucene.Net.Search.HitQueue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimHitQueue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimHitQueue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimHitQueue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimHitQueue.ConstructorInt32Boolean">
            <summary>设置 HitQueue.HitQueue(Int32 size, Boolean prePopulate) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimHitQueue.GetSentinelObject">
            <summary>设置 HitQueue.GetSentinelObject() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimHitQueue.LessThanScoreDocScoreDoc">
            <summary>设置 HitQueue.LessThan(ScoreDoc hitA, ScoreDoc hitB) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimHitQueue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimHitQueue.AllInstances.GetSentinelObject">
            <summary>设置 HitQueue.GetSentinelObject() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimHitQueue.AllInstances.LessThanScoreDocScoreDoc">
            <summary>设置 HitQueue.LessThan(ScoreDoc hitA, ScoreDoc hitB) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimIndexSearcher">
            <summary>Lucene.Net.Search.IndexSearcher 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimIndexSearcher.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimIndexSearcher.#ctor(Lucene.Net.Search.IndexSearcher)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimIndexSearcher.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimIndexSearcher.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimIndexSearcher.Bind(Lucene.Net.Search.Searchable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimIndexSearcher.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.Close">
            <summary>设置 IndexSearcher.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.ConstructorDirectory">
            <summary>设置 IndexSearcher.IndexSearcher(Directory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.ConstructorDirectoryBoolean">
            <summary>设置 IndexSearcher.IndexSearcher(Directory path, Boolean readOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.ConstructorIndexReader">
            <summary>设置 IndexSearcher.IndexSearcher(IndexReader r) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.ConstructorIndexReaderBoolean">
            <summary>设置 IndexSearcher.IndexSearcher(IndexReader r, Boolean closeReader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.ConstructorString">
            <summary>设置 IndexSearcher.IndexSearcher(String path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.ConstructorStringBoolean">
            <summary>设置 IndexSearcher.IndexSearcher(String path, Boolean readOnly) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.Dispose">
            <summary>设置 IndexSearcher.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.DocFreqTerm">
            <summary>设置 IndexSearcher.DocFreq(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.DocInt32">
            <summary>设置 IndexSearcher.Doc(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.DocInt32FieldSelector">
            <summary>设置 IndexSearcher.Doc(Int32 i, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.ExplainWeightInt32">
            <summary>设置 IndexSearcher.Explain(Weight weight, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.GatherSubReadersIListOfIndexReaderIndexReader">
            <summary>设置 IndexSearcher.GatherSubReaders(IList`1&lt;IndexReader&gt; allSubReaders, IndexReader r) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.GetIndexReader">
            <summary>设置 IndexSearcher.GetIndexReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.MaxDoc">
            <summary>设置 IndexSearcher.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.RewriteQuery">
            <summary>设置 IndexSearcher.Rewrite(Query original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.SearchWeightFilterCollector">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.SearchWeightFilterInt32">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.SearchWeightFilterInt32Sort">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.SearchWeightFilterInt32SortBoolean">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort, Boolean fillFields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.SearchWithFilterIndexReaderWeightFilterCollector">
            <summary>设置 IndexSearcher.SearchWithFilter(IndexReader reader, Weight weight, Filter filter, Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.SetDefaultFieldSortScoringBooleanBoolean">
            <summary>设置 IndexSearcher.SetDefaultFieldSortScoring(Boolean doTrackScores, Boolean doMaxScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.reader_ForNUnitGet">
            <summary>设置 IndexSearcher.get_reader_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.Close">
            <summary>设置 IndexSearcher.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.Dispose">
            <summary>设置 IndexSearcher.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.DocFreqTerm">
            <summary>设置 IndexSearcher.DocFreq(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.DocInt32">
            <summary>设置 IndexSearcher.Doc(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.DocInt32FieldSelector">
            <summary>设置 IndexSearcher.Doc(Int32 i, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.ExplainWeightInt32">
            <summary>设置 IndexSearcher.Explain(Weight weight, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.GatherSubReadersIListOfIndexReaderIndexReader">
            <summary>设置 IndexSearcher.GatherSubReaders(IList`1&lt;IndexReader&gt; allSubReaders, IndexReader r) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.GetIndexReader">
            <summary>设置 IndexSearcher.GetIndexReader() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.MaxDoc">
            <summary>设置 IndexSearcher.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.RewriteQuery">
            <summary>设置 IndexSearcher.Rewrite(Query original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.SearchWeightFilterCollector">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.SearchWeightFilterInt32">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.SearchWeightFilterInt32Sort">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.SearchWeightFilterInt32SortBoolean">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort, Boolean fillFields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.SearchWithFilterIndexReaderWeightFilterCollector">
            <summary>设置 IndexSearcher.SearchWithFilter(IndexReader reader, Weight weight, Filter filter, Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.SetDefaultFieldSortScoringBooleanBoolean">
            <summary>设置 IndexSearcher.SetDefaultFieldSortScoring(Boolean doTrackScores, Boolean doMaxScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimIndexSearcher.AllInstances.reader_ForNUnitGet">
            <summary>设置 IndexSearcher.get_reader_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery">
            <summary>Lucene.Net.Search.MatchAllDocsQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.#ctor(Lucene.Net.Search.MatchAllDocsQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.Constructor">
            <summary>设置 MatchAllDocsQuery.MatchAllDocsQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.ConstructorString">
            <summary>设置 MatchAllDocsQuery.MatchAllDocsQuery(String normsField) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.CreateWeightSearcher">
            <summary>设置 MatchAllDocsQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.EqualsObject">
            <summary>设置 MatchAllDocsQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 MatchAllDocsQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.GetHashCode">
            <summary>设置 MatchAllDocsQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.ToStringString">
            <summary>设置 MatchAllDocsQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 MatchAllDocsQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.AllInstances.EqualsObject">
            <summary>设置 MatchAllDocsQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 MatchAllDocsQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.AllInstances.GetHashCode01">
            <summary>设置 MatchAllDocsQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMatchAllDocsQuery.AllInstances.ToStringString">
            <summary>设置 MatchAllDocsQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery">
            <summary>Lucene.Net.Search.MultiPhraseQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.#ctor(Lucene.Net.Search.MultiPhraseQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AddTerm">
            <summary>设置 MultiPhraseQuery.Add(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AddTermArray">
            <summary>设置 MultiPhraseQuery.Add(Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AddTermArrayInt32">
            <summary>设置 MultiPhraseQuery.Add(Term[] terms, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.ArraysHashCodeTermArray">
            <summary>设置 MultiPhraseQuery.ArraysHashCode(Term[] termArray) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.Constructor">
            <summary>设置 MultiPhraseQuery.MultiPhraseQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.CreateWeightSearcher">
            <summary>设置 MultiPhraseQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.EqualsObject">
            <summary>设置 MultiPhraseQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 MultiPhraseQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.GetHashCode">
            <summary>设置 MultiPhraseQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.GetPositions">
            <summary>设置 MultiPhraseQuery.GetPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.GetSlop">
            <summary>设置 MultiPhraseQuery.GetSlop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.GetTermArrays">
            <summary>设置 MultiPhraseQuery.GetTermArrays() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.RewriteIndexReader">
            <summary>设置 MultiPhraseQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.SetSlopInt32">
            <summary>设置 MultiPhraseQuery.SetSlop(Int32 s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.TermArraysHashCode">
            <summary>设置 MultiPhraseQuery.TermArraysHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.ToStringString">
            <summary>设置 MultiPhraseQuery.ToString(String f) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.AddTerm">
            <summary>设置 MultiPhraseQuery.Add(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.AddTermArray">
            <summary>设置 MultiPhraseQuery.Add(Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.AddTermArrayInt32">
            <summary>设置 MultiPhraseQuery.Add(Term[] terms, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.ArraysHashCodeTermArray">
            <summary>设置 MultiPhraseQuery.ArraysHashCode(Term[] termArray) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 MultiPhraseQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.EqualsObject">
            <summary>设置 MultiPhraseQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 MultiPhraseQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.GetHashCode01">
            <summary>设置 MultiPhraseQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.GetPositions">
            <summary>设置 MultiPhraseQuery.GetPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.GetSlop">
            <summary>设置 MultiPhraseQuery.GetSlop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.GetTermArrays">
            <summary>设置 MultiPhraseQuery.GetTermArrays() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.RewriteIndexReader">
            <summary>设置 MultiPhraseQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.SetSlopInt32">
            <summary>设置 MultiPhraseQuery.SetSlop(Int32 s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.TermArraysHashCode">
            <summary>设置 MultiPhraseQuery.TermArraysHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiPhraseQuery.AllInstances.ToStringString">
            <summary>设置 MultiPhraseQuery.ToString(String f) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiSearcher">
            <summary>Lucene.Net.Search.MultiSearcher 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiSearcher.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiSearcher.#ctor(Lucene.Net.Search.MultiSearcher)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiSearcher.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiSearcher.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiSearcher.Bind(Lucene.Net.Search.Searchable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiSearcher.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.Close">
            <summary>设置 MultiSearcher.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.ConstructorSearchableArray">
            <summary>设置 MultiSearcher.MultiSearcher(Searchable[] searchables) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.CreateWeightQuery">
            <summary>设置 MultiSearcher.CreateWeight(Query original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.Dispose">
            <summary>设置 MultiSearcher.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.DocFreqTerm">
            <summary>设置 MultiSearcher.DocFreq(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.DocInt32">
            <summary>设置 MultiSearcher.Doc(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.DocInt32FieldSelector">
            <summary>设置 MultiSearcher.Doc(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.ExplainWeightInt32">
            <summary>设置 MultiSearcher.Explain(Weight weight, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.GetSearchables">
            <summary>设置 MultiSearcher.GetSearchables() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.GetStarts">
            <summary>设置 MultiSearcher.GetStarts() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.MaxDoc">
            <summary>设置 MultiSearcher.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.RewriteQuery">
            <summary>设置 MultiSearcher.Rewrite(Query original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.SearchWeightFilterCollector">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.SearchWeightFilterInt32">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.SearchWeightFilterInt32Sort">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Int32 n, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.SubDocInt32">
            <summary>设置 MultiSearcher.SubDoc(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.SubSearcherInt32">
            <summary>设置 MultiSearcher.SubSearcher(Int32 n) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.Close">
            <summary>设置 MultiSearcher.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.CreateWeightQuery">
            <summary>设置 MultiSearcher.CreateWeight(Query original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.Dispose">
            <summary>设置 MultiSearcher.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.DocFreqTerm">
            <summary>设置 MultiSearcher.DocFreq(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.DocInt32">
            <summary>设置 MultiSearcher.Doc(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.DocInt32FieldSelector">
            <summary>设置 MultiSearcher.Doc(Int32 n, FieldSelector fieldSelector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.ExplainWeightInt32">
            <summary>设置 MultiSearcher.Explain(Weight weight, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.GetSearchables">
            <summary>设置 MultiSearcher.GetSearchables() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.GetStarts">
            <summary>设置 MultiSearcher.GetStarts() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.MaxDoc">
            <summary>设置 MultiSearcher.MaxDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.RewriteQuery">
            <summary>设置 MultiSearcher.Rewrite(Query original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.SearchWeightFilterCollector">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.SearchWeightFilterInt32">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.SearchWeightFilterInt32Sort">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Int32 n, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.SubDocInt32">
            <summary>设置 MultiSearcher.SubDoc(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiSearcher.AllInstances.SubSearcherInt32">
            <summary>设置 MultiSearcher.SubSearcher(Int32 n) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQuery">
            <summary>Lucene.Net.Search.MultiTermQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.#ctor(Lucene.Net.Search.MultiTermQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.Constructor">
            <summary>设置 MultiTermQuery.MultiTermQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ConstructorTerm">
            <summary>设置 MultiTermQuery.MultiTermQuery(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.EqualsObject">
            <summary>设置 MultiTermQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.GetHashCode">
            <summary>设置 MultiTermQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.GetRewriteMethod">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.GetTerm">
            <summary>设置 MultiTermQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.IncTotalNumberOfTermsInt32">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.RewriteIndexReader">
            <summary>设置 MultiTermQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.StaticConstructor">
            <summary>设置 MultiTermQuery.MultiTermQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ToStringString">
            <summary>设置 MultiTermQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.EqualsObject">
            <summary>设置 MultiTermQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.GetHashCode01">
            <summary>设置 MultiTermQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.GetRewriteMethod">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.GetTerm">
            <summary>设置 MultiTermQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.IncTotalNumberOfTermsInt32">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.RewriteIndexReader">
            <summary>设置 MultiTermQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.AllInstances.ToStringString">
            <summary>设置 MultiTermQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite">
            <summary>Lucene.Net.Search.MultiTermQuery+AnonymousClassConstantScoreAutoRewrite 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.#ctor(Lucene.Net.Search.MultiTermQuery.AnonymousClassConstantScoreAutoRewrite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.Constructor">
            <summary>设置 AnonymousClassConstantScoreAutoRewrite.AnonymousClassConstantScoreAutoRewrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.ReadResolve">
            <summary>设置 AnonymousClassConstantScoreAutoRewrite.ReadResolve() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.SetDocCountPercentDouble">
            <summary>设置 AnonymousClassConstantScoreAutoRewrite.SetDocCountPercent(Double percent) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.SetTermCountCutoffInt32">
            <summary>设置 AnonymousClassConstantScoreAutoRewrite.SetTermCountCutoff(Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.AllInstances.ReadResolve">
            <summary>设置 AnonymousClassConstantScoreAutoRewrite.ReadResolve() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.AllInstances.SetDocCountPercentDouble">
            <summary>设置 AnonymousClassConstantScoreAutoRewrite.SetDocCountPercent(Double percent) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimAnonymousClassConstantScoreAutoRewrite.AllInstances.SetTermCountCutoffInt32">
            <summary>设置 AnonymousClassConstantScoreAutoRewrite.SetTermCountCutoff(Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite">
            <summary>Lucene.Net.Search.MultiTermQuery+ConstantScoreAutoRewrite 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.#ctor(Lucene.Net.Search.MultiTermQuery.ConstantScoreAutoRewrite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.Constructor">
            <summary>设置 ConstantScoreAutoRewrite.ConstantScoreAutoRewrite() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.EqualsObject">
            <summary>设置 ConstantScoreAutoRewrite.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.GetDocCountPercent">
            <summary>设置 ConstantScoreAutoRewrite.GetDocCountPercent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.GetHashCode">
            <summary>设置 ConstantScoreAutoRewrite.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.GetTermCountCutoff">
            <summary>设置 ConstantScoreAutoRewrite.GetTermCountCutoff() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.InitBlock">
            <summary>设置 ConstantScoreAutoRewrite.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.RewriteIndexReaderMultiTermQuery">
            <summary>设置 ConstantScoreAutoRewrite.Rewrite(IndexReader reader, MultiTermQuery query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.SetDocCountPercentDouble">
            <summary>设置 ConstantScoreAutoRewrite.SetDocCountPercent(Double percent) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.SetTermCountCutoffInt32">
            <summary>设置 ConstantScoreAutoRewrite.SetTermCountCutoff(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.StaticConstructor">
            <summary>设置 ConstantScoreAutoRewrite.ConstantScoreAutoRewrite() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances.EqualsObject">
            <summary>设置 ConstantScoreAutoRewrite.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances.GetDocCountPercent">
            <summary>设置 ConstantScoreAutoRewrite.GetDocCountPercent() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances.GetHashCode01">
            <summary>设置 ConstantScoreAutoRewrite.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances.GetTermCountCutoff">
            <summary>设置 ConstantScoreAutoRewrite.GetTermCountCutoff() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances.InitBlock">
            <summary>设置 ConstantScoreAutoRewrite.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances.RewriteIndexReaderMultiTermQuery">
            <summary>设置 ConstantScoreAutoRewrite.Rewrite(IndexReader reader, MultiTermQuery query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances.SetDocCountPercentDouble">
            <summary>设置 ConstantScoreAutoRewrite.SetDocCountPercent(Double percent) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimConstantScoreAutoRewrite.AllInstances.SetTermCountCutoffInt32">
            <summary>设置 ConstantScoreAutoRewrite.SetTermCountCutoff(Int32 count) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimRewriteMethod">
            <summary>Lucene.Net.Search.MultiTermQuery+RewriteMethod 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimRewriteMethod.#ctor(Lucene.Net.Search.MultiTermQuery.RewriteMethod)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimRewriteMethod.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimRewriteMethod.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimRewriteMethod.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimRewriteMethod.Constructor">
            <summary>设置 RewriteMethod.RewriteMethod() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQuery.ShimRewriteMethod.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter">
            <summary>Lucene.Net.Search.MultiTermQueryWrapperFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.#ctor(Lucene.Net.Search.MultiTermQueryWrapperFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.ClearTotalNumberOfTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.ConstructorMultiTermQuery">
            <summary>设置 MultiTermQueryWrapperFilter.MultiTermQueryWrapperFilter(MultiTermQuery query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.EqualsObject">
            <summary>设置 MultiTermQueryWrapperFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.GetDocIdSetIndexReader">
            <summary>设置 MultiTermQueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.GetHashCode">
            <summary>设置 MultiTermQueryWrapperFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.GetTotalNumberOfTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.ToString">
            <summary>设置 MultiTermQueryWrapperFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.AllInstances.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.ClearTotalNumberOfTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.AllInstances.EqualsObject">
            <summary>设置 MultiTermQueryWrapperFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.AllInstances.GetDocIdSetIndexReader">
            <summary>设置 MultiTermQueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.AllInstances.GetHashCode01">
            <summary>设置 MultiTermQueryWrapperFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.AllInstances.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.GetTotalNumberOfTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimMultiTermQueryWrapperFilter.AllInstances.ToString01">
            <summary>设置 MultiTermQueryWrapperFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimNumericRangeFilter">
            <summary>Lucene.Net.Search.NumericRangeFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.#ctor(Lucene.Net.Search.NumericRangeFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.ConstructorNumericRangeQuery">
            <summary>设置 NumericRangeFilter.NumericRangeFilter(NumericRangeQuery query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.GetField">
            <summary>设置 NumericRangeFilter.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.GetMax">
            <summary>设置 NumericRangeFilter.GetMax() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.GetMin">
            <summary>设置 NumericRangeFilter.GetMin() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.IncludesMax">
            <summary>设置 NumericRangeFilter.IncludesMax() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.IncludesMin">
            <summary>设置 NumericRangeFilter.IncludesMin() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.NewDoubleRangeStringDoubleDoubleBooleanBoolean">
            <summary>设置 NumericRangeFilter.NewDoubleRange(String field, Double min, Double max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.NewDoubleRangeStringInt32DoubleDoubleBooleanBoolean">
            <summary>设置 NumericRangeFilter.NewDoubleRange(String field, Int32 precisionStep, Double min, Double max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.NewFloatRangeStringInt32SingleSingleBooleanBoolean">
            <summary>设置 NumericRangeFilter.NewFloatRange(String field, Int32 precisionStep, Single min, Single max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.NewFloatRangeStringSingleSingleBooleanBoolean">
            <summary>设置 NumericRangeFilter.NewFloatRange(String field, Single min, Single max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.NewIntRangeStringInt32ValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeFilter.NewIntRange(String field, Int32 precisionStep, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.NewIntRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeFilter.NewIntRange(String field, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.NewLongRangeStringInt32ValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeFilter.NewLongRange(String field, Int32 precisionStep, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.NewLongRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeFilter.NewLongRange(String field, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.AllInstances.GetField">
            <summary>设置 NumericRangeFilter.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.AllInstances.GetMax">
            <summary>设置 NumericRangeFilter.GetMax() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.AllInstances.GetMin">
            <summary>设置 NumericRangeFilter.GetMin() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.AllInstances.IncludesMax">
            <summary>设置 NumericRangeFilter.IncludesMax() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeFilter.AllInstances.IncludesMin">
            <summary>设置 NumericRangeFilter.IncludesMin() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimNumericRangeQuery">
            <summary>Lucene.Net.Search.NumericRangeQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.#ctor(Lucene.Net.Search.NumericRangeQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.ConstructorStringInt32Int32ValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeQuery.NumericRangeQuery(String field, Int32 precisionStep, Int32 valSize, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.EqualsObject">
            <summary>设置 NumericRangeQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.GetEnumIndexReader">
            <summary>设置 NumericRangeQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.GetField">
            <summary>设置 NumericRangeQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.GetHashCode">
            <summary>设置 NumericRangeQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.GetMax">
            <summary>设置 NumericRangeQuery.GetMax() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.GetMin">
            <summary>设置 NumericRangeQuery.GetMin() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.IncludesMax">
            <summary>设置 NumericRangeQuery.IncludesMax() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.IncludesMin">
            <summary>设置 NumericRangeQuery.IncludesMin() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.NewDoubleRangeStringDoubleDoubleBooleanBoolean">
            <summary>设置 NumericRangeQuery.NewDoubleRange(String field, Double min, Double max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.NewDoubleRangeStringInt32DoubleDoubleBooleanBoolean">
            <summary>设置 NumericRangeQuery.NewDoubleRange(String field, Int32 precisionStep, Double min, Double max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.NewFloatRangeStringInt32SingleSingleBooleanBoolean">
            <summary>设置 NumericRangeQuery.NewFloatRange(String field, Int32 precisionStep, Single min, Single max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.NewFloatRangeStringSingleSingleBooleanBoolean">
            <summary>设置 NumericRangeQuery.NewFloatRange(String field, Single min, Single max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.NewIntRangeStringInt32ValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeQuery.NewIntRange(String field, Int32 precisionStep, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.NewIntRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeQuery.NewIntRange(String field, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.NewLongRangeStringInt32ValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeQuery.NewLongRange(String field, Int32 precisionStep, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.NewLongRangeStringValueTypeValueTypeBooleanBoolean">
            <summary>设置 NumericRangeQuery.NewLongRange(String field, ValueType min, ValueType max, Boolean minInclusive, Boolean maxInclusive) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.OnDeserializedStreamingContext">
            <summary>设置 NumericRangeQuery.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.ToStringString">
            <summary>设置 NumericRangeQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.EqualsObject">
            <summary>设置 NumericRangeQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.GetEnumIndexReader">
            <summary>设置 NumericRangeQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.GetField">
            <summary>设置 NumericRangeQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.GetHashCode01">
            <summary>设置 NumericRangeQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.GetMax">
            <summary>设置 NumericRangeQuery.GetMax() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.GetMin">
            <summary>设置 NumericRangeQuery.GetMin() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.IncludesMax">
            <summary>设置 NumericRangeQuery.IncludesMax() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.IncludesMin">
            <summary>设置 NumericRangeQuery.IncludesMin() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.OnDeserializedStreamingContext">
            <summary>设置 NumericRangeQuery.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimNumericRangeQuery.AllInstances.ToStringString">
            <summary>设置 NumericRangeQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher">
            <summary>Lucene.Net.Search.ParallelMultiSearcher 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.#ctor(Lucene.Net.Search.ParallelMultiSearcher)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.Bind(Lucene.Net.Search.Searchable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.ConstructorSearchableArray">
            <summary>设置 ParallelMultiSearcher.ParallelMultiSearcher(Searchable[] searchables) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.DocFreqTerm">
            <summary>设置 ParallelMultiSearcher.DocFreq(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.RewriteQuery">
            <summary>设置 ParallelMultiSearcher.Rewrite(Query original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.SearchWeightFilterCollector">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.SearchWeightFilterInt32">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.SearchWeightFilterInt32Sort">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.AllInstances.DocFreqTerm">
            <summary>设置 ParallelMultiSearcher.DocFreq(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.AllInstances.RewriteQuery">
            <summary>设置 ParallelMultiSearcher.Rewrite(Query original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.AllInstances.SearchWeightFilterCollector">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.AllInstances.SearchWeightFilterInt32">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimParallelMultiSearcher.AllInstances.SearchWeightFilterInt32Sort">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPhraseQuery">
            <summary>Lucene.Net.Search.PhraseQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPhraseQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPhraseQuery.#ctor(Lucene.Net.Search.PhraseQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPhraseQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPhraseQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPhraseQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AddTerm">
            <summary>设置 PhraseQuery.Add(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AddTermInt32">
            <summary>设置 PhraseQuery.Add(Term term, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.Constructor">
            <summary>设置 PhraseQuery.PhraseQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.CreateWeightSearcher">
            <summary>设置 PhraseQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.EqualsObject">
            <summary>设置 PhraseQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 PhraseQuery.ExtractTerms(ICollection`1&lt;Term&gt; queryTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.GetHashCode">
            <summary>设置 PhraseQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.GetPositions">
            <summary>设置 PhraseQuery.GetPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.GetSlop">
            <summary>设置 PhraseQuery.GetSlop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.GetTerms">
            <summary>设置 PhraseQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.SetSlopInt32">
            <summary>设置 PhraseQuery.SetSlop(Int32 s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.ToStringString">
            <summary>设置 PhraseQuery.ToString(String f) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.AddTerm">
            <summary>设置 PhraseQuery.Add(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.AddTermInt32">
            <summary>设置 PhraseQuery.Add(Term term, Int32 position) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 PhraseQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.EqualsObject">
            <summary>设置 PhraseQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 PhraseQuery.ExtractTerms(ICollection`1&lt;Term&gt; queryTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.GetHashCode01">
            <summary>设置 PhraseQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.GetPositions">
            <summary>设置 PhraseQuery.GetPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.GetSlop">
            <summary>设置 PhraseQuery.GetSlop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.GetTerms">
            <summary>设置 PhraseQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.SetSlopInt32">
            <summary>设置 PhraseQuery.SetSlop(Int32 s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPhraseQuery.AllInstances.ToStringString">
            <summary>设置 PhraseQuery.ToString(String f) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector">
            <summary>Lucene.Net.Search.PositiveScoresOnlyCollector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.#ctor(Lucene.Net.Search.PositiveScoresOnlyCollector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.AcceptsDocsOutOfOrder">
            <summary>设置 PositiveScoresOnlyCollector.AcceptsDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.CollectInt32">
            <summary>设置 PositiveScoresOnlyCollector.Collect(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.ConstructorCollector">
            <summary>设置 PositiveScoresOnlyCollector.PositiveScoresOnlyCollector(Collector c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.SetNextReaderIndexReaderInt32">
            <summary>设置 PositiveScoresOnlyCollector.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.SetScorerScorer">
            <summary>设置 PositiveScoresOnlyCollector.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.AllInstances.AcceptsDocsOutOfOrder">
            <summary>设置 PositiveScoresOnlyCollector.AcceptsDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.AllInstances.CollectInt32">
            <summary>设置 PositiveScoresOnlyCollector.Collect(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 PositiveScoresOnlyCollector.SetNextReader(IndexReader reader, Int32 docBase) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPositiveScoresOnlyCollector.AllInstances.SetScorerScorer">
            <summary>设置 PositiveScoresOnlyCollector.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPrefixFilter">
            <summary>Lucene.Net.Search.PrefixFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixFilter.#ctor(Lucene.Net.Search.PrefixFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixFilter.ConstructorTerm">
            <summary>设置 PrefixFilter.PrefixFilter(Term prefix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixFilter.GetPrefix">
            <summary>设置 PrefixFilter.GetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixFilter.ToString">
            <summary>设置 PrefixFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPrefixFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixFilter.AllInstances.GetPrefix">
            <summary>设置 PrefixFilter.GetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixFilter.AllInstances.ToString01">
            <summary>设置 PrefixFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPrefixQuery">
            <summary>Lucene.Net.Search.PrefixQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixQuery.#ctor(Lucene.Net.Search.PrefixQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.ConstructorTerm">
            <summary>设置 PrefixQuery.PrefixQuery(Term prefix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.EqualsObject">
            <summary>设置 PrefixQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.GetEnumIndexReader">
            <summary>设置 PrefixQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.GetHashCode">
            <summary>设置 PrefixQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.GetPrefix">
            <summary>设置 PrefixQuery.GetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.ToStringString">
            <summary>设置 PrefixQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPrefixQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.AllInstances.EqualsObject">
            <summary>设置 PrefixQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.AllInstances.GetEnumIndexReader">
            <summary>设置 PrefixQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.AllInstances.GetHashCode01">
            <summary>设置 PrefixQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.AllInstances.GetPrefix">
            <summary>设置 PrefixQuery.GetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixQuery.AllInstances.ToStringString">
            <summary>设置 PrefixQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPrefixTermEnum">
            <summary>Lucene.Net.Search.PrefixTermEnum 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.#ctor(Lucene.Net.Search.PrefixTermEnum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.ConstructorIndexReaderTerm">
            <summary>设置 PrefixTermEnum.PrefixTermEnum(IndexReader reader, Term prefix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.Difference">
            <summary>设置 PrefixTermEnum.Difference() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.EndEnum">
            <summary>设置 PrefixTermEnum.EndEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.GetPrefixTerm">
            <summary>设置 PrefixTermEnum.GetPrefixTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.TermCompareTerm">
            <summary>设置 PrefixTermEnum.TermCompare(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.AllInstances.Difference">
            <summary>设置 PrefixTermEnum.Difference() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.AllInstances.EndEnum">
            <summary>设置 PrefixTermEnum.EndEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.AllInstances.GetPrefixTerm">
            <summary>设置 PrefixTermEnum.GetPrefixTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimPrefixTermEnum.AllInstances.TermCompareTerm">
            <summary>设置 PrefixTermEnum.TermCompare(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimQuery">
            <summary>Lucene.Net.Search.Query 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQuery.#ctor(Lucene.Net.Search.Query)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.Clone">
            <summary>设置 Query.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.Constructor">
            <summary>设置 Query.Query() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.CreateWeightSearcher">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.EqualsObject">
            <summary>设置 Query.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.GetHashCode">
            <summary>设置 Query.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.MergeBooleanQueriesBooleanQueryArray">
            <summary>设置 Query.MergeBooleanQueries(BooleanQuery[] queries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.ToString">
            <summary>设置 Query.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.Clone">
            <summary>设置 Query.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.EqualsObject">
            <summary>设置 Query.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.GetBoost">
            <summary>设置 Query.GetBoost() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.GetHashCode01">
            <summary>设置 Query.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.ToString01">
            <summary>设置 Query.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQuery.AllInstances.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimQueryTermVector">
            <summary>Lucene.Net.Search.QueryTermVector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryTermVector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryTermVector.#ctor(Lucene.Net.Search.QueryTermVector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryTermVector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryTermVector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryTermVector.Bind(Lucene.Net.Index.TermFreqVector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.ConstructorStringAnalyzer">
            <summary>设置 QueryTermVector.QueryTermVector(String queryString, Analyzer analyzer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.ConstructorStringArray">
            <summary>设置 QueryTermVector.QueryTermVector(String[] queryTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.GetField">
            <summary>设置 QueryTermVector.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.GetTermFrequencies">
            <summary>设置 QueryTermVector.GetTermFrequencies() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.GetTerms">
            <summary>设置 QueryTermVector.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.IndexOfString">
            <summary>设置 QueryTermVector.IndexOf(String term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.IndexesOfStringArrayInt32Int32">
            <summary>设置 QueryTermVector.IndexesOf(String[] terms, Int32 start, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.ProcessTermsStringArray">
            <summary>设置 QueryTermVector.ProcessTerms(String[] queryTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.Size">
            <summary>设置 QueryTermVector.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.ToString">
            <summary>设置 QueryTermVector.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances.GetField">
            <summary>设置 QueryTermVector.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances.GetTermFrequencies">
            <summary>设置 QueryTermVector.GetTermFrequencies() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances.GetTerms">
            <summary>设置 QueryTermVector.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances.IndexOfString">
            <summary>设置 QueryTermVector.IndexOf(String term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances.IndexesOfStringArrayInt32Int32">
            <summary>设置 QueryTermVector.IndexesOf(String[] terms, Int32 start, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances.ProcessTermsStringArray">
            <summary>设置 QueryTermVector.ProcessTerms(String[] queryTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances.Size">
            <summary>设置 QueryTermVector.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryTermVector.AllInstances.ToString01">
            <summary>设置 QueryTermVector.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter">
            <summary>Lucene.Net.Search.QueryWrapperFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.#ctor(Lucene.Net.Search.QueryWrapperFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.ConstructorQuery">
            <summary>设置 QueryWrapperFilter.QueryWrapperFilter(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.EqualsObject">
            <summary>设置 QueryWrapperFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.GetDocIdSetIndexReader">
            <summary>设置 QueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.GetHashCode">
            <summary>设置 QueryWrapperFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.ToString">
            <summary>设置 QueryWrapperFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.AllInstances.EqualsObject">
            <summary>设置 QueryWrapperFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.AllInstances.GetDocIdSetIndexReader">
            <summary>设置 QueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.AllInstances.GetHashCode01">
            <summary>设置 QueryWrapperFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimQueryWrapperFilter.AllInstances.ToString01">
            <summary>设置 QueryWrapperFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer">
            <summary>Lucene.Net.Search.ScoreCachingWrappingScorer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.#ctor(Lucene.Net.Search.ScoreCachingWrappingScorer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AdvanceInt32">
            <summary>设置 ScoreCachingWrappingScorer.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.ConstructorScorer">
            <summary>设置 ScoreCachingWrappingScorer.ScoreCachingWrappingScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.Doc">
            <summary>设置 ScoreCachingWrappingScorer.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.DocID">
            <summary>设置 ScoreCachingWrappingScorer.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.ExplainInt32">
            <summary>设置 ScoreCachingWrappingScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.GetSimilarity">
            <summary>设置 ScoreCachingWrappingScorer.GetSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.Next">
            <summary>设置 ScoreCachingWrappingScorer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.NextDoc">
            <summary>设置 ScoreCachingWrappingScorer.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.Score">
            <summary>设置 ScoreCachingWrappingScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.ScoreCollector">
            <summary>设置 ScoreCachingWrappingScorer.Score(Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.ScoreCollectorInt32Int32">
            <summary>设置 ScoreCachingWrappingScorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.SkipToInt32">
            <summary>设置 ScoreCachingWrappingScorer.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.AdvanceInt32">
            <summary>设置 ScoreCachingWrappingScorer.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.Doc">
            <summary>设置 ScoreCachingWrappingScorer.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.DocID">
            <summary>设置 ScoreCachingWrappingScorer.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.ExplainInt32">
            <summary>设置 ScoreCachingWrappingScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.GetSimilarity">
            <summary>设置 ScoreCachingWrappingScorer.GetSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.Next">
            <summary>设置 ScoreCachingWrappingScorer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.NextDoc">
            <summary>设置 ScoreCachingWrappingScorer.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.Score">
            <summary>设置 ScoreCachingWrappingScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.ScoreCollector">
            <summary>设置 ScoreCachingWrappingScorer.Score(Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.ScoreCollectorInt32Int32">
            <summary>设置 ScoreCachingWrappingScorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreCachingWrappingScorer.AllInstances.SkipToInt32">
            <summary>设置 ScoreCachingWrappingScorer.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimScoreDoc">
            <summary>Lucene.Net.Search.ScoreDoc 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScoreDoc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScoreDoc.#ctor(Lucene.Net.Search.ScoreDoc)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScoreDoc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScoreDoc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreDoc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreDoc.ConstructorInt32Single">
            <summary>设置 ScoreDoc.ScoreDoc(Int32 doc, Single score) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreDoc.ToString">
            <summary>设置 ScoreDoc.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimScoreDoc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScoreDoc.AllInstances.ToString01">
            <summary>设置 ScoreDoc.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimScorer">
            <summary>Lucene.Net.Search.Scorer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScorer.#ctor(Lucene.Net.Search.Scorer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScorer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimScorer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.ConstructorSimilarity">
            <summary>设置 Scorer.Scorer(Similarity similarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.ExplainInt32">
            <summary>设置 Scorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.GetSimilarity">
            <summary>设置 Scorer.GetSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.ScoreCollector">
            <summary>设置 Scorer.Score(Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.ScoreCollectorInt32Int32">
            <summary>设置 Scorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.ScoreHitCollector">
            <summary>设置 Scorer.Score(HitCollector hc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.ScoreHitCollectorInt32">
            <summary>设置 Scorer.Score(HitCollector hc, Int32 max) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimScorer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.AllInstances.ExplainInt32">
            <summary>设置 Scorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.AllInstances.GetSimilarity">
            <summary>设置 Scorer.GetSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.AllInstances.ScoreCollector">
            <summary>设置 Scorer.Score(Collector collector) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.AllInstances.ScoreCollectorInt32Int32">
            <summary>设置 Scorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.AllInstances.ScoreHitCollector">
            <summary>设置 Scorer.Score(HitCollector hc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimScorer.AllInstances.ScoreHitCollectorInt32">
            <summary>设置 Scorer.Score(HitCollector hc, Int32 max) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSearcher">
            <summary>Lucene.Net.Search.Searcher 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSearcher.#ctor(Lucene.Net.Search.Searcher)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSearcher.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSearcher.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSearcher.Bind(Lucene.Net.Search.Searchable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSearcher.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.Constructor">
            <summary>设置 Searcher.Searcher() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.CreateWeightQuery">
            <summary>设置 Searcher.CreateWeight(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.DocFreqsTermArray">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.ExplainQueryInt32">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.GetSimilarity">
            <summary>设置 Searcher.GetSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.InitBlock">
            <summary>设置 Searcher.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQuery">
            <summary>设置 Searcher.Search(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryCollector">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryFilter">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryFilterCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryFilterHitCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryFilterInt32">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryFilterInt32Sort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryFilterSort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryHitCollector">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQueryInt32">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchQuerySort">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SearchWeightFilterHitCollector">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.SetSimilaritySimilarity">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.CreateWeightQuery">
            <summary>设置 Searcher.CreateWeight(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.DocFreqsTermArray">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.ExplainQueryInt32">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.GetSimilarity">
            <summary>设置 Searcher.GetSimilarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.InitBlock">
            <summary>设置 Searcher.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQuery">
            <summary>设置 Searcher.Search(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryCollector">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryFilter">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryFilterCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryFilterHitCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryFilterInt32">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryFilterInt32Sort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryFilterSort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryHitCollector">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQueryInt32">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchQuerySort">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SearchWeightFilterHitCollector">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSearcher.AllInstances.SetSimilaritySimilarity">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSimilarity">
            <summary>Lucene.Net.Search.Similarity 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSimilarity.#ctor(Lucene.Net.Search.Similarity)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSimilarity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSimilarity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.ComputeNormStringFieldInvertState">
            <summary>设置 Similarity.ComputeNorm(String field, FieldInvertState state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.Constructor">
            <summary>设置 Similarity.Similarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.DecodeNormByte">
            <summary>设置 Similarity.DecodeNorm(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.EncodeNormSingle">
            <summary>设置 Similarity.EncodeNorm(Single f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.GetDefault">
            <summary>设置 Similarity.GetDefault() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.GetNormDecoder">
            <summary>设置 Similarity.GetNormDecoder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.IdfExplainTermSearcher">
            <summary>设置 Similarity.IdfExplain(Term term, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.IdfIListOfTermSearcher">
            <summary>设置 Similarity.Idf(IList`1&lt;Term&gt; terms, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.IdfTermSearcher">
            <summary>设置 Similarity.Idf(Term term, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.InitBlock">
            <summary>设置 Similarity.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.ScorePayloadInt32StringInt32Int32ByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(Int32 docId, String fieldName, Int32 start, Int32 end, Byte[] payload, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.ScorePayloadStringByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.SetDefaultSimilarity">
            <summary>设置 Similarity.SetDefault(Similarity similarity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.StaticConstructor">
            <summary>设置 Similarity.Similarity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.TfInt32">
            <summary>设置 Similarity.Tf(Int32 freq) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity._IdfExplainb__3">
            <summary>设置 Similarity.&lt;IdfExplain&gt;b__3() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity._idfExplainb__e">
            <summary>设置 Similarity.&lt;idfExplain&gt;b__e() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.idfExplainIListOfTermSearcher">
            <summary>设置 Similarity.idfExplain(IList`1&lt;Term&gt; terms, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.ComputeNormStringFieldInvertState">
            <summary>设置 Similarity.ComputeNorm(String field, FieldInvertState state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.IdfExplainTermSearcher">
            <summary>设置 Similarity.IdfExplain(Term term, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.IdfIListOfTermSearcher">
            <summary>设置 Similarity.Idf(IList`1&lt;Term&gt; terms, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.IdfTermSearcher">
            <summary>设置 Similarity.Idf(Term term, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.InitBlock">
            <summary>设置 Similarity.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.ScorePayloadInt32StringInt32Int32ByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(Int32 docId, String fieldName, Int32 start, Int32 end, Byte[] payload, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.ScorePayloadStringByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.TfInt32">
            <summary>设置 Similarity.Tf(Int32 freq) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarity.AllInstances.idfExplainIListOfTermSearcher">
            <summary>设置 Similarity.idfExplain(IList`1&lt;Term&gt; terms, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSimilarityDelegator">
            <summary>Lucene.Net.Search.SimilarityDelegator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.#ctor(Lucene.Net.Search.SimilarityDelegator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.ComputeNormStringFieldInvertState">
            <summary>设置 SimilarityDelegator.ComputeNorm(String fieldName, FieldInvertState state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.ConstructorSimilarity">
            <summary>设置 SimilarityDelegator.SimilarityDelegator(Similarity delegee) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.CoordInt32Int32">
            <summary>设置 SimilarityDelegator.Coord(Int32 overlap, Int32 maxOverlap) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.IdfInt32Int32">
            <summary>设置 SimilarityDelegator.Idf(Int32 docFreq, Int32 numDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.LengthNormStringInt32">
            <summary>设置 SimilarityDelegator.LengthNorm(String fieldName, Int32 numTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.QueryNormSingle">
            <summary>设置 SimilarityDelegator.QueryNorm(Single sumOfSquaredWeights) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.ScorePayloadStringByteArrayInt32Int32">
            <summary>设置 SimilarityDelegator.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.SloppyFreqInt32">
            <summary>设置 SimilarityDelegator.SloppyFreq(Int32 distance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.TfSingle">
            <summary>设置 SimilarityDelegator.Tf(Single freq) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances.ComputeNormStringFieldInvertState">
            <summary>设置 SimilarityDelegator.ComputeNorm(String fieldName, FieldInvertState state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances.CoordInt32Int32">
            <summary>设置 SimilarityDelegator.Coord(Int32 overlap, Int32 maxOverlap) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances.IdfInt32Int32">
            <summary>设置 SimilarityDelegator.Idf(Int32 docFreq, Int32 numDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances.LengthNormStringInt32">
            <summary>设置 SimilarityDelegator.LengthNorm(String fieldName, Int32 numTerms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances.QueryNormSingle">
            <summary>设置 SimilarityDelegator.QueryNorm(Single sumOfSquaredWeights) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances.ScorePayloadStringByteArrayInt32Int32">
            <summary>设置 SimilarityDelegator.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances.SloppyFreqInt32">
            <summary>设置 SimilarityDelegator.SloppyFreq(Int32 distance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSimilarityDelegator.AllInstances.TfSingle">
            <summary>设置 SimilarityDelegator.Tf(Single freq) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSort">
            <summary>Lucene.Net.Search.Sort 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSort.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSort.#ctor(Lucene.Net.Search.Sort)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSort.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSort.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.Constructor">
            <summary>设置 Sort.Sort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.ConstructorSortField">
            <summary>设置 Sort.Sort(SortField field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.ConstructorSortFieldArray">
            <summary>设置 Sort.Sort(SortField[] fields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.ConstructorString">
            <summary>设置 Sort.Sort(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.ConstructorStringArray">
            <summary>设置 Sort.Sort(String[] fields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.ConstructorStringBoolean">
            <summary>设置 Sort.Sort(String field, Boolean reverse) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.EqualsObject">
            <summary>设置 Sort.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.GetHashCode">
            <summary>设置 Sort.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.GetSort">
            <summary>设置 Sort.GetSort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.SetSortSortField">
            <summary>设置 Sort.SetSort(SortField field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.SetSortSortFieldArray">
            <summary>设置 Sort.SetSort(SortField[] fields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.SetSortString">
            <summary>设置 Sort.SetSort(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.SetSortStringArray">
            <summary>设置 Sort.SetSort(String[] fieldnames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.SetSortStringBoolean">
            <summary>设置 Sort.SetSort(String field, Boolean reverse) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.StaticConstructor">
            <summary>设置 Sort.Sort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.ToString">
            <summary>设置 Sort.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSort.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.EqualsObject">
            <summary>设置 Sort.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.GetHashCode01">
            <summary>设置 Sort.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.GetSort">
            <summary>设置 Sort.GetSort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.SetSortSortField">
            <summary>设置 Sort.SetSort(SortField field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.SetSortSortFieldArray">
            <summary>设置 Sort.SetSort(SortField[] fields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.SetSortString">
            <summary>设置 Sort.SetSort(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.SetSortStringArray">
            <summary>设置 Sort.SetSort(String[] fieldnames) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.SetSortStringBoolean">
            <summary>设置 Sort.SetSort(String field, Boolean reverse) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSort.AllInstances.ToString01">
            <summary>设置 Sort.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSortField">
            <summary>Lucene.Net.Search.SortField 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSortField.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSortField.#ctor(Lucene.Net.Search.SortField)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSortField.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSortField.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorString">
            <summary>设置 SortField.SortField(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringBoolean">
            <summary>设置 SortField.SortField(String field, Boolean reverse) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringFieldComparatorSource">
            <summary>设置 SortField.SortField(String field, FieldComparatorSource comparator) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringFieldComparatorSourceBoolean">
            <summary>设置 SortField.SortField(String field, FieldComparatorSource comparator, Boolean reverse) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringInt32">
            <summary>设置 SortField.SortField(String field, Int32 type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringInt32Boolean">
            <summary>设置 SortField.SortField(String field, Int32 type, Boolean reverse) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringParser">
            <summary>设置 SortField.SortField(String field, Parser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringParserBoolean">
            <summary>设置 SortField.SortField(String field, Parser parser, Boolean reverse) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringSortComparatorSource">
            <summary>设置 SortField.SortField(String field, SortComparatorSource comparator) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ConstructorStringSortComparatorSourceBoolean">
            <summary>设置 SortField.SortField(String field, SortComparatorSource comparator, Boolean reverse) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.DetectFieldTypeIndexReaderString">
            <summary>设置 SortField.DetectFieldType(IndexReader reader, String fieldKey) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.EqualsObject">
            <summary>设置 SortField.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetComparatorInt32Int32">
            <summary>设置 SortField.GetComparator(Int32 numHits, Int32 sortPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetComparatorSource">
            <summary>设置 SortField.GetComparatorSource() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetFactory">
            <summary>设置 SortField.GetFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetField">
            <summary>设置 SortField.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetHashCode">
            <summary>设置 SortField.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetParser">
            <summary>设置 SortField.GetParser() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetReverse">
            <summary>设置 SortField.GetReverse() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetType">
            <summary>设置 SortField.GetType() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.GetUseLegacySearch">
            <summary>设置 SortField.GetUseLegacySearch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.InitFieldTypeStringInt32">
            <summary>设置 SortField.InitFieldType(String field, Int32 type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.OnDeserializedStreamingContext">
            <summary>设置 SortField.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.SetUseLegacySearchBoolean">
            <summary>设置 SortField.SetUseLegacySearch(Boolean legacy) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.StaticConstructor">
            <summary>设置 SortField.SortField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.ToString">
            <summary>设置 SortField.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSortField.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.EqualsObject">
            <summary>设置 SortField.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetComparatorInt32Int32">
            <summary>设置 SortField.GetComparator(Int32 numHits, Int32 sortPos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetComparatorSource">
            <summary>设置 SortField.GetComparatorSource() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetFactory">
            <summary>设置 SortField.GetFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetField">
            <summary>设置 SortField.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetHashCode01">
            <summary>设置 SortField.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetParser">
            <summary>设置 SortField.GetParser() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetReverse">
            <summary>设置 SortField.GetReverse() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetType01">
            <summary>设置 SortField.GetType() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.GetUseLegacySearch">
            <summary>设置 SortField.GetUseLegacySearch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.InitFieldTypeStringInt32">
            <summary>设置 SortField.InitFieldType(String field, Int32 type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.OnDeserializedStreamingContext">
            <summary>设置 SortField.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.SetUseLegacySearchBoolean">
            <summary>设置 SortField.SetUseLegacySearch(Boolean legacy) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSortField.AllInstances.ToString01">
            <summary>设置 SortField.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanFilter">
            <summary>Lucene.Net.Search.SpanFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilter.#ctor(Lucene.Net.Search.SpanFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilter.Constructor">
            <summary>设置 SpanFilter.SpanFilter() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanFilterResult">
            <summary>Lucene.Net.Search.SpanFilterResult 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.#ctor(Lucene.Net.Search.SpanFilterResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ConstructorBitArrayListOfSpanFilterResultPositionInfo">
            <summary>设置 SpanFilterResult.SpanFilterResult(BitArray bits, List`1&lt;PositionInfo&gt; positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ConstructorDocIdSetListOfSpanFilterResultPositionInfo">
            <summary>设置 SpanFilterResult.SpanFilterResult(DocIdSet docIdSet, List`1&lt;PositionInfo&gt; positions) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.GetBits">
            <summary>设置 SpanFilterResult.GetBits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.GetDocIdSet">
            <summary>设置 SpanFilterResult.GetDocIdSet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.GetPositions">
            <summary>设置 SpanFilterResult.GetPositions() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanFilterResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.AllInstances.GetBits">
            <summary>设置 SpanFilterResult.GetBits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.AllInstances.GetDocIdSet">
            <summary>设置 SpanFilterResult.GetDocIdSet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.AllInstances.GetPositions">
            <summary>设置 SpanFilterResult.GetPositions() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo">
            <summary>Lucene.Net.Search.SpanFilterResult+PositionInfo 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.#ctor(Lucene.Net.Search.SpanFilterResult.PositionInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.AddPositionInt32Int32">
            <summary>设置 PositionInfo.AddPosition(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.ConstructorInt32">
            <summary>设置 PositionInfo.PositionInfo(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.GetDoc">
            <summary>设置 PositionInfo.GetDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.GetPositions">
            <summary>设置 PositionInfo.GetPositions() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.AllInstances.AddPositionInt32Int32">
            <summary>设置 PositionInfo.AddPosition(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.AllInstances.GetDoc">
            <summary>设置 PositionInfo.GetDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimPositionInfo.AllInstances.GetPositions">
            <summary>设置 PositionInfo.GetPositions() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd">
            <summary>Lucene.Net.Search.SpanFilterResult+StartEnd 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.#ctor(Lucene.Net.Search.SpanFilterResult.StartEnd)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.ConstructorInt32Int32">
            <summary>设置 StartEnd.StartEnd(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.GetEnd">
            <summary>设置 StartEnd.GetEnd() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.GetStart">
            <summary>设置 StartEnd.GetStart() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.AllInstances.GetEnd">
            <summary>设置 StartEnd.GetEnd() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanFilterResult.ShimStartEnd.AllInstances.GetStart">
            <summary>设置 StartEnd.GetStart() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanQueryFilter">
            <summary>Lucene.Net.Search.SpanQueryFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.#ctor(Lucene.Net.Search.SpanQueryFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.BitSpansIndexReader">
            <summary>设置 SpanQueryFilter.BitSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.Constructor">
            <summary>设置 SpanQueryFilter.SpanQueryFilter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.ConstructorSpanQuery">
            <summary>设置 SpanQueryFilter.SpanQueryFilter(SpanQuery query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.EqualsObject">
            <summary>设置 SpanQueryFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.GetDocIdSetIndexReader">
            <summary>设置 SpanQueryFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.GetHashCode">
            <summary>设置 SpanQueryFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.GetQuery">
            <summary>设置 SpanQueryFilter.GetQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.ToString">
            <summary>设置 SpanQueryFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.AllInstances.BitSpansIndexReader">
            <summary>设置 SpanQueryFilter.BitSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.AllInstances.EqualsObject">
            <summary>设置 SpanQueryFilter.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.AllInstances.GetDocIdSetIndexReader">
            <summary>设置 SpanQueryFilter.GetDocIdSet(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.AllInstances.GetHashCode01">
            <summary>设置 SpanQueryFilter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.AllInstances.GetQuery">
            <summary>设置 SpanQueryFilter.GetQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimSpanQueryFilter.AllInstances.ToString01">
            <summary>设置 SpanQueryFilter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimStringIndex">
            <summary>Lucene.Net.Search.StringIndex 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimStringIndex.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimStringIndex.#ctor(Lucene.Net.Search.StringIndex)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimStringIndex.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimStringIndex.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimStringIndex.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimStringIndex.BinarySearchLookupString">
            <summary>设置 StringIndex.BinarySearchLookup(String key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimStringIndex.ConstructorInt32ArrayStringArray">
            <summary>设置 StringIndex.StringIndex(Int32[] values, String[] lookup) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimStringIndex.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimStringIndex.AllInstances.BinarySearchLookupString">
            <summary>设置 StringIndex.BinarySearchLookup(String key) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermQuery">
            <summary>Lucene.Net.Search.TermQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermQuery.#ctor(Lucene.Net.Search.TermQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.ConstructorTerm">
            <summary>设置 TermQuery.TermQuery(Term t) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.CreateWeightSearcher">
            <summary>设置 TermQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.EqualsObject">
            <summary>设置 TermQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 TermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.GetHashCode">
            <summary>设置 TermQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.GetTerm">
            <summary>设置 TermQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.ToStringString">
            <summary>设置 TermQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 TermQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.AllInstances.EqualsObject">
            <summary>设置 TermQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 TermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.AllInstances.GetHashCode01">
            <summary>设置 TermQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.AllInstances.GetTerm">
            <summary>设置 TermQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermQuery.AllInstances.ToStringString">
            <summary>设置 TermQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermRangeFilter">
            <summary>Lucene.Net.Search.TermRangeFilter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeFilter.#ctor(Lucene.Net.Search.TermRangeFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.ConstructorStringStringStringBooleanBoolean">
            <summary>设置 TermRangeFilter.TermRangeFilter(String fieldName, String lowerTerm, String upperTerm, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.GetField">
            <summary>设置 TermRangeFilter.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.GetLowerTerm">
            <summary>设置 TermRangeFilter.GetLowerTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.GetUpperTerm">
            <summary>设置 TermRangeFilter.GetUpperTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.IncludesLower">
            <summary>设置 TermRangeFilter.IncludesLower() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.IncludesUpper">
            <summary>设置 TermRangeFilter.IncludesUpper() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.LessStringString">
            <summary>设置 TermRangeFilter.Less(String fieldName, String upperTerm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.MoreStringString">
            <summary>设置 TermRangeFilter.More(String fieldName, String lowerTerm) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermRangeFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.AllInstances.GetField">
            <summary>设置 TermRangeFilter.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.AllInstances.GetLowerTerm">
            <summary>设置 TermRangeFilter.GetLowerTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.AllInstances.GetUpperTerm">
            <summary>设置 TermRangeFilter.GetUpperTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.AllInstances.IncludesLower">
            <summary>设置 TermRangeFilter.IncludesLower() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeFilter.AllInstances.IncludesUpper">
            <summary>设置 TermRangeFilter.IncludesUpper() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermRangeQuery">
            <summary>Lucene.Net.Search.TermRangeQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeQuery.#ctor(Lucene.Net.Search.TermRangeQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.ConstructorStringStringStringBooleanBoolean">
            <summary>设置 TermRangeQuery.TermRangeQuery(String field, String lowerTerm, String upperTerm, Boolean includeLower, Boolean includeUpper) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.EqualsObject">
            <summary>设置 TermRangeQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.GetEnumIndexReader">
            <summary>设置 TermRangeQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.GetField">
            <summary>设置 TermRangeQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.GetHashCode">
            <summary>设置 TermRangeQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.GetLowerTerm">
            <summary>设置 TermRangeQuery.GetLowerTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.GetUpperTerm">
            <summary>设置 TermRangeQuery.GetUpperTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.IncludesLower">
            <summary>设置 TermRangeQuery.IncludesLower() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.IncludesUpper">
            <summary>设置 TermRangeQuery.IncludesUpper() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.ToStringString">
            <summary>设置 TermRangeQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.EqualsObject">
            <summary>设置 TermRangeQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.GetEnumIndexReader">
            <summary>设置 TermRangeQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.GetField">
            <summary>设置 TermRangeQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.GetHashCode01">
            <summary>设置 TermRangeQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.GetLowerTerm">
            <summary>设置 TermRangeQuery.GetLowerTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.GetUpperTerm">
            <summary>设置 TermRangeQuery.GetUpperTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.IncludesLower">
            <summary>设置 TermRangeQuery.IncludesLower() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.IncludesUpper">
            <summary>设置 TermRangeQuery.IncludesUpper() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeQuery.AllInstances.ToStringString">
            <summary>设置 TermRangeQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum">
            <summary>Lucene.Net.Search.TermRangeTermEnum 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.#ctor(Lucene.Net.Search.TermRangeTermEnum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.Difference">
            <summary>设置 TermRangeTermEnum.Difference() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.EndEnum">
            <summary>设置 TermRangeTermEnum.EndEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.TermCompareTerm">
            <summary>设置 TermRangeTermEnum.TermCompare(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.AllInstances.Difference">
            <summary>设置 TermRangeTermEnum.Difference() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.AllInstances.EndEnum">
            <summary>设置 TermRangeTermEnum.EndEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermRangeTermEnum.AllInstances.TermCompareTerm">
            <summary>设置 TermRangeTermEnum.TermCompare(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermScorer">
            <summary>Lucene.Net.Search.TermScorer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermScorer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermScorer.#ctor(Lucene.Net.Search.TermScorer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermScorer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTermScorer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AdvanceInt32">
            <summary>设置 TermScorer.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.ConstructorWeightTermDocsSimilarityByteArray">
            <summary>设置 TermScorer.TermScorer(Weight weight, TermDocs td, Similarity similarity, Byte[] norms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.Doc">
            <summary>设置 TermScorer.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.DocID">
            <summary>设置 TermScorer.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.ExplainInt32">
            <summary>设置 TermScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.Next">
            <summary>设置 TermScorer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.NextDoc">
            <summary>设置 TermScorer.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.Score">
            <summary>设置 TermScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.ScoreCollector">
            <summary>设置 TermScorer.Score(Collector c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.ScoreCollectorInt32Int32">
            <summary>设置 TermScorer.Score(Collector c, Int32 end, Int32 firstDocID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.ScoreHitCollector">
            <summary>设置 TermScorer.Score(HitCollector hc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.ScoreHitCollectorInt32">
            <summary>设置 TermScorer.Score(HitCollector c, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.SkipToInt32">
            <summary>设置 TermScorer.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.StaticConstructor">
            <summary>设置 TermScorer.TermScorer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.ToString">
            <summary>设置 TermScorer.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.AdvanceInt32">
            <summary>设置 TermScorer.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.Doc">
            <summary>设置 TermScorer.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.DocID">
            <summary>设置 TermScorer.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.ExplainInt32">
            <summary>设置 TermScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.Next">
            <summary>设置 TermScorer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.NextDoc">
            <summary>设置 TermScorer.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.Score">
            <summary>设置 TermScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.ScoreCollector">
            <summary>设置 TermScorer.Score(Collector c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.ScoreCollectorInt32Int32">
            <summary>设置 TermScorer.Score(Collector c, Int32 end, Int32 firstDocID) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.ScoreHitCollector">
            <summary>设置 TermScorer.Score(HitCollector hc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.ScoreHitCollectorInt32">
            <summary>设置 TermScorer.Score(HitCollector c, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.SkipToInt32">
            <summary>设置 TermScorer.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTermScorer.AllInstances.ToString01">
            <summary>设置 TermScorer.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector">
            <summary>Lucene.Net.Search.TimeLimitingCollector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.#ctor(Lucene.Net.Search.TimeLimitingCollector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AcceptsDocsOutOfOrder">
            <summary>设置 TimeLimitingCollector.AcceptsDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.CollectInt32">
            <summary>设置 TimeLimitingCollector.Collect(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ConstructorCollectorInt64">
            <summary>设置 TimeLimitingCollector.TimeLimitingCollector(Collector collector, Int64 timeAllowed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.GetResolution">
            <summary>设置 TimeLimitingCollector.GetResolution() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.InitBlock">
            <summary>设置 TimeLimitingCollector.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.IsGreedy">
            <summary>设置 TimeLimitingCollector.IsGreedy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.SetGreedyBoolean">
            <summary>设置 TimeLimitingCollector.SetGreedy(Boolean greedy) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.SetNextReaderIndexReaderInt32">
            <summary>设置 TimeLimitingCollector.SetNextReader(IndexReader reader, Int32 base_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.SetResolutionUInt32">
            <summary>设置 TimeLimitingCollector.SetResolution(UInt32 newResolution) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.SetScorerScorer">
            <summary>设置 TimeLimitingCollector.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.StaticConstructor">
            <summary>设置 TimeLimitingCollector.TimeLimitingCollector() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AllInstances.AcceptsDocsOutOfOrder">
            <summary>设置 TimeLimitingCollector.AcceptsDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AllInstances.CollectInt32">
            <summary>设置 TimeLimitingCollector.Collect(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AllInstances.InitBlock">
            <summary>设置 TimeLimitingCollector.InitBlock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AllInstances.IsGreedy">
            <summary>设置 TimeLimitingCollector.IsGreedy() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AllInstances.SetGreedyBoolean">
            <summary>设置 TimeLimitingCollector.SetGreedy(Boolean greedy) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 TimeLimitingCollector.SetNextReader(IndexReader reader, Int32 base_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.AllInstances.SetScorerScorer">
            <summary>设置 TimeLimitingCollector.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException">
            <summary>Lucene.Net.Search.TimeLimitingCollector+TimeExceededException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.#ctor(Lucene.Net.Search.TimeLimitingCollector.TimeExceededException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.ConstructorInt64Int64Int32">
            <summary>设置 TimeExceededException.TimeExceededException(Int64 timeAllowed, Int64 timeElapsed, Int32 lastDocCollected) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.GetLastDocCollected">
            <summary>设置 TimeExceededException.GetLastDocCollected() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.GetTimeAllowed">
            <summary>设置 TimeExceededException.GetTimeAllowed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.GetTimeElapsed">
            <summary>设置 TimeExceededException.GetTimeElapsed() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.AllInstances.GetLastDocCollected">
            <summary>设置 TimeExceededException.GetLastDocCollected() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.AllInstances.GetTimeAllowed">
            <summary>设置 TimeExceededException.GetTimeAllowed() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTimeLimitingCollector.ShimTimeExceededException.AllInstances.GetTimeElapsed">
            <summary>设置 TimeExceededException.GetTimeElapsed() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopDocs">
            <summary>Lucene.Net.Search.TopDocs 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopDocs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopDocs.#ctor(Lucene.Net.Search.TopDocs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopDocs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopDocs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.ConstructorInt32ScoreDocArray">
            <summary>设置 TopDocs.TopDocs(Int32 totalHits, ScoreDoc[] scoreDocs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.ConstructorInt32ScoreDocArraySingle">
            <summary>设置 TopDocs.TopDocs(Int32 totalHits, ScoreDoc[] scoreDocs, Single maxScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.GetMaxScore">
            <summary>设置 TopDocs.GetMaxScore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.MaxScoreGet">
            <summary>设置 TopDocs.get_MaxScore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.MaxScoreSetSingle">
            <summary>设置 TopDocs.set_MaxScore(Single value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.ScoreDocsGet">
            <summary>设置 TopDocs.get_ScoreDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.ScoreDocsSetScoreDocArray">
            <summary>设置 TopDocs.set_ScoreDocs(ScoreDoc[] value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.SetMaxScoreSingle">
            <summary>设置 TopDocs.SetMaxScore(Single maxScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.TotalHitsGet">
            <summary>设置 TopDocs.get_TotalHits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.TotalHitsSetInt32">
            <summary>设置 TopDocs.set_TotalHits(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances.GetMaxScore">
            <summary>设置 TopDocs.GetMaxScore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances.MaxScoreGet">
            <summary>设置 TopDocs.get_MaxScore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances.MaxScoreSetSingle">
            <summary>设置 TopDocs.set_MaxScore(Single value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances.ScoreDocsGet">
            <summary>设置 TopDocs.get_ScoreDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances.ScoreDocsSetScoreDocArray">
            <summary>设置 TopDocs.set_ScoreDocs(ScoreDoc[] value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances.SetMaxScoreSingle">
            <summary>设置 TopDocs.SetMaxScore(Single maxScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances.TotalHitsGet">
            <summary>设置 TopDocs.get_TotalHits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocs.AllInstances.TotalHitsSetInt32">
            <summary>设置 TopDocs.set_TotalHits(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1">
            <summary>Lucene.Net.Search.TopDocsCollector`1 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.#ctor(Lucene.Net.Search.TopDocsCollector{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.ConstructorPriorityQueueOfT0">
            <summary>设置 TopDocsCollector`1.TopDocsCollector`1(PriorityQueue`1&lt;!0&gt; pq) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.GetTotalHits">
            <summary>设置 TopDocsCollector`1.GetTotalHits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.NewTopDocsScoreDocArrayInt32">
            <summary>设置 TopDocsCollector`1.NewTopDocs(ScoreDoc[] results, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.PopulateResultsScoreDocArrayInt32">
            <summary>设置 TopDocsCollector`1.PopulateResults(ScoreDoc[] results, Int32 howMany) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.StaticConstructor">
            <summary>设置 TopDocsCollector`1.TopDocsCollector`1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.TopDocs">
            <summary>设置 TopDocsCollector`1.TopDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.TopDocsInt32">
            <summary>设置 TopDocsCollector`1.TopDocs(Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.TopDocsInt32Int32">
            <summary>设置 TopDocsCollector`1.TopDocs(Int32 start, Int32 howMany) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.AllInstances.GetTotalHits">
            <summary>设置 TopDocsCollector`1.GetTotalHits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.AllInstances.NewTopDocsScoreDocArrayInt32">
            <summary>设置 TopDocsCollector`1.NewTopDocs(ScoreDoc[] results, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.AllInstances.PopulateResultsScoreDocArrayInt32">
            <summary>设置 TopDocsCollector`1.PopulateResults(ScoreDoc[] results, Int32 howMany) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.AllInstances.TopDocs">
            <summary>设置 TopDocsCollector`1.TopDocs() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.AllInstances.TopDocsInt32">
            <summary>设置 TopDocsCollector`1.TopDocs(Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopDocsCollector`1.AllInstances.TopDocsInt32Int32">
            <summary>设置 TopDocsCollector`1.TopDocs(Int32 start, Int32 howMany) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopFieldCollector">
            <summary>Lucene.Net.Search.TopFieldCollector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopFieldCollector.#ctor(Lucene.Net.Search.TopFieldCollector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopFieldCollector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopFieldCollector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.AcceptsDocsOutOfOrder">
            <summary>设置 TopFieldCollector.AcceptsDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.AddInt32Int32Single">
            <summary>设置 TopFieldCollector.Add(Int32 slot, Int32 doc, Single score) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.ConstructorPriorityQueueOfFieldValueHitQueueEntryInt32Boolean">
            <summary>设置 TopFieldCollector.TopFieldCollector(PriorityQueue`1&lt;Entry&gt; pq, Int32 numHits, Boolean fillFields) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.CreateSortInt32BooleanBooleanBooleanBoolean">
            <summary>设置 TopFieldCollector.Create(Sort sort, Int32 numHits, Boolean fillFields, Boolean trackDocScores, Boolean trackMaxScore, Boolean docsScoredInOrder) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.NewTopDocsScoreDocArrayInt32">
            <summary>设置 TopFieldCollector.NewTopDocs(ScoreDoc[] results, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.PopulateResultsScoreDocArrayInt32">
            <summary>设置 TopFieldCollector.PopulateResults(ScoreDoc[] results, Int32 howMany) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.StaticConstructor">
            <summary>设置 TopFieldCollector.TopFieldCollector() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopFieldCollector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.AllInstances.AcceptsDocsOutOfOrder">
            <summary>设置 TopFieldCollector.AcceptsDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.AllInstances.AddInt32Int32Single">
            <summary>设置 TopFieldCollector.Add(Int32 slot, Int32 doc, Single score) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.AllInstances.NewTopDocsScoreDocArrayInt32">
            <summary>设置 TopFieldCollector.NewTopDocs(ScoreDoc[] results, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldCollector.AllInstances.PopulateResultsScoreDocArrayInt32">
            <summary>设置 TopFieldCollector.PopulateResults(ScoreDoc[] results, Int32 howMany) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopFieldDocs">
            <summary>Lucene.Net.Search.TopFieldDocs 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopFieldDocs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopFieldDocs.#ctor(Lucene.Net.Search.TopFieldDocs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopFieldDocs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopFieldDocs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldDocs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopFieldDocs.ConstructorInt32ScoreDocArraySortFieldArraySingle">
            <summary>设置 TopFieldDocs.TopFieldDocs(Int32 totalHits, ScoreDoc[] scoreDocs, SortField[] fields, Single maxScore) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopFieldDocs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector">
            <summary>Lucene.Net.Search.TopScoreDocCollector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.#ctor(Lucene.Net.Search.TopScoreDocCollector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.ConstructorInt32">
            <summary>设置 TopScoreDocCollector.TopScoreDocCollector(Int32 numHits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.CreateInt32Boolean">
            <summary>设置 TopScoreDocCollector.Create(Int32 numHits, Boolean docsScoredInOrder) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.NewTopDocsScoreDocArrayInt32">
            <summary>设置 TopScoreDocCollector.NewTopDocs(ScoreDoc[] results, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.SetNextReaderIndexReaderInt32">
            <summary>设置 TopScoreDocCollector.SetNextReader(IndexReader reader, Int32 base_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.SetScorerScorer">
            <summary>设置 TopScoreDocCollector.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.AllInstances.NewTopDocsScoreDocArrayInt32">
            <summary>设置 TopScoreDocCollector.NewTopDocs(ScoreDoc[] results, Int32 start) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.AllInstances.SetNextReaderIndexReaderInt32">
            <summary>设置 TopScoreDocCollector.SetNextReader(IndexReader reader, Int32 base_Renamed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimTopScoreDocCollector.AllInstances.SetScorerScorer">
            <summary>设置 TopScoreDocCollector.SetScorer(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimWeight">
            <summary>Lucene.Net.Search.Weight 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWeight.#ctor(Lucene.Net.Search.Weight)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWeight.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWeight.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWeight.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWeight.Constructor">
            <summary>设置 Weight.Weight() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWeight.ScoresDocsOutOfOrder">
            <summary>设置 Weight.ScoresDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimWeight.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWeight.AllInstances.ScoresDocsOutOfOrder">
            <summary>设置 Weight.ScoresDocsOutOfOrder() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimWildcardQuery">
            <summary>Lucene.Net.Search.WildcardQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardQuery.#ctor(Lucene.Net.Search.WildcardQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.ConstructorTerm">
            <summary>设置 WildcardQuery.WildcardQuery(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.EqualsObject">
            <summary>设置 WildcardQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.GetEnumIndexReader">
            <summary>设置 WildcardQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.GetHashCode">
            <summary>设置 WildcardQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.GetTerm">
            <summary>设置 WildcardQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.RewriteIndexReader">
            <summary>设置 WildcardQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.ToStringString">
            <summary>设置 WildcardQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimWildcardQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.AllInstances.EqualsObject">
            <summary>设置 WildcardQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.AllInstances.GetEnumIndexReader">
            <summary>设置 WildcardQuery.GetEnum(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.AllInstances.GetHashCode01">
            <summary>设置 WildcardQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.AllInstances.GetTerm">
            <summary>设置 WildcardQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.AllInstances.RewriteIndexReader">
            <summary>设置 WildcardQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardQuery.AllInstances.ToStringString">
            <summary>设置 WildcardQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimWildcardTermEnum">
            <summary>Lucene.Net.Search.WildcardTermEnum 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.#ctor(Lucene.Net.Search.WildcardTermEnum)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.ConstructorIndexReaderTerm">
            <summary>设置 WildcardTermEnum.WildcardTermEnum(IndexReader reader, Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.Difference">
            <summary>设置 WildcardTermEnum.Difference() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.EndEnum">
            <summary>设置 WildcardTermEnum.EndEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.TermCompareTerm">
            <summary>设置 WildcardTermEnum.TermCompare(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.WildcardEqualsStringInt32StringInt32">
            <summary>设置 WildcardTermEnum.WildcardEquals(String pattern, Int32 patternIdx, String string_Renamed, Int32 stringIdx) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.AllInstances.Difference">
            <summary>设置 WildcardTermEnum.Difference() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.AllInstances.EndEnum">
            <summary>设置 WildcardTermEnum.EndEnum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.ShimWildcardTermEnum.AllInstances.TermCompareTerm">
            <summary>设置 WildcardTermEnum.TermCompare(Term term) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubBooleanClause">
            <summary>Lucene.Net.Search.BooleanClause 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.#ctor(Lucene.Net.Search.Query,Lucene.Net.Search.BooleanClause.Occur)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.Equals(System.Object)">
            <summary>设置 BooleanClause.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.EqualsObject">
            <summary>设置 BooleanClause.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.GetHashCode">
            <summary>设置 BooleanClause.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.GetHashCode01">
            <summary>设置 BooleanClause.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.GetOccur">
            <summary>设置 BooleanClause.GetOccur() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.GetOccur01">
            <summary>设置 BooleanClause.GetOccur() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.GetQuery">
            <summary>设置 BooleanClause.GetQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.GetQuery01">
            <summary>设置 BooleanClause.GetQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.InitializeStub">
            <summary>初始化 type StubBooleanClause 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.IsProhibited">
            <summary>设置 BooleanClause.IsProhibited() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.IsProhibited01">
            <summary>设置 BooleanClause.IsProhibited() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.IsRequired">
            <summary>设置 BooleanClause.IsRequired() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.IsRequired01">
            <summary>设置 BooleanClause.IsRequired() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.SetOccur(Lucene.Net.Search.BooleanClause.Occur)">
            <summary>设置 BooleanClause.SetOccur(Occur occur) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.SetOccurBooleanClauseOccur">
            <summary>设置 BooleanClause.SetOccur(Occur occur) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.SetQuery(Lucene.Net.Search.Query)">
            <summary>设置 BooleanClause.SetQuery(Query query) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.SetQueryQuery">
            <summary>设置 BooleanClause.SetQuery(Query query) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanClause.ToString">
            <summary>设置 BooleanClause.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanClause.ToString01">
            <summary>设置 BooleanClause.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubBooleanClause.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubBooleanClause.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubBooleanClause.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubBooleanQuery">
            <summary>Lucene.Net.Search.BooleanQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.Add(Lucene.Net.Search.BooleanClause)">
            <summary>设置 BooleanQuery.Add(BooleanClause clause) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.Add(Lucene.Net.Search.Query,Lucene.Net.Search.BooleanClause.Occur)">
            <summary>设置 BooleanQuery.Add(Query query, Occur occur) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.AddBooleanClause">
            <summary>设置 BooleanQuery.Add(BooleanClause clause) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.AddQueryBooleanClauseOccur">
            <summary>设置 BooleanQuery.Add(Query query, Occur occur) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.Clauses">
            <summary>设置 BooleanQuery.Clauses() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.Clauses01">
            <summary>设置 BooleanQuery.Clauses() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.Clone">
            <summary>设置 BooleanQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.Clone01">
            <summary>设置 BooleanQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 BooleanQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.CreateWeightSearcher">
            <summary>设置 BooleanQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.Equals(System.Object)">
            <summary>设置 BooleanQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.EqualsObject">
            <summary>设置 BooleanQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 BooleanQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 BooleanQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.GetClauses">
            <summary>设置 BooleanQuery.GetClauses() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.GetClauses01">
            <summary>设置 BooleanQuery.GetClauses() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.GetHashCode">
            <summary>设置 BooleanQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.GetHashCode01">
            <summary>设置 BooleanQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.GetMinimumNumberShouldMatch">
            <summary>设置 BooleanQuery.GetMinimumNumberShouldMatch() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.GetMinimumNumberShouldMatch01">
            <summary>设置 BooleanQuery.GetMinimumNumberShouldMatch() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 BooleanQuery.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.GetSimilaritySearcher">
            <summary>设置 BooleanQuery.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.InitializeStub">
            <summary>初始化 type StubBooleanQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.IsCoordDisabled">
            <summary>设置 BooleanQuery.IsCoordDisabled() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.IsCoordDisabled01">
            <summary>设置 BooleanQuery.IsCoordDisabled() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 BooleanQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.RewriteIndexReader">
            <summary>设置 BooleanQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.SetMinimumNumberShouldMatch(System.Int32)">
            <summary>设置 BooleanQuery.SetMinimumNumberShouldMatch(Int32 min) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.SetMinimumNumberShouldMatchInt32">
            <summary>设置 BooleanQuery.SetMinimumNumberShouldMatch(Int32 min) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.ToString(System.String)">
            <summary>设置 BooleanQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.ToStringString">
            <summary>设置 BooleanQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubBooleanQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubBooleanQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubBooleanQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubBooleanQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubBooleanQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubByteParser">
            <summary>Lucene.Net.Search.ByteParser 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubByteParser.#ctor">
            <summary>初始化 type StubByteParser 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubByteParser.ln::Lucene#Net#Search#ByteParser#ParseByte(System.String)">
            <summary>设置 ByteParser.ParseByte(String string_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubByteParser.ParseByteString">
            <summary>设置 ByteParser.ParseByte(String string_Renamed) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubCacheEntry">
            <summary>Lucene.Net.Search.CacheEntry 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.EstimateSize">
            <summary>设置 CacheEntry.EstimateSize() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.EstimateSize(Lucene.Net.Util.RamUsageEstimator)">
            <summary>设置 CacheEntry.EstimateSize(RamUsageEstimator ramCalc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCacheEntry.EstimateSize01">
            <summary>设置 CacheEntry.EstimateSize() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCacheEntry.EstimateSizeRamUsageEstimator">
            <summary>设置 CacheEntry.EstimateSize(RamUsageEstimator ramCalc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.GetCacheType">
            <summary>设置 CacheEntry.GetCacheType() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCacheEntry.GetCacheType01">
            <summary>设置 CacheEntry.GetCacheType() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.GetCustom">
            <summary>设置 CacheEntry.GetCustom() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCacheEntry.GetCustom01">
            <summary>设置 CacheEntry.GetCustom() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.GetFieldName">
            <summary>设置 CacheEntry.GetFieldName() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCacheEntry.GetFieldName01">
            <summary>设置 CacheEntry.GetFieldName() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.GetReaderKey">
            <summary>设置 CacheEntry.GetReaderKey() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCacheEntry.GetReaderKey01">
            <summary>设置 CacheEntry.GetReaderKey() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.GetValue">
            <summary>设置 CacheEntry.GetValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCacheEntry.GetValue01">
            <summary>设置 CacheEntry.GetValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.InitializeStub">
            <summary>初始化 type StubCacheEntry 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCacheEntry.ToString">
            <summary>设置 CacheEntry.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCacheEntry.ToString01">
            <summary>设置 CacheEntry.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCacheEntry.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCacheEntry.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCacheEntry.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubCachingSpanFilter">
            <summary>Lucene.Net.Search.CachingSpanFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingSpanFilter.#ctor(Lucene.Net.Search.SpanFilter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingSpanFilter.#ctor(Lucene.Net.Search.SpanFilter,Lucene.Net.Search.CachingWrapperFilter.DeletesMode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingSpanFilter.BitSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 CachingSpanFilter.BitSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingSpanFilter.BitSpansIndexReader">
            <summary>设置 CachingSpanFilter.BitSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingSpanFilter.Equals(System.Object)">
            <summary>设置 CachingSpanFilter.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingSpanFilter.EqualsObject">
            <summary>设置 CachingSpanFilter.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingSpanFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 CachingSpanFilter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingSpanFilter.GetDocIdSetIndexReader">
            <summary>设置 CachingSpanFilter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingSpanFilter.GetHashCode">
            <summary>设置 CachingSpanFilter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingSpanFilter.GetHashCode01">
            <summary>设置 CachingSpanFilter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingSpanFilter.InitializeStub">
            <summary>初始化 type StubCachingSpanFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingSpanFilter.ToString">
            <summary>设置 CachingSpanFilter.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingSpanFilter.ToString01">
            <summary>设置 CachingSpanFilter.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCachingSpanFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCachingSpanFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCachingSpanFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubCachingWrapperFilter">
            <summary>Lucene.Net.Search.CachingWrapperFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.#ctor(Lucene.Net.Search.Filter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.#ctor(Lucene.Net.Search.Filter,Lucene.Net.Search.CachingWrapperFilter.DeletesMode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.DocIdSetToCache(Lucene.Net.Search.DocIdSet,Lucene.Net.Index.IndexReader)">
            <summary>设置 CachingWrapperFilter.DocIdSetToCache(DocIdSet docIdSet, IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.DocIdSetToCacheDocIdSetIndexReader">
            <summary>设置 CachingWrapperFilter.DocIdSetToCache(DocIdSet docIdSet, IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.Equals(System.Object)">
            <summary>设置 CachingWrapperFilter.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.EqualsObject">
            <summary>设置 CachingWrapperFilter.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 CachingWrapperFilter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.GetDocIdSetIndexReader">
            <summary>设置 CachingWrapperFilter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.GetHashCode">
            <summary>设置 CachingWrapperFilter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.GetHashCode01">
            <summary>设置 CachingWrapperFilter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.InitializeStub">
            <summary>初始化 type StubCachingWrapperFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.ToString">
            <summary>设置 CachingWrapperFilter.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.ToString01">
            <summary>设置 CachingWrapperFilter.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCachingWrapperFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubCollector">
            <summary>Lucene.Net.Search.Collector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCollector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCollector.AcceptsDocsOutOfOrder">
            <summary>设置 Collector.AcceptsDocsOutOfOrder() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCollector.AcceptsDocsOutOfOrder01">
            <summary>设置 Collector.AcceptsDocsOutOfOrder() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCollector.Collect(System.Int32)">
            <summary>设置 Collector.Collect(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCollector.CollectInt32">
            <summary>设置 Collector.Collect(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCollector.InitializeStub">
            <summary>初始化 type StubCollector 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCollector.SetNextReader(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>设置 Collector.SetNextReader(IndexReader reader, Int32 docBase) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCollector.SetNextReaderIndexReaderInt32">
            <summary>设置 Collector.SetNextReader(IndexReader reader, Int32 docBase) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubCollector.SetScorer(Lucene.Net.Search.Scorer)">
            <summary>设置 Collector.SetScorer(Scorer scorer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubCollector.SetScorerScorer">
            <summary>设置 Collector.SetScorer(Scorer scorer) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCollector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCollector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubCollector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubComplexExplanation">
            <summary>Lucene.Net.Search.ComplexExplanation 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.#ctor(System.Boolean,System.Single,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.AddDetail(Lucene.Net.Search.Explanation)">
            <summary>设置 Explanation.AddDetail(Explanation detail) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.AddDetailExplanation">
            <summary>设置 Explanation.AddDetail(Explanation detail) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.GetDescription">
            <summary>设置 Explanation.GetDescription() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.GetDescription01">
            <summary>设置 Explanation.GetDescription() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.GetDetails">
            <summary>设置 Explanation.GetDetails() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.GetDetails01">
            <summary>设置 Explanation.GetDetails() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.GetMatch">
            <summary>设置 ComplexExplanation.GetMatch() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.GetMatch01">
            <summary>设置 ComplexExplanation.GetMatch() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.GetSummary">
            <summary>设置 ComplexExplanation.GetSummary() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.GetSummary01">
            <summary>设置 ComplexExplanation.GetSummary() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.GetValue">
            <summary>设置 Explanation.GetValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.GetValue01">
            <summary>设置 Explanation.GetValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.InitializeStub">
            <summary>初始化 type StubComplexExplanation 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.IsMatch">
            <summary>设置 ComplexExplanation.IsMatch() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.IsMatch01">
            <summary>设置 ComplexExplanation.IsMatch() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.SetDescription(System.String)">
            <summary>设置 Explanation.SetDescription(String description) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.SetDescriptionString">
            <summary>设置 Explanation.SetDescription(String description) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.SetMatch(System.Nullable{System.Boolean})">
            <summary>设置 ComplexExplanation.SetMatch(Nullable`1&lt;Boolean&gt; match) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.SetMatchNullableOfBoolean">
            <summary>设置 ComplexExplanation.SetMatch(Nullable`1&lt;Boolean&gt; match) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.SetValue(System.Single)">
            <summary>设置 Explanation.SetValue(Single value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.SetValueSingle">
            <summary>设置 Explanation.SetValue(Single value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.ToHtml">
            <summary>设置 Explanation.ToHtml() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.ToHtml01">
            <summary>设置 Explanation.ToHtml() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.ToString">
            <summary>设置 Explanation.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubComplexExplanation.ToString(System.Int32)">
            <summary>设置 Explanation.ToString(Int32 depth) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.ToString01">
            <summary>设置 Explanation.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubComplexExplanation.ToStringInt32">
            <summary>设置 Explanation.ToString(Int32 depth) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubComplexExplanation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubComplexExplanation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubComplexExplanation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubConstantScoreQuery">
            <summary>Lucene.Net.Search.ConstantScoreQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.#ctor(Lucene.Net.Search.Filter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.Clone">
            <summary>设置 ConstantScoreQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.Clone01">
            <summary>设置 ConstantScoreQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 ConstantScoreQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.CreateWeightSearcher">
            <summary>设置 ConstantScoreQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.Equals(System.Object)">
            <summary>设置 ConstantScoreQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.EqualsObject">
            <summary>设置 ConstantScoreQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 ConstantScoreQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 ConstantScoreQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.GetFilter">
            <summary>设置 ConstantScoreQuery.GetFilter() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.GetFilter01">
            <summary>设置 ConstantScoreQuery.GetFilter() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.GetHashCode">
            <summary>设置 ConstantScoreQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.GetHashCode01">
            <summary>设置 ConstantScoreQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.InitializeStub">
            <summary>初始化 type StubConstantScoreQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 ConstantScoreQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.RewriteIndexReader">
            <summary>设置 ConstantScoreQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.ToString(System.String)">
            <summary>设置 ConstantScoreQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.ToStringString">
            <summary>设置 ConstantScoreQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubConstantScoreQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubConstantScoreQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubConstantScoreQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubConstantScoreQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubConstantScoreQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubDefaultSimilarity">
            <summary>Lucene.Net.Search.DefaultSimilarity 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.ComputeNorm(System.String,Lucene.Net.Index.FieldInvertState)">
            <summary>设置 DefaultSimilarity.ComputeNorm(String field, FieldInvertState state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.ComputeNormStringFieldInvertState">
            <summary>设置 DefaultSimilarity.ComputeNorm(String field, FieldInvertState state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.Coord(System.Int32,System.Int32)">
            <summary>设置 DefaultSimilarity.Coord(Int32 overlap, Int32 maxOverlap) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.CoordInt32Int32">
            <summary>设置 DefaultSimilarity.Coord(Int32 overlap, Int32 maxOverlap) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.GetDiscountOverlaps">
            <summary>设置 DefaultSimilarity.GetDiscountOverlaps() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.GetDiscountOverlaps01">
            <summary>设置 DefaultSimilarity.GetDiscountOverlaps() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.Idf(Lucene.Net.Index.Term,Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.Idf(Term term, Searcher searcher) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.Idf(System.Collections.Generic.IList{Lucene.Net.Index.Term},Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.Idf(IList`1&lt;Term&gt; terms, Searcher searcher) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.Idf(System.Int32,System.Int32)">
            <summary>设置 DefaultSimilarity.Idf(Int32 docFreq, Int32 numDocs) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.IdfExplain(Lucene.Net.Index.Term,Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.IdfExplain(Term term, Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.IdfExplainIListOfTermSearcher">
            <summary>设置 Similarity.idfExplain(IList`1&lt;Term&gt; terms, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.IdfExplainTermSearcher">
            <summary>设置 Similarity.IdfExplain(Term term, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.IdfIListOfTermSearcher">
            <summary>设置 Similarity.Idf(IList`1&lt;Term&gt; terms, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.IdfInt32Int32">
            <summary>设置 DefaultSimilarity.Idf(Int32 docFreq, Int32 numDocs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.IdfTermSearcher">
            <summary>设置 Similarity.Idf(Term term, Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.InitializeStub">
            <summary>初始化 type StubDefaultSimilarity 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.LengthNorm(System.String,System.Int32)">
            <summary>设置 DefaultSimilarity.LengthNorm(String fieldName, Int32 numTerms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.LengthNormStringInt32">
            <summary>设置 DefaultSimilarity.LengthNorm(String fieldName, Int32 numTerms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.QueryNorm(System.Single)">
            <summary>设置 DefaultSimilarity.QueryNorm(Single sumOfSquaredWeights) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.QueryNormSingle">
            <summary>设置 DefaultSimilarity.QueryNorm(Single sumOfSquaredWeights) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.ScorePayload(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>设置 Similarity.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.ScorePayload(System.Int32,System.String,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>设置 Similarity.ScorePayload(Int32 docId, String fieldName, Int32 start, Int32 end, Byte[] payload, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.ScorePayloadInt32StringInt32Int32ByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(Int32 docId, String fieldName, Int32 start, Int32 end, Byte[] payload, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.ScorePayloadStringByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.SetDiscountOverlaps(System.Boolean)">
            <summary>设置 DefaultSimilarity.SetDiscountOverlaps(Boolean v) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.SetDiscountOverlapsBoolean">
            <summary>设置 DefaultSimilarity.SetDiscountOverlaps(Boolean v) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.SloppyFreq(System.Int32)">
            <summary>设置 DefaultSimilarity.SloppyFreq(Int32 distance) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.SloppyFreqInt32">
            <summary>设置 DefaultSimilarity.SloppyFreq(Int32 distance) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.Tf(System.Int32)">
            <summary>设置 Similarity.Tf(Int32 freq) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.Tf(System.Single)">
            <summary>设置 DefaultSimilarity.Tf(Single freq) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.TfInt32">
            <summary>设置 Similarity.Tf(Int32 freq) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDefaultSimilarity.TfSingle">
            <summary>设置 DefaultSimilarity.Tf(Single freq) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDefaultSimilarity.idfExplain(System.Collections.Generic.IList{Lucene.Net.Index.Term},Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.idfExplain(IList`1&lt;Term&gt; terms, Searcher searcher) 的 存根</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDefaultSimilarity.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDefaultSimilarity.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDefaultSimilarity.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery">
            <summary>Lucene.Net.Search.DisjunctionMaxQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.#ctor(System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.#ctor(System.Collections.Generic.IList{Lucene.Net.Search.Query},System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Add(Lucene.Net.Search.Query)">
            <summary>设置 DisjunctionMaxQuery.Add(Query query) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Add(System.Collections.Generic.IList{Lucene.Net.Search.Query})">
            <summary>设置 DisjunctionMaxQuery.Add(IList`1&lt;Query&gt; disjuncts) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.AddIListOfQuery">
            <summary>设置 DisjunctionMaxQuery.Add(IList`1&lt;Query&gt; disjuncts) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.AddQuery">
            <summary>设置 DisjunctionMaxQuery.Add(Query query) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Clone">
            <summary>设置 DisjunctionMaxQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Clone01">
            <summary>设置 DisjunctionMaxQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 DisjunctionMaxQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.CreateWeightSearcher">
            <summary>设置 DisjunctionMaxQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Equals(System.Object)">
            <summary>设置 DisjunctionMaxQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.EqualsObject">
            <summary>设置 DisjunctionMaxQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 DisjunctionMaxQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 DisjunctionMaxQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.GetHashCode">
            <summary>设置 DisjunctionMaxQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.GetHashCode01">
            <summary>设置 DisjunctionMaxQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.InitializeStub">
            <summary>初始化 type StubDisjunctionMaxQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Iterator">
            <summary>设置 DisjunctionMaxQuery.Iterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Iterator01">
            <summary>设置 DisjunctionMaxQuery.Iterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 DisjunctionMaxQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.RewriteIndexReader">
            <summary>设置 DisjunctionMaxQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.ToString(System.String)">
            <summary>设置 DisjunctionMaxQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.ToStringString">
            <summary>设置 DisjunctionMaxQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDisjunctionMaxQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubDocIdSet">
            <summary>Lucene.Net.Search.DocIdSet 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSet.InitializeStub">
            <summary>初始化 type StubDocIdSet 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSet.IsCacheable">
            <summary>设置 DocIdSet.IsCacheable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDocIdSet.IsCacheable01">
            <summary>设置 DocIdSet.IsCacheable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSet.Iterator">
            <summary>设置 DocIdSet.Iterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDocIdSet.Iterator01">
            <summary>设置 DocIdSet.Iterator() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDocIdSet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDocIdSet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDocIdSet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubDocIdSetIterator">
            <summary>Lucene.Net.Search.DocIdSetIterator 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSetIterator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSetIterator.Advance(System.Int32)">
            <summary>设置 DocIdSetIterator.Advance(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDocIdSetIterator.AdvanceInt32">
            <summary>设置 DocIdSetIterator.Advance(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSetIterator.Doc">
            <summary>设置 DocIdSetIterator.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDocIdSetIterator.Doc01">
            <summary>设置 DocIdSetIterator.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSetIterator.DocID">
            <summary>设置 DocIdSetIterator.DocID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDocIdSetIterator.DocID01">
            <summary>设置 DocIdSetIterator.DocID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSetIterator.InitializeStub">
            <summary>初始化 type StubDocIdSetIterator 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSetIterator.Next">
            <summary>设置 DocIdSetIterator.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDocIdSetIterator.Next01">
            <summary>设置 DocIdSetIterator.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSetIterator.NextDoc">
            <summary>设置 DocIdSetIterator.NextDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDocIdSetIterator.NextDoc01">
            <summary>设置 DocIdSetIterator.NextDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubDocIdSetIterator.SkipTo(System.Int32)">
            <summary>设置 DocIdSetIterator.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubDocIdSetIterator.SkipToInt32">
            <summary>设置 DocIdSetIterator.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDocIdSetIterator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDocIdSetIterator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubDocIdSetIterator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubExplanation">
            <summary>Lucene.Net.Search.Explanation 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.#ctor(System.Single,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.AddDetail(Lucene.Net.Search.Explanation)">
            <summary>设置 Explanation.AddDetail(Explanation detail) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.AddDetailExplanation">
            <summary>设置 Explanation.AddDetail(Explanation detail) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.GetDescription">
            <summary>设置 Explanation.GetDescription() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.GetDescription01">
            <summary>设置 Explanation.GetDescription() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.GetDetails">
            <summary>设置 Explanation.GetDetails() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.GetDetails01">
            <summary>设置 Explanation.GetDetails() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.GetSummary">
            <summary>设置 Explanation.GetSummary() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.GetSummary01">
            <summary>设置 Explanation.GetSummary() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.GetValue">
            <summary>设置 Explanation.GetValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.GetValue01">
            <summary>设置 Explanation.GetValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.InitializeStub">
            <summary>初始化 type StubExplanation 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.IsMatch">
            <summary>设置 Explanation.IsMatch() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.IsMatch01">
            <summary>设置 Explanation.IsMatch() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.SetDescription(System.String)">
            <summary>设置 Explanation.SetDescription(String description) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.SetDescriptionString">
            <summary>设置 Explanation.SetDescription(String description) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.SetValue(System.Single)">
            <summary>设置 Explanation.SetValue(Single value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.SetValueSingle">
            <summary>设置 Explanation.SetValue(Single value_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.ToHtml">
            <summary>设置 Explanation.ToHtml() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.ToHtml01">
            <summary>设置 Explanation.ToHtml() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.ToString">
            <summary>设置 Explanation.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubExplanation.ToString(System.Int32)">
            <summary>设置 Explanation.ToString(Int32 depth) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.ToString01">
            <summary>设置 Explanation.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubExplanation.ToStringInt32">
            <summary>设置 Explanation.ToString(Int32 depth) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubExplanation.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubExplanation.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubExplanation.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter">
            <summary>Lucene.Net.Search.FieldCacheTermsFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.#ctor(System.String,System.String[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldCacheTermsFilter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.GetDocIdSetIndexReader">
            <summary>设置 FieldCacheTermsFilter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.GetFieldCache">
            <summary>设置 FieldCacheTermsFilter.GetFieldCache() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.GetFieldCache01">
            <summary>设置 FieldCacheTermsFilter.GetFieldCache() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.InitializeStub">
            <summary>初始化 type StubFieldCacheTermsFilter 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldCacheTermsFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFieldComparator">
            <summary>Lucene.Net.Search.FieldComparator 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.Compare(System.Int32,System.Int32)">
            <summary>设置 FieldComparator.Compare(Int32 slot1, Int32 slot2) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.CompareBottom(System.Int32)">
            <summary>设置 FieldComparator.CompareBottom(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldComparator.CompareBottomInt32">
            <summary>设置 FieldComparator.CompareBottom(Int32 doc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldComparator.CompareInt32Int32">
            <summary>设置 FieldComparator.Compare(Int32 slot1, Int32 slot2) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.Copy(System.Int32,System.Int32)">
            <summary>设置 FieldComparator.Copy(Int32 slot, Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldComparator.CopyInt32Int32">
            <summary>设置 FieldComparator.Copy(Int32 slot, Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.InitializeStub">
            <summary>初始化 type StubFieldComparator 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.SetBottom(System.Int32)">
            <summary>设置 FieldComparator.SetBottom(Int32 slot) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldComparator.SetBottomInt32">
            <summary>设置 FieldComparator.SetBottom(Int32 slot) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.SetNextReader(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>设置 FieldComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldComparator.SetNextReaderIndexReaderInt32">
            <summary>设置 FieldComparator.SetNextReader(IndexReader reader, Int32 docBase) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.SetScorer(Lucene.Net.Search.Scorer)">
            <summary>设置 FieldComparator.SetScorer(Scorer scorer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldComparator.SetScorerScorer">
            <summary>设置 FieldComparator.SetScorer(Scorer scorer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparator.Value(System.Int32)">
            <summary>设置 FieldComparator.Value(Int32 slot) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldComparator.ValueInt32">
            <summary>设置 FieldComparator.Value(Int32 slot) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldComparator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldComparator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldComparator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFieldComparatorSource">
            <summary>Lucene.Net.Search.FieldComparatorSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparatorSource.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparatorSource.InitializeStub">
            <summary>初始化 type StubFieldComparatorSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldComparatorSource.NewComparator(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>设置 FieldComparatorSource.NewComparator(String fieldname, Int32 numHits, Int32 sortPos, Boolean reversed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldComparatorSource.NewComparatorStringInt32Int32Boolean">
            <summary>设置 FieldComparatorSource.NewComparator(String fieldname, Int32 numHits, Int32 sortPos, Boolean reversed) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldComparatorSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldComparatorSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldComparatorSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFieldDoc">
            <summary>Lucene.Net.Search.FieldDoc 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldDoc.#ctor(System.Int32,System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldDoc.#ctor(System.Int32,System.Single,System.IComparable[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldDoc.InitializeStub">
            <summary>初始化 type StubFieldDoc 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFieldDoc.ToString">
            <summary>设置 FieldDoc.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFieldDoc.ToString01">
            <summary>设置 FieldDoc.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldDoc.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldDoc.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFieldDoc.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFilter">
            <summary>Lucene.Net.Search.Filter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 Filter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilter.GetDocIdSetIndexReader">
            <summary>设置 Filter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilter.InitializeStub">
            <summary>初始化 type StubFilter 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFilterManager">
            <summary>Lucene.Net.Search.FilterManager 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilterManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilterManager.GetFilter(Lucene.Net.Search.Filter)">
            <summary>设置 FilterManager.GetFilter(Filter filter) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilterManager.GetFilterFilter">
            <summary>设置 FilterManager.GetFilter(Filter filter) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilterManager.InitializeStub">
            <summary>初始化 type StubFilterManager 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilterManager.SetCacheSize(System.Int32)">
            <summary>设置 FilterManager.SetCacheSize(Int32 cacheCleanSize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilterManager.SetCacheSizeInt32">
            <summary>设置 FilterManager.SetCacheSize(Int32 cacheCleanSize) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilterManager.SetCleanThreadSleepTime(System.Int64)">
            <summary>设置 FilterManager.SetCleanThreadSleepTime(Int64 cleanSleepTime) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilterManager.SetCleanThreadSleepTimeInt64">
            <summary>设置 FilterManager.SetCleanThreadSleepTime(Int64 cleanSleepTime) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilterManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilterManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilterManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFilteredDocIdSet">
            <summary>Lucene.Net.Search.FilteredDocIdSet 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.#ctor(Lucene.Net.Search.DocIdSet,System.Func{System.Int32,System.Boolean})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.InitializeStub">
            <summary>初始化 type StubFilteredDocIdSet 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.IsCacheable">
            <summary>设置 FilteredDocIdSet.IsCacheable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.IsCacheable01">
            <summary>设置 FilteredDocIdSet.IsCacheable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.Iterator">
            <summary>设置 FilteredDocIdSet.Iterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.Iterator01">
            <summary>设置 FilteredDocIdSet.Iterator() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredDocIdSet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator">
            <summary>Lucene.Net.Search.FilteredDocIdSetIterator 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.#ctor(Lucene.Net.Search.DocIdSetIterator,System.Func{System.Int32,System.Boolean})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.Advance(System.Int32)">
            <summary>设置 FilteredDocIdSetIterator.Advance(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.AdvanceInt32">
            <summary>设置 FilteredDocIdSetIterator.Advance(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.Doc">
            <summary>设置 FilteredDocIdSetIterator.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.Doc01">
            <summary>设置 FilteredDocIdSetIterator.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.DocID">
            <summary>设置 FilteredDocIdSetIterator.DocID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.DocID01">
            <summary>设置 FilteredDocIdSetIterator.DocID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.InitializeStub">
            <summary>初始化 type StubFilteredDocIdSetIterator 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.Next">
            <summary>设置 FilteredDocIdSetIterator.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.Next01">
            <summary>设置 FilteredDocIdSetIterator.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.NextDoc">
            <summary>设置 FilteredDocIdSetIterator.NextDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.NextDoc01">
            <summary>设置 FilteredDocIdSetIterator.NextDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.SkipTo(System.Int32)">
            <summary>设置 FilteredDocIdSetIterator.SkipTo(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.SkipToInt32">
            <summary>设置 FilteredDocIdSetIterator.SkipTo(Int32 n) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredDocIdSetIterator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFilteredQuery">
            <summary>Lucene.Net.Search.FilteredQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.#ctor(Lucene.Net.Search.Query,Lucene.Net.Search.Filter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 FilteredQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.CreateWeightSearcher">
            <summary>设置 FilteredQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.Equals(System.Object)">
            <summary>设置 FilteredQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.EqualsObject">
            <summary>设置 FilteredQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 FilteredQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 FilteredQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.GetFilter">
            <summary>设置 FilteredQuery.GetFilter() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.GetFilter01">
            <summary>设置 FilteredQuery.GetFilter() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.GetHashCode">
            <summary>设置 FilteredQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.GetHashCode01">
            <summary>设置 FilteredQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.GetQuery">
            <summary>设置 FilteredQuery.GetQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.GetQuery01">
            <summary>设置 FilteredQuery.GetQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.InitializeStub">
            <summary>初始化 type StubFilteredQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 FilteredQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.RewriteIndexReader">
            <summary>设置 FilteredQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.ToString(System.String)">
            <summary>设置 FilteredQuery.ToString(String s) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.ToStringString">
            <summary>设置 FilteredQuery.ToString(String s) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFilteredTermEnum">
            <summary>Lucene.Net.Search.FilteredTermEnum 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.Close">
            <summary>设置 FilteredTermEnum.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.Close01">
            <summary>设置 FilteredTermEnum.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.Difference">
            <summary>设置 FilteredTermEnum.Difference() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.Difference01">
            <summary>设置 FilteredTermEnum.Difference() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.DocFreq">
            <summary>设置 FilteredTermEnum.DocFreq() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.DocFreq01">
            <summary>设置 FilteredTermEnum.DocFreq() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.EndEnum">
            <summary>设置 FilteredTermEnum.EndEnum() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.EndEnum01">
            <summary>设置 FilteredTermEnum.EndEnum() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.InitializeStub">
            <summary>初始化 type StubFilteredTermEnum 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.Next">
            <summary>设置 FilteredTermEnum.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.Next01">
            <summary>设置 FilteredTermEnum.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.SetEnum(Lucene.Net.Index.TermEnum)">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.SetEnumTermEnum">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.SkipTo(Lucene.Net.Index.Term)">
            <summary>设置 TermEnum.SkipTo(Term target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.SkipToTerm">
            <summary>设置 TermEnum.SkipTo(Term target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.Term">
            <summary>设置 FilteredTermEnum.Term() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.Term01">
            <summary>设置 FilteredTermEnum.Term() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFilteredTermEnum.TermCompare(Lucene.Net.Index.Term)">
            <summary>设置 FilteredTermEnum.TermCompare(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFilteredTermEnum.TermCompareTerm">
            <summary>设置 FilteredTermEnum.TermCompare(Term term) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredTermEnum.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredTermEnum.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFilteredTermEnum.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFloatParser">
            <summary>Lucene.Net.Search.FloatParser 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFloatParser.#ctor">
            <summary>初始化 type StubFloatParser 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFloatParser.ln::Lucene#Net#Search#FloatParser#ParseFloat(System.String)">
            <summary>设置 FloatParser.ParseFloat(String string_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFloatParser.ParseFloatString">
            <summary>设置 FloatParser.ParseFloat(String string_Renamed) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubFuzzyQuery">
            <summary>Lucene.Net.Search.FuzzyQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.#ctor(Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.#ctor(Lucene.Net.Index.Term,System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.#ctor(Lucene.Net.Index.Term,System.Single,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.ClearTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.CreateWeightSearcher">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.Equals(System.Object)">
            <summary>设置 FuzzyQuery.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.EqualsObject">
            <summary>设置 FuzzyQuery.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetEnum(Lucene.Net.Index.IndexReader)">
            <summary>设置 FuzzyQuery.GetEnum(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetEnumIndexReader">
            <summary>设置 FuzzyQuery.GetEnum(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetHashCode">
            <summary>设置 FuzzyQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetHashCode01">
            <summary>设置 FuzzyQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetMinSimilarity">
            <summary>设置 FuzzyQuery.GetMinSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetMinSimilarity01">
            <summary>设置 FuzzyQuery.GetMinSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetPrefixLength">
            <summary>设置 FuzzyQuery.GetPrefixLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetPrefixLength01">
            <summary>设置 FuzzyQuery.GetPrefixLength() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetRewriteMethod">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetRewriteMethod01">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetTerm">
            <summary>设置 FuzzyQuery.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetTerm01">
            <summary>设置 FuzzyQuery.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.GetTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.IncTotalNumberOfTerms(System.Int32)">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.IncTotalNumberOfTermsInt32">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.InitializeStub">
            <summary>初始化 type StubFuzzyQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 FuzzyQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.RewriteIndexReader">
            <summary>设置 FuzzyQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.SetRewriteMethod(Lucene.Net.Search.MultiTermQuery.RewriteMethod)">
            <summary>设置 FuzzyQuery.SetRewriteMethod(RewriteMethod method) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 FuzzyQuery.SetRewriteMethod(RewriteMethod method) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.ToString(System.String)">
            <summary>设置 FuzzyQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.ToStringString">
            <summary>设置 FuzzyQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubFuzzyQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubFuzzyQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFuzzyQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFuzzyQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubFuzzyQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubIndexSearcher">
            <summary>Lucene.Net.Search.IndexSearcher 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.#ctor(Lucene.Net.Index.IndexReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.#ctor(Lucene.Net.Store.Directory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.#ctor(Lucene.Net.Store.Directory,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Close">
            <summary>设置 IndexSearcher.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.Close01">
            <summary>设置 IndexSearcher.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.CreateWeight(Lucene.Net.Search.Query)">
            <summary>设置 Searcher.CreateWeight(Query query) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.CreateWeightQuery">
            <summary>设置 Searcher.CreateWeight(Query query) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Dispose">
            <summary>设置 IndexSearcher.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.Dispose01">
            <summary>设置 IndexSearcher.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Doc(System.Int32)">
            <summary>设置 IndexSearcher.Doc(Int32 i) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Doc(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 IndexSearcher.Doc(Int32 i, FieldSelector fieldSelector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 IndexSearcher.DocFreq(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.DocFreqTerm">
            <summary>设置 IndexSearcher.DocFreq(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.DocFreqs(Lucene.Net.Index.Term[])">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.DocFreqsTermArray">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.DocInt32">
            <summary>设置 IndexSearcher.Doc(Int32 i) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.DocInt32FieldSelector">
            <summary>设置 IndexSearcher.Doc(Int32 i, FieldSelector fieldSelector) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Explain(Lucene.Net.Search.Query,System.Int32)">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Explain(Lucene.Net.Search.Weight,System.Int32)">
            <summary>设置 IndexSearcher.Explain(Weight weight, Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.ExplainQueryInt32">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.ExplainWeightInt32">
            <summary>设置 IndexSearcher.Explain(Weight weight, Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.GatherSubReaders(System.Collections.Generic.IList{Lucene.Net.Index.IndexReader},Lucene.Net.Index.IndexReader)">
            <summary>设置 IndexSearcher.GatherSubReaders(IList`1&lt;IndexReader&gt; allSubReaders, IndexReader r) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.GatherSubReadersIListOfIndexReaderIndexReader">
            <summary>设置 IndexSearcher.GatherSubReaders(IList`1&lt;IndexReader&gt; allSubReaders, IndexReader r) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.GetIndexReader">
            <summary>设置 IndexSearcher.GetIndexReader() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.GetIndexReader01">
            <summary>设置 IndexSearcher.GetIndexReader() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.GetSimilarity">
            <summary>设置 Searcher.GetSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.GetSimilarity01">
            <summary>设置 Searcher.GetSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.InitializeStub">
            <summary>初始化 type StubIndexSearcher 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.MaxDoc">
            <summary>设置 IndexSearcher.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.MaxDoc01">
            <summary>设置 IndexSearcher.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Rewrite(Lucene.Net.Search.Query)">
            <summary>设置 IndexSearcher.Rewrite(Query original) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.RewriteQuery">
            <summary>设置 IndexSearcher.Rewrite(Query original) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,System.Int32)">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter)">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Collector collector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort,System.Boolean)">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort, Boolean fillFields) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryCollector">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryFilter">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryFilterCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryFilterHitCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryFilterInt32">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryFilterInt32Sort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryFilterSort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryHitCollector">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQueryInt32">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchQuerySort">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchWeightFilterCollector">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Collector collector) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchWeightFilterHitCollector">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchWeightFilterInt32">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchWeightFilterInt32Sort">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SearchWeightFilterInt32SortBoolean">
            <summary>设置 IndexSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort, Boolean fillFields) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.SetDefaultFieldSortScoring(System.Boolean,System.Boolean)">
            <summary>设置 IndexSearcher.SetDefaultFieldSortScoring(Boolean doTrackScores, Boolean doMaxScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SetDefaultFieldSortScoringBooleanBoolean">
            <summary>设置 IndexSearcher.SetDefaultFieldSortScoring(Boolean doTrackScores, Boolean doMaxScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIndexSearcher.SetSimilarity(Lucene.Net.Search.Similarity)">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIndexSearcher.SetSimilaritySimilarity">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubIndexSearcher.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubIndexSearcher.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubIndexSearcher.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubIntParser">
            <summary>Lucene.Net.Search.IntParser 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIntParser.#ctor">
            <summary>初始化 type StubIntParser 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubIntParser.ln::Lucene#Net#Search#IntParser#ParseInt(System.String)">
            <summary>设置 IntParser.ParseInt(String string_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubIntParser.ParseIntString">
            <summary>设置 IntParser.ParseInt(String string_Renamed) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery">
            <summary>Lucene.Net.Search.MatchAllDocsQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 MatchAllDocsQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.CreateWeightSearcher">
            <summary>设置 MatchAllDocsQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.Equals(System.Object)">
            <summary>设置 MatchAllDocsQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.EqualsObject">
            <summary>设置 MatchAllDocsQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 MatchAllDocsQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 MatchAllDocsQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.GetHashCode">
            <summary>设置 MatchAllDocsQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.GetHashCode01">
            <summary>设置 MatchAllDocsQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.InitializeStub">
            <summary>初始化 type StubMatchAllDocsQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.ToString(System.String)">
            <summary>设置 MatchAllDocsQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.ToStringString">
            <summary>设置 MatchAllDocsQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMatchAllDocsQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubMultiPhraseQuery">
            <summary>Lucene.Net.Search.MultiPhraseQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Add(Lucene.Net.Index.Term[])">
            <summary>设置 MultiPhraseQuery.Add(Term[] terms) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Add(Lucene.Net.Index.Term)">
            <summary>设置 MultiPhraseQuery.Add(Term term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Add(Lucene.Net.Index.Term[],System.Int32)">
            <summary>设置 MultiPhraseQuery.Add(Term[] terms, Int32 position) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.AddTerm">
            <summary>设置 MultiPhraseQuery.Add(Term term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.AddTermArray">
            <summary>设置 MultiPhraseQuery.Add(Term[] terms) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.AddTermArrayInt32">
            <summary>设置 MultiPhraseQuery.Add(Term[] terms, Int32 position) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 MultiPhraseQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.CreateWeightSearcher">
            <summary>设置 MultiPhraseQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Equals(System.Object)">
            <summary>设置 MultiPhraseQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.EqualsObject">
            <summary>设置 MultiPhraseQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 MultiPhraseQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 MultiPhraseQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetHashCode">
            <summary>设置 MultiPhraseQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetHashCode01">
            <summary>设置 MultiPhraseQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetPositions">
            <summary>设置 MultiPhraseQuery.GetPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetPositions01">
            <summary>设置 MultiPhraseQuery.GetPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetSlop">
            <summary>设置 MultiPhraseQuery.GetSlop() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetSlop01">
            <summary>设置 MultiPhraseQuery.GetSlop() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetTermArrays">
            <summary>设置 MultiPhraseQuery.GetTermArrays() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.GetTermArrays01">
            <summary>设置 MultiPhraseQuery.GetTermArrays() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.InitializeStub">
            <summary>初始化 type StubMultiPhraseQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 MultiPhraseQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.RewriteIndexReader">
            <summary>设置 MultiPhraseQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.SetSlop(System.Int32)">
            <summary>设置 MultiPhraseQuery.SetSlop(Int32 s) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.SetSlopInt32">
            <summary>设置 MultiPhraseQuery.SetSlop(Int32 s) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.ToString(System.String)">
            <summary>设置 MultiPhraseQuery.ToString(String f) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.ToStringString">
            <summary>设置 MultiPhraseQuery.ToString(String f) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiPhraseQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubMultiSearcher">
            <summary>Lucene.Net.Search.MultiSearcher 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.#ctor(Lucene.Net.Search.Searchable[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Close">
            <summary>设置 MultiSearcher.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.Close01">
            <summary>设置 MultiSearcher.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.CreateWeight(Lucene.Net.Search.Query)">
            <summary>设置 MultiSearcher.CreateWeight(Query original) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.CreateWeightQuery">
            <summary>设置 MultiSearcher.CreateWeight(Query original) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Dispose">
            <summary>设置 MultiSearcher.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.Dispose01">
            <summary>设置 MultiSearcher.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Doc(System.Int32)">
            <summary>设置 MultiSearcher.Doc(Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Doc(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 MultiSearcher.Doc(Int32 n, FieldSelector fieldSelector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 MultiSearcher.DocFreq(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.DocFreqTerm">
            <summary>设置 MultiSearcher.DocFreq(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.DocFreqs(Lucene.Net.Index.Term[])">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.DocFreqsTermArray">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.DocInt32">
            <summary>设置 MultiSearcher.Doc(Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.DocInt32FieldSelector">
            <summary>设置 MultiSearcher.Doc(Int32 n, FieldSelector fieldSelector) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Explain(Lucene.Net.Search.Query,System.Int32)">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Explain(Lucene.Net.Search.Weight,System.Int32)">
            <summary>设置 MultiSearcher.Explain(Weight weight, Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.ExplainQueryInt32">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.ExplainWeightInt32">
            <summary>设置 MultiSearcher.Explain(Weight weight, Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.GetSearchables">
            <summary>设置 MultiSearcher.GetSearchables() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.GetSearchables01">
            <summary>设置 MultiSearcher.GetSearchables() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.GetSimilarity">
            <summary>设置 Searcher.GetSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.GetSimilarity01">
            <summary>设置 Searcher.GetSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.GetStarts">
            <summary>设置 MultiSearcher.GetStarts() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.GetStarts01">
            <summary>设置 MultiSearcher.GetStarts() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.InitializeStub">
            <summary>初始化 type StubMultiSearcher 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.MaxDoc">
            <summary>设置 MultiSearcher.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.MaxDoc01">
            <summary>设置 MultiSearcher.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Rewrite(Lucene.Net.Search.Query)">
            <summary>设置 MultiSearcher.Rewrite(Query original) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.RewriteQuery">
            <summary>设置 MultiSearcher.Rewrite(Query original) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Collector collector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter)">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,System.Int32)">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Int32 n, Sort sort) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryCollector">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryFilter">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryFilterCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryFilterHitCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryFilterInt32">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryFilterInt32Sort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryFilterSort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryHitCollector">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQueryInt32">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchQuerySort">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchWeightFilterCollector">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Collector collector) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchWeightFilterHitCollector">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchWeightFilterInt32">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SearchWeightFilterInt32Sort">
            <summary>设置 MultiSearcher.Search(Weight weight, Filter filter, Int32 n, Sort sort) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.SetSimilarity(Lucene.Net.Search.Similarity)">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SetSimilaritySimilarity">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.SubDoc(System.Int32)">
            <summary>设置 MultiSearcher.SubDoc(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SubDocInt32">
            <summary>设置 MultiSearcher.SubDoc(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiSearcher.SubSearcher(System.Int32)">
            <summary>设置 MultiSearcher.SubSearcher(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiSearcher.SubSearcherInt32">
            <summary>设置 MultiSearcher.SubSearcher(Int32 n) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiSearcher.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiSearcher.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiSearcher.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubMultiTermQuery">
            <summary>Lucene.Net.Search.MultiTermQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.#ctor(Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.ClearTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.CreateWeightSearcher">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.Equals(System.Object)">
            <summary>设置 MultiTermQuery.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.EqualsObject">
            <summary>设置 MultiTermQuery.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetEnum(Lucene.Net.Index.IndexReader)">
            <summary>设置 MultiTermQuery.GetEnum(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetEnumIndexReader">
            <summary>设置 MultiTermQuery.GetEnum(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetHashCode">
            <summary>设置 MultiTermQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetHashCode01">
            <summary>设置 MultiTermQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetRewriteMethod">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetRewriteMethod01">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetTerm">
            <summary>设置 MultiTermQuery.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetTerm01">
            <summary>设置 MultiTermQuery.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.GetTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.IncTotalNumberOfTerms(System.Int32)">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.IncTotalNumberOfTermsInt32">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.InitializeStub">
            <summary>初始化 type StubMultiTermQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 MultiTermQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.RewriteIndexReader">
            <summary>设置 MultiTermQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.SetRewriteMethod(Lucene.Net.Search.MultiTermQuery.RewriteMethod)">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.ToString(System.String)">
            <summary>设置 MultiTermQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.ToStringString">
            <summary>设置 MultiTermQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiTermQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiTermQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiTermQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter">
            <summary>Lucene.Net.Search.MultiTermQueryWrapperFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.#ctor(Lucene.Net.Search.MultiTermQuery)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.ClearTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.ClearTotalNumberOfTerms01">
            <summary>设置 MultiTermQueryWrapperFilter.ClearTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.Equals(System.Object)">
            <summary>设置 MultiTermQueryWrapperFilter.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.EqualsObject">
            <summary>设置 MultiTermQueryWrapperFilter.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 MultiTermQueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.GetDocIdSetIndexReader">
            <summary>设置 MultiTermQueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.GetHashCode">
            <summary>设置 MultiTermQueryWrapperFilter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.GetHashCode01">
            <summary>设置 MultiTermQueryWrapperFilter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.GetTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.GetTotalNumberOfTerms01">
            <summary>设置 MultiTermQueryWrapperFilter.GetTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.InitializeStub">
            <summary>初始化 type StubMultiTermQueryWrapperFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.ToString">
            <summary>设置 MultiTermQueryWrapperFilter.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.ToString01">
            <summary>设置 MultiTermQueryWrapperFilter.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubMultiTermQueryWrapperFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubParallelMultiSearcher">
            <summary>Lucene.Net.Search.ParallelMultiSearcher 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.#ctor(Lucene.Net.Search.Searchable[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Close">
            <summary>设置 MultiSearcher.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Close01">
            <summary>设置 MultiSearcher.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.CreateWeight(Lucene.Net.Search.Query)">
            <summary>设置 MultiSearcher.CreateWeight(Query original) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.CreateWeightQuery">
            <summary>设置 MultiSearcher.CreateWeight(Query original) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Dispose">
            <summary>设置 MultiSearcher.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Dispose01">
            <summary>设置 MultiSearcher.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Doc(System.Int32)">
            <summary>设置 MultiSearcher.Doc(Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Doc(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 MultiSearcher.Doc(Int32 n, FieldSelector fieldSelector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 ParallelMultiSearcher.DocFreq(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.DocFreqTerm">
            <summary>设置 ParallelMultiSearcher.DocFreq(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.DocFreqs(Lucene.Net.Index.Term[])">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.DocFreqsTermArray">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.DocInt32">
            <summary>设置 MultiSearcher.Doc(Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.DocInt32FieldSelector">
            <summary>设置 MultiSearcher.Doc(Int32 n, FieldSelector fieldSelector) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Explain(Lucene.Net.Search.Query,System.Int32)">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Explain(Lucene.Net.Search.Weight,System.Int32)">
            <summary>设置 MultiSearcher.Explain(Weight weight, Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.ExplainQueryInt32">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.ExplainWeightInt32">
            <summary>设置 MultiSearcher.Explain(Weight weight, Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.GetSearchables">
            <summary>设置 MultiSearcher.GetSearchables() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.GetSearchables01">
            <summary>设置 MultiSearcher.GetSearchables() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.GetSimilarity">
            <summary>设置 Searcher.GetSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.GetSimilarity01">
            <summary>设置 Searcher.GetSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.GetStarts">
            <summary>设置 MultiSearcher.GetStarts() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.GetStarts01">
            <summary>设置 MultiSearcher.GetStarts() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.InitializeStub">
            <summary>初始化 type StubParallelMultiSearcher 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.MaxDoc">
            <summary>设置 MultiSearcher.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.MaxDoc01">
            <summary>设置 MultiSearcher.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Rewrite(Lucene.Net.Search.Query)">
            <summary>设置 ParallelMultiSearcher.Rewrite(Query original) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.RewriteQuery">
            <summary>设置 ParallelMultiSearcher.Rewrite(Query original) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter)">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Collector collector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,System.Int32)">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryCollector">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryFilter">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryFilterCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryFilterHitCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryFilterInt32">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryFilterInt32Sort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryFilterSort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryHitCollector">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQueryInt32">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchQuerySort">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchWeightFilterCollector">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Collector collector) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchWeightFilterHitCollector">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchWeightFilterInt32">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SearchWeightFilterInt32Sort">
            <summary>设置 ParallelMultiSearcher.Search(Weight weight, Filter filter, Int32 nDocs, Sort sort) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SetSimilarity(Lucene.Net.Search.Similarity)">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SetSimilaritySimilarity">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SubDoc(System.Int32)">
            <summary>设置 MultiSearcher.SubDoc(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SubDocInt32">
            <summary>设置 MultiSearcher.SubDoc(Int32 n) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SubSearcher(System.Int32)">
            <summary>设置 MultiSearcher.SubSearcher(Int32 n) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.SubSearcherInt32">
            <summary>设置 MultiSearcher.SubSearcher(Int32 n) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubParallelMultiSearcher.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubParser">
            <summary>Lucene.Net.Search.Parser 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubParser.#ctor">
            <summary>初始化 type StubParser 的新实例</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubPhraseQuery">
            <summary>Lucene.Net.Search.PhraseQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.Add(Lucene.Net.Index.Term)">
            <summary>设置 PhraseQuery.Add(Term term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.Add(Lucene.Net.Index.Term,System.Int32)">
            <summary>设置 PhraseQuery.Add(Term term, Int32 position) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.AddTerm">
            <summary>设置 PhraseQuery.Add(Term term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.AddTermInt32">
            <summary>设置 PhraseQuery.Add(Term term, Int32 position) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 PhraseQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.CreateWeightSearcher">
            <summary>设置 PhraseQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.Equals(System.Object)">
            <summary>设置 PhraseQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.EqualsObject">
            <summary>设置 PhraseQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 PhraseQuery.ExtractTerms(ICollection`1&lt;Term&gt; queryTerms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 PhraseQuery.ExtractTerms(ICollection`1&lt;Term&gt; queryTerms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.GetHashCode">
            <summary>设置 PhraseQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.GetHashCode01">
            <summary>设置 PhraseQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.GetPositions">
            <summary>设置 PhraseQuery.GetPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.GetPositions01">
            <summary>设置 PhraseQuery.GetPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.GetSlop">
            <summary>设置 PhraseQuery.GetSlop() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.GetSlop01">
            <summary>设置 PhraseQuery.GetSlop() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.GetTerms">
            <summary>设置 PhraseQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.GetTerms01">
            <summary>设置 PhraseQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.InitializeStub">
            <summary>初始化 type StubPhraseQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.SetSlop(System.Int32)">
            <summary>设置 PhraseQuery.SetSlop(Int32 s) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.SetSlopInt32">
            <summary>设置 PhraseQuery.SetSlop(Int32 s) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.ToString(System.String)">
            <summary>设置 PhraseQuery.ToString(String f) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.ToStringString">
            <summary>设置 PhraseQuery.ToString(String f) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPhraseQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPhraseQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPhraseQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPhraseQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPhraseQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector">
            <summary>Lucene.Net.Search.PositiveScoresOnlyCollector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.#ctor(Lucene.Net.Search.Collector)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.AcceptsDocsOutOfOrder">
            <summary>设置 PositiveScoresOnlyCollector.AcceptsDocsOutOfOrder() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.AcceptsDocsOutOfOrder01">
            <summary>设置 PositiveScoresOnlyCollector.AcceptsDocsOutOfOrder() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.Collect(System.Int32)">
            <summary>设置 PositiveScoresOnlyCollector.Collect(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.CollectInt32">
            <summary>设置 PositiveScoresOnlyCollector.Collect(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.InitializeStub">
            <summary>初始化 type StubPositiveScoresOnlyCollector 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.SetNextReader(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>设置 PositiveScoresOnlyCollector.SetNextReader(IndexReader reader, Int32 docBase) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.SetNextReaderIndexReaderInt32">
            <summary>设置 PositiveScoresOnlyCollector.SetNextReader(IndexReader reader, Int32 docBase) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.SetScorer(Lucene.Net.Search.Scorer)">
            <summary>设置 PositiveScoresOnlyCollector.SetScorer(Scorer scorer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.SetScorerScorer">
            <summary>设置 PositiveScoresOnlyCollector.SetScorer(Scorer scorer) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPositiveScoresOnlyCollector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubPrefixFilter">
            <summary>Lucene.Net.Search.PrefixFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.#ctor(Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.ClearTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixFilter.ClearTotalNumberOfTerms01">
            <summary>设置 MultiTermQueryWrapperFilter.ClearTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.Equals(System.Object)">
            <summary>设置 MultiTermQueryWrapperFilter.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixFilter.EqualsObject">
            <summary>设置 MultiTermQueryWrapperFilter.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 MultiTermQueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixFilter.GetDocIdSetIndexReader">
            <summary>设置 MultiTermQueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.GetHashCode">
            <summary>设置 MultiTermQueryWrapperFilter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixFilter.GetHashCode01">
            <summary>设置 MultiTermQueryWrapperFilter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.GetPrefix">
            <summary>设置 PrefixFilter.GetPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixFilter.GetPrefix01">
            <summary>设置 PrefixFilter.GetPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.GetTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixFilter.GetTotalNumberOfTerms01">
            <summary>设置 MultiTermQueryWrapperFilter.GetTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.InitializeStub">
            <summary>初始化 type StubPrefixFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixFilter.ToString">
            <summary>设置 PrefixFilter.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixFilter.ToString01">
            <summary>设置 PrefixFilter.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubPrefixQuery">
            <summary>Lucene.Net.Search.PrefixQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.#ctor(Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.ClearTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.CreateWeightSearcher">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.Equals(System.Object)">
            <summary>设置 PrefixQuery.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.EqualsObject">
            <summary>设置 PrefixQuery.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.GetEnum(Lucene.Net.Index.IndexReader)">
            <summary>设置 PrefixQuery.GetEnum(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.GetEnumIndexReader">
            <summary>设置 PrefixQuery.GetEnum(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.GetHashCode">
            <summary>设置 PrefixQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.GetHashCode01">
            <summary>设置 PrefixQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.GetPrefix">
            <summary>设置 PrefixQuery.GetPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.GetPrefix01">
            <summary>设置 PrefixQuery.GetPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.GetRewriteMethod">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.GetRewriteMethod01">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.GetTerm">
            <summary>设置 MultiTermQuery.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.GetTerm01">
            <summary>设置 MultiTermQuery.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.GetTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.IncTotalNumberOfTerms(System.Int32)">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.IncTotalNumberOfTermsInt32">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.InitializeStub">
            <summary>初始化 type StubPrefixQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 MultiTermQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.RewriteIndexReader">
            <summary>设置 MultiTermQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.SetRewriteMethod(Lucene.Net.Search.MultiTermQuery.RewriteMethod)">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.ToString(System.String)">
            <summary>设置 PrefixQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.ToStringString">
            <summary>设置 PrefixQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubPrefixTermEnum">
            <summary>Lucene.Net.Search.PrefixTermEnum 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.#ctor(Lucene.Net.Index.IndexReader,Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.Close">
            <summary>设置 FilteredTermEnum.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.Close01">
            <summary>设置 FilteredTermEnum.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.Difference">
            <summary>设置 PrefixTermEnum.Difference() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.Difference01">
            <summary>设置 PrefixTermEnum.Difference() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.DocFreq">
            <summary>设置 FilteredTermEnum.DocFreq() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.DocFreq01">
            <summary>设置 FilteredTermEnum.DocFreq() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.EndEnum">
            <summary>设置 PrefixTermEnum.EndEnum() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.EndEnum01">
            <summary>设置 PrefixTermEnum.EndEnum() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.GetPrefixTerm">
            <summary>设置 PrefixTermEnum.GetPrefixTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.GetPrefixTerm01">
            <summary>设置 PrefixTermEnum.GetPrefixTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.InitializeStub">
            <summary>初始化 type StubPrefixTermEnum 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.Next">
            <summary>设置 FilteredTermEnum.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.Next01">
            <summary>设置 FilteredTermEnum.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.SetEnum(Lucene.Net.Index.TermEnum)">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.SetEnumTermEnum">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.SkipTo(Lucene.Net.Index.Term)">
            <summary>设置 TermEnum.SkipTo(Term target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.SkipToTerm">
            <summary>设置 TermEnum.SkipTo(Term target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.Term">
            <summary>设置 FilteredTermEnum.Term() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.Term01">
            <summary>设置 FilteredTermEnum.Term() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubPrefixTermEnum.TermCompare(Lucene.Net.Index.Term)">
            <summary>设置 PrefixTermEnum.TermCompare(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubPrefixTermEnum.TermCompareTerm">
            <summary>设置 PrefixTermEnum.TermCompare(Term term) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixTermEnum.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixTermEnum.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubPrefixTermEnum.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubQuery">
            <summary>Lucene.Net.Search.Query 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.CreateWeightSearcher">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.Equals(System.Object)">
            <summary>设置 Query.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.EqualsObject">
            <summary>设置 Query.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.GetHashCode">
            <summary>设置 Query.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.GetHashCode01">
            <summary>设置 Query.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.InitializeStub">
            <summary>初始化 type StubQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.ToString(System.String)">
            <summary>设置 Query.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.ToStringString">
            <summary>设置 Query.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubQueryTermVector">
            <summary>Lucene.Net.Search.QueryTermVector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.#ctor(System.String[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.#ctor(System.String,Lucene.Net.Analysis.Analyzer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.GetField">
            <summary>设置 QueryTermVector.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryTermVector.GetField01">
            <summary>设置 QueryTermVector.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.GetTermFrequencies">
            <summary>设置 QueryTermVector.GetTermFrequencies() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryTermVector.GetTermFrequencies01">
            <summary>设置 QueryTermVector.GetTermFrequencies() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.GetTerms">
            <summary>设置 QueryTermVector.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryTermVector.GetTerms01">
            <summary>设置 QueryTermVector.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.IndexOf(System.String)">
            <summary>设置 QueryTermVector.IndexOf(String term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryTermVector.IndexOfString">
            <summary>设置 QueryTermVector.IndexOf(String term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.IndexesOf(System.String[],System.Int32,System.Int32)">
            <summary>设置 QueryTermVector.IndexesOf(String[] terms, Int32 start, Int32 len) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryTermVector.IndexesOfStringArrayInt32Int32">
            <summary>设置 QueryTermVector.IndexesOf(String[] terms, Int32 start, Int32 len) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.InitializeStub">
            <summary>初始化 type StubQueryTermVector 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.Size">
            <summary>设置 QueryTermVector.Size() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryTermVector.Size01">
            <summary>设置 QueryTermVector.Size() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryTermVector.ToString">
            <summary>设置 QueryTermVector.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryTermVector.ToString01">
            <summary>设置 QueryTermVector.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQueryTermVector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQueryTermVector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQueryTermVector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubQueryWrapperFilter">
            <summary>Lucene.Net.Search.QueryWrapperFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.#ctor(Lucene.Net.Search.Query)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.Equals(System.Object)">
            <summary>设置 QueryWrapperFilter.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.EqualsObject">
            <summary>设置 QueryWrapperFilter.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 QueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.GetDocIdSetIndexReader">
            <summary>设置 QueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.GetHashCode">
            <summary>设置 QueryWrapperFilter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.GetHashCode01">
            <summary>设置 QueryWrapperFilter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.InitializeStub">
            <summary>初始化 type StubQueryWrapperFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.ToString">
            <summary>设置 QueryWrapperFilter.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.ToString01">
            <summary>设置 QueryWrapperFilter.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubQueryWrapperFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer">
            <summary>Lucene.Net.Search.ScoreCachingWrappingScorer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.#ctor(Lucene.Net.Search.Scorer)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Advance(System.Int32)">
            <summary>设置 ScoreCachingWrappingScorer.Advance(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.AdvanceInt32">
            <summary>设置 ScoreCachingWrappingScorer.Advance(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Doc">
            <summary>设置 ScoreCachingWrappingScorer.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Doc01">
            <summary>设置 ScoreCachingWrappingScorer.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.DocID">
            <summary>设置 ScoreCachingWrappingScorer.DocID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.DocID01">
            <summary>设置 ScoreCachingWrappingScorer.DocID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Explain(System.Int32)">
            <summary>设置 ScoreCachingWrappingScorer.Explain(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.ExplainInt32">
            <summary>设置 ScoreCachingWrappingScorer.Explain(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.GetSimilarity">
            <summary>设置 ScoreCachingWrappingScorer.GetSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.GetSimilarity01">
            <summary>设置 ScoreCachingWrappingScorer.GetSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.InitializeStub">
            <summary>初始化 type StubScoreCachingWrappingScorer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Next">
            <summary>设置 ScoreCachingWrappingScorer.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Next01">
            <summary>设置 ScoreCachingWrappingScorer.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.NextDoc">
            <summary>设置 ScoreCachingWrappingScorer.NextDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.NextDoc01">
            <summary>设置 ScoreCachingWrappingScorer.NextDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Score(Lucene.Net.Search.HitCollector,System.Int32)">
            <summary>设置 Scorer.Score(HitCollector hc, Int32 max) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Score(Lucene.Net.Search.Collector,System.Int32,System.Int32)">
            <summary>设置 ScoreCachingWrappingScorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Score">
            <summary>设置 ScoreCachingWrappingScorer.Score() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Score(Lucene.Net.Search.Collector)">
            <summary>设置 ScoreCachingWrappingScorer.Score(Collector collector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Score(Lucene.Net.Search.HitCollector)">
            <summary>设置 Scorer.Score(HitCollector hc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.Score01">
            <summary>设置 ScoreCachingWrappingScorer.Score() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.ScoreCollector">
            <summary>设置 ScoreCachingWrappingScorer.Score(Collector collector) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.ScoreCollectorInt32Int32">
            <summary>设置 ScoreCachingWrappingScorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.ScoreHitCollector">
            <summary>设置 Scorer.Score(HitCollector hc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.ScoreHitCollectorInt32">
            <summary>设置 Scorer.Score(HitCollector hc, Int32 max) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.SkipTo(System.Int32)">
            <summary>设置 ScoreCachingWrappingScorer.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.SkipToInt32">
            <summary>设置 ScoreCachingWrappingScorer.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScoreCachingWrappingScorer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubScoreDoc">
            <summary>Lucene.Net.Search.ScoreDoc 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreDoc.#ctor(System.Int32,System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreDoc.InitializeStub">
            <summary>初始化 type StubScoreDoc 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreDoc.ToString">
            <summary>设置 ScoreDoc.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreDoc.ToString01">
            <summary>设置 ScoreDoc.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScoreDoc.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScoreDoc.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScoreDoc.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubScoreDocComparator">
            <summary>Lucene.Net.Search.ScoreDocComparator 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreDocComparator.#ctor">
            <summary>初始化 type StubScoreDocComparator 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreDocComparator.CompareScoreDocScoreDoc">
            <summary>设置 ScoreDocComparator.Compare(ScoreDoc i, ScoreDoc j) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreDocComparator.ln::Lucene#Net#Search#ScoreDocComparator#Compare(Lucene.Net.Search.ScoreDoc,Lucene.Net.Search.ScoreDoc)">
            <summary>设置 ScoreDocComparator.Compare(ScoreDoc i, ScoreDoc j) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreDocComparator.ln::Lucene#Net#Search#ScoreDocComparator#SortType">
            <summary>设置 ScoreDocComparator.SortType() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScoreDocComparator.ln::Lucene#Net#Search#ScoreDocComparator#SortValue(Lucene.Net.Search.ScoreDoc)">
            <summary>设置 ScoreDocComparator.SortValue(ScoreDoc i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreDocComparator.SortType">
            <summary>设置 ScoreDocComparator.SortType() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScoreDocComparator.SortValueScoreDoc">
            <summary>设置 ScoreDocComparator.SortValue(ScoreDoc i) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubScorer">
            <summary>Lucene.Net.Search.Scorer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.#ctor(Lucene.Net.Search.Similarity)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Advance(System.Int32)">
            <summary>设置 DocIdSetIterator.Advance(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.AdvanceInt32">
            <summary>设置 DocIdSetIterator.Advance(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Doc">
            <summary>设置 DocIdSetIterator.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.Doc01">
            <summary>设置 DocIdSetIterator.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.DocID">
            <summary>设置 DocIdSetIterator.DocID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.DocID01">
            <summary>设置 DocIdSetIterator.DocID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Explain(System.Int32)">
            <summary>设置 Scorer.Explain(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.ExplainInt32">
            <summary>设置 Scorer.Explain(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.GetSimilarity">
            <summary>设置 Scorer.GetSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.GetSimilarity01">
            <summary>设置 Scorer.GetSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.InitializeStub">
            <summary>初始化 type StubScorer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Next">
            <summary>设置 DocIdSetIterator.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.Next01">
            <summary>设置 DocIdSetIterator.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.NextDoc">
            <summary>设置 DocIdSetIterator.NextDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.NextDoc01">
            <summary>设置 DocIdSetIterator.NextDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Score(Lucene.Net.Search.HitCollector,System.Int32)">
            <summary>设置 Scorer.Score(HitCollector hc, Int32 max) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Score(Lucene.Net.Search.Collector,System.Int32,System.Int32)">
            <summary>设置 Scorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Score">
            <summary>设置 Scorer.Score() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Score(Lucene.Net.Search.Collector)">
            <summary>设置 Scorer.Score(Collector collector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.Score(Lucene.Net.Search.HitCollector)">
            <summary>设置 Scorer.Score(HitCollector hc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.Score01">
            <summary>设置 Scorer.Score() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.ScoreCollector">
            <summary>设置 Scorer.Score(Collector collector) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.ScoreCollectorInt32Int32">
            <summary>设置 Scorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.ScoreHitCollector">
            <summary>设置 Scorer.Score(HitCollector hc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.ScoreHitCollectorInt32">
            <summary>设置 Scorer.Score(HitCollector hc, Int32 max) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubScorer.SkipTo(System.Int32)">
            <summary>设置 DocIdSetIterator.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubScorer.SkipToInt32">
            <summary>设置 DocIdSetIterator.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScorer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScorer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubScorer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSearchable">
            <summary>Lucene.Net.Search.Searchable 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.#ctor">
            <summary>初始化 type StubSearchable 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.Close">
            <summary>设置 Searchable.Close() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.DocFreqTerm">
            <summary>设置 Searchable.DocFreq(Term term) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.DocFreqsTermArray">
            <summary>设置 Searchable.DocFreqs(Term[] terms) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.DocInt32">
            <summary>设置 Searchable.Doc(Int32 i) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.DocInt32FieldSelector">
            <summary>设置 Searchable.Doc(Int32 n, FieldSelector fieldSelector) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.ExplainWeightInt32">
            <summary>设置 Searchable.Explain(Weight weight, Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Close">
            <summary>设置 Searchable.Close() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Doc(System.Int32)">
            <summary>设置 Searchable.Doc(Int32 i) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Doc(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 Searchable.Doc(Int32 n, FieldSelector fieldSelector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 Searchable.DocFreq(Term term) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#DocFreqs(Lucene.Net.Index.Term[])">
            <summary>设置 Searchable.DocFreqs(Term[] terms) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Explain(Lucene.Net.Search.Weight,System.Int32)">
            <summary>设置 Searchable.Explain(Weight weight, Int32 doc) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#MaxDoc">
            <summary>设置 Searchable.MaxDoc() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Rewrite(Lucene.Net.Search.Query)">
            <summary>设置 Searchable.Rewrite(Query query) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 Searchable.Search(Weight weight, Filter filter, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searchable.Search(Weight weight, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 Searchable.Search(Weight weight, Filter filter, Collector collector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearchable.ln::Lucene#Net#Search#Searchable#Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 Searchable.Search(Weight weight, Filter filter, Int32 n, Sort sort) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.MaxDoc">
            <summary>设置 Searchable.MaxDoc() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.RewriteQuery">
            <summary>设置 Searchable.Rewrite(Query query) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.SearchWeightFilterCollector">
            <summary>设置 Searchable.Search(Weight weight, Filter filter, Collector collector) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.SearchWeightFilterHitCollector">
            <summary>设置 Searchable.Search(Weight weight, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.SearchWeightFilterInt32">
            <summary>设置 Searchable.Search(Weight weight, Filter filter, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearchable.SearchWeightFilterInt32Sort">
            <summary>设置 Searchable.Search(Weight weight, Filter filter, Int32 n, Sort sort) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSearcher">
            <summary>Lucene.Net.Search.Searcher 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Close">
            <summary>设置 Searcher.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.Close01">
            <summary>设置 Searcher.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.CreateWeight(Lucene.Net.Search.Query)">
            <summary>设置 Searcher.CreateWeight(Query query) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.CreateWeightQuery">
            <summary>设置 Searcher.CreateWeight(Query query) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Dispose">
            <summary>设置 Searcher.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.Dispose01">
            <summary>设置 Searcher.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Doc(System.Int32)">
            <summary>设置 Searcher.Doc(Int32 i) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Doc(System.Int32,Lucene.Net.Documents.FieldSelector)">
            <summary>设置 Searcher.Doc(Int32 param1, FieldSelector param2) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.DocFreq(Lucene.Net.Index.Term)">
            <summary>设置 Searcher.DocFreq(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.DocFreqTerm">
            <summary>设置 Searcher.DocFreq(Term term) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.DocFreqs(Lucene.Net.Index.Term[])">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.DocFreqsTermArray">
            <summary>设置 Searcher.DocFreqs(Term[] terms) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.DocInt32">
            <summary>设置 Searcher.Doc(Int32 i) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.DocInt32FieldSelector">
            <summary>设置 Searcher.Doc(Int32 param1, FieldSelector param2) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Explain(Lucene.Net.Search.Query,System.Int32)">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Explain(Lucene.Net.Search.Weight,System.Int32)">
            <summary>设置 Searcher.Explain(Weight weight, Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.ExplainQueryInt32">
            <summary>设置 Searcher.Explain(Query query, Int32 doc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.ExplainWeightInt32">
            <summary>设置 Searcher.Explain(Weight weight, Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.GetSimilarity">
            <summary>设置 Searcher.GetSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.GetSimilarity01">
            <summary>设置 Searcher.GetSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.InitializeStub">
            <summary>初始化 type StubSearcher 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.MaxDoc">
            <summary>设置 Searcher.MaxDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.MaxDoc01">
            <summary>设置 Searcher.MaxDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Rewrite(Lucene.Net.Search.Query)">
            <summary>设置 Searcher.Rewrite(Query query) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.RewriteQuery">
            <summary>设置 Searcher.Rewrite(Query query) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter)">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,System.Int32)">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32)">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, Int32 n) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Weight,Lucene.Net.Search.Filter,System.Int32,Lucene.Net.Search.Sort)">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, Int32 n, Sort sort) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.Collector)">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.Search(Lucene.Net.Search.Query,Lucene.Net.Search.Filter,Lucene.Net.Search.HitCollector)">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryCollector">
            <summary>设置 Searcher.Search(Query query, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryFilter">
            <summary>设置 Searcher.Search(Query query, Filter filter) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryFilterCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryFilterHitCollector">
            <summary>设置 Searcher.Search(Query query, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryFilterInt32">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryFilterInt32Sort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Int32 n, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryFilterSort">
            <summary>设置 Searcher.Search(Query query, Filter filter, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryHitCollector">
            <summary>设置 Searcher.Search(Query query, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQueryInt32">
            <summary>设置 Searcher.Search(Query query, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchQuerySort">
            <summary>设置 Searcher.Search(Query query, Sort sort) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchWeightFilterCollector">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, Collector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchWeightFilterHitCollector">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, HitCollector results) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchWeightFilterInt32">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, Int32 n) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SearchWeightFilterInt32Sort">
            <summary>设置 Searcher.Search(Weight weight, Filter filter, Int32 n, Sort sort) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSearcher.SetSimilarity(Lucene.Net.Search.Similarity)">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSearcher.SetSimilaritySimilarity">
            <summary>设置 Searcher.SetSimilarity(Similarity similarity) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSearcher.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSearcher.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSearcher.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubShortParser">
            <summary>Lucene.Net.Search.ShortParser 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubShortParser.#ctor">
            <summary>初始化 type StubShortParser 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubShortParser.ln::Lucene#Net#Search#ShortParser#ParseShort(System.String)">
            <summary>设置 ShortParser.ParseShort(String string_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubShortParser.ParseShortString">
            <summary>设置 ShortParser.ParseShort(String string_Renamed) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSimilarity">
            <summary>Lucene.Net.Search.Similarity 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.ComputeNorm(System.String,Lucene.Net.Index.FieldInvertState)">
            <summary>设置 Similarity.ComputeNorm(String field, FieldInvertState state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.ComputeNormStringFieldInvertState">
            <summary>设置 Similarity.ComputeNorm(String field, FieldInvertState state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.Coord(System.Int32,System.Int32)">
            <summary>设置 Similarity.Coord(Int32 overlap, Int32 maxOverlap) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.CoordInt32Int32">
            <summary>设置 Similarity.Coord(Int32 overlap, Int32 maxOverlap) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.Idf(System.Int32,System.Int32)">
            <summary>设置 Similarity.Idf(Int32 docFreq, Int32 numDocs) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.Idf(Lucene.Net.Index.Term,Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.Idf(Term term, Searcher searcher) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.Idf(System.Collections.Generic.IList{Lucene.Net.Index.Term},Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.Idf(IList`1&lt;Term&gt; terms, Searcher searcher) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.IdfExplain(Lucene.Net.Index.Term,Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.IdfExplain(Term term, Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.IdfExplainIListOfTermSearcher">
            <summary>设置 Similarity.idfExplain(IList`1&lt;Term&gt; terms, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.IdfExplainTermSearcher">
            <summary>设置 Similarity.IdfExplain(Term term, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.IdfIListOfTermSearcher">
            <summary>设置 Similarity.Idf(IList`1&lt;Term&gt; terms, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.IdfInt32Int32">
            <summary>设置 Similarity.Idf(Int32 docFreq, Int32 numDocs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.IdfTermSearcher">
            <summary>设置 Similarity.Idf(Term term, Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.InitializeStub">
            <summary>初始化 type StubSimilarity 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.LengthNorm(System.String,System.Int32)">
            <summary>设置 Similarity.LengthNorm(String fieldName, Int32 numTokens) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.LengthNormStringInt32">
            <summary>设置 Similarity.LengthNorm(String fieldName, Int32 numTokens) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.QueryNorm(System.Single)">
            <summary>设置 Similarity.QueryNorm(Single sumOfSquaredWeights) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.QueryNormSingle">
            <summary>设置 Similarity.QueryNorm(Single sumOfSquaredWeights) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.ScorePayload(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>设置 Similarity.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.ScorePayload(System.Int32,System.String,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>设置 Similarity.ScorePayload(Int32 docId, String fieldName, Int32 start, Int32 end, Byte[] payload, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.ScorePayloadInt32StringInt32Int32ByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(Int32 docId, String fieldName, Int32 start, Int32 end, Byte[] payload, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.ScorePayloadStringByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.SloppyFreq(System.Int32)">
            <summary>设置 Similarity.SloppyFreq(Int32 distance) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.SloppyFreqInt32">
            <summary>设置 Similarity.SloppyFreq(Int32 distance) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.Tf(System.Int32)">
            <summary>设置 Similarity.Tf(Int32 freq) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.Tf(System.Single)">
            <summary>设置 Similarity.Tf(Single freq) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.TfInt32">
            <summary>设置 Similarity.Tf(Int32 freq) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarity.TfSingle">
            <summary>设置 Similarity.Tf(Single freq) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarity.idfExplain(System.Collections.Generic.IList{Lucene.Net.Index.Term},Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.idfExplain(IList`1&lt;Term&gt; terms, Searcher searcher) 的 存根</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSimilarity.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSimilarity.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSimilarity.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSimilarityDelegator">
            <summary>Lucene.Net.Search.SimilarityDelegator 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.#ctor(Lucene.Net.Search.Similarity)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.ComputeNorm(System.String,Lucene.Net.Index.FieldInvertState)">
            <summary>设置 SimilarityDelegator.ComputeNorm(String fieldName, FieldInvertState state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.ComputeNormStringFieldInvertState">
            <summary>设置 SimilarityDelegator.ComputeNorm(String fieldName, FieldInvertState state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.Coord(System.Int32,System.Int32)">
            <summary>设置 SimilarityDelegator.Coord(Int32 overlap, Int32 maxOverlap) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.CoordInt32Int32">
            <summary>设置 SimilarityDelegator.Coord(Int32 overlap, Int32 maxOverlap) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.Idf(Lucene.Net.Index.Term,Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.Idf(Term term, Searcher searcher) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.Idf(System.Collections.Generic.IList{Lucene.Net.Index.Term},Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.Idf(IList`1&lt;Term&gt; terms, Searcher searcher) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.Idf(System.Int32,System.Int32)">
            <summary>设置 SimilarityDelegator.Idf(Int32 docFreq, Int32 numDocs) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.IdfExplain(Lucene.Net.Index.Term,Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.IdfExplain(Term term, Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.IdfExplainIListOfTermSearcher">
            <summary>设置 Similarity.idfExplain(IList`1&lt;Term&gt; terms, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.IdfExplainTermSearcher">
            <summary>设置 Similarity.IdfExplain(Term term, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.IdfIListOfTermSearcher">
            <summary>设置 Similarity.Idf(IList`1&lt;Term&gt; terms, Searcher searcher) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.IdfInt32Int32">
            <summary>设置 SimilarityDelegator.Idf(Int32 docFreq, Int32 numDocs) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.IdfTermSearcher">
            <summary>设置 Similarity.Idf(Term term, Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.InitializeStub">
            <summary>初始化 type StubSimilarityDelegator 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.LengthNorm(System.String,System.Int32)">
            <summary>设置 SimilarityDelegator.LengthNorm(String fieldName, Int32 numTerms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.LengthNormStringInt32">
            <summary>设置 SimilarityDelegator.LengthNorm(String fieldName, Int32 numTerms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.QueryNorm(System.Single)">
            <summary>设置 SimilarityDelegator.QueryNorm(Single sumOfSquaredWeights) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.QueryNormSingle">
            <summary>设置 SimilarityDelegator.QueryNorm(Single sumOfSquaredWeights) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.ScorePayload(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>设置 SimilarityDelegator.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.ScorePayload(System.Int32,System.String,System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>设置 Similarity.ScorePayload(Int32 docId, String fieldName, Int32 start, Int32 end, Byte[] payload, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.ScorePayloadInt32StringInt32Int32ByteArrayInt32Int32">
            <summary>设置 Similarity.ScorePayload(Int32 docId, String fieldName, Int32 start, Int32 end, Byte[] payload, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.ScorePayloadStringByteArrayInt32Int32">
            <summary>设置 SimilarityDelegator.ScorePayload(String fieldName, Byte[] payload, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.SloppyFreq(System.Int32)">
            <summary>设置 SimilarityDelegator.SloppyFreq(Int32 distance) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.SloppyFreqInt32">
            <summary>设置 SimilarityDelegator.SloppyFreq(Int32 distance) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.Tf(System.Int32)">
            <summary>设置 Similarity.Tf(Int32 freq) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.Tf(System.Single)">
            <summary>设置 SimilarityDelegator.Tf(Single freq) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.TfInt32">
            <summary>设置 Similarity.Tf(Int32 freq) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSimilarityDelegator.TfSingle">
            <summary>设置 SimilarityDelegator.Tf(Single freq) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSimilarityDelegator.idfExplain(System.Collections.Generic.IList{Lucene.Net.Index.Term},Lucene.Net.Search.Searcher)">
            <summary>设置 Similarity.idfExplain(IList`1&lt;Term&gt; terms, Searcher searcher) 的 存根</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSimilarityDelegator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSimilarityDelegator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSimilarityDelegator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSort">
            <summary>Lucene.Net.Search.Sort 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.#ctor(System.String[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.#ctor(Lucene.Net.Search.SortField)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.#ctor(Lucene.Net.Search.SortField[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.Equals(System.Object)">
            <summary>设置 Sort.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSort.EqualsObject">
            <summary>设置 Sort.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.GetHashCode">
            <summary>设置 Sort.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSort.GetHashCode01">
            <summary>设置 Sort.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.GetSort">
            <summary>设置 Sort.GetSort() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSort.GetSort01">
            <summary>设置 Sort.GetSort() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.InitializeStub">
            <summary>初始化 type StubSort 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.SetSort(Lucene.Net.Search.SortField)">
            <summary>设置 Sort.SetSort(SortField field) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.SetSort(Lucene.Net.Search.SortField[])">
            <summary>设置 Sort.SetSort(SortField[] fields) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.SetSort(System.String[])">
            <summary>设置 Sort.SetSort(String[] fieldnames) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.SetSort(System.String,System.Boolean)">
            <summary>设置 Sort.SetSort(String field, Boolean reverse) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSort.SetSortSortField">
            <summary>设置 Sort.SetSort(SortField field) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSort.SetSortSortFieldArray">
            <summary>设置 Sort.SetSort(SortField[] fields) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSort.SetSortStringArray">
            <summary>设置 Sort.SetSort(String[] fieldnames) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSort.SetSortStringBoolean">
            <summary>设置 Sort.SetSort(String field, Boolean reverse) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSort.ToString">
            <summary>设置 Sort.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSort.ToString01">
            <summary>设置 Sort.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSort.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSort.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSort.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSortField">
            <summary>Lucene.Net.Search.SortField 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,Lucene.Net.Search.FieldComparatorSource)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,Lucene.Net.Search.SortComparatorSource)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,Lucene.Net.Search.Parser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,Lucene.Net.Search.FieldComparatorSource,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,Lucene.Net.Search.Parser,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,Lucene.Net.Search.SortComparatorSource,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.Equals(System.Object)">
            <summary>设置 SortField.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.EqualsObject">
            <summary>设置 SortField.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetComparator(System.Int32,System.Int32)">
            <summary>设置 SortField.GetComparator(Int32 numHits, Int32 sortPos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetComparatorInt32Int32">
            <summary>设置 SortField.GetComparator(Int32 numHits, Int32 sortPos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetComparatorSource">
            <summary>设置 SortField.GetComparatorSource() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetComparatorSource01">
            <summary>设置 SortField.GetComparatorSource() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetFactory">
            <summary>设置 SortField.GetFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetFactory01">
            <summary>设置 SortField.GetFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetField">
            <summary>设置 SortField.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetField01">
            <summary>设置 SortField.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetHashCode">
            <summary>设置 SortField.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetHashCode01">
            <summary>设置 SortField.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetParser">
            <summary>设置 SortField.GetParser() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetParser01">
            <summary>设置 SortField.GetParser() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetReverse">
            <summary>设置 SortField.GetReverse() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetReverse01">
            <summary>设置 SortField.GetReverse() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetType">
            <summary>设置 SortField.GetType() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetType01">
            <summary>设置 SortField.GetType() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.GetUseLegacySearch">
            <summary>设置 SortField.GetUseLegacySearch() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.GetUseLegacySearch01">
            <summary>设置 SortField.GetUseLegacySearch() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.InitializeStub">
            <summary>初始化 type StubSortField 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.SetUseLegacySearch(System.Boolean)">
            <summary>设置 SortField.SetUseLegacySearch(Boolean legacy) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.SetUseLegacySearchBoolean">
            <summary>设置 SortField.SetUseLegacySearch(Boolean legacy) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSortField.ToString">
            <summary>设置 SortField.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSortField.ToString01">
            <summary>设置 SortField.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSortField.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSortField.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSortField.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSpanFilter">
            <summary>Lucene.Net.Search.SpanFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilter.BitSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanFilter.BitSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanFilter.BitSpansIndexReader">
            <summary>设置 SpanFilter.BitSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 Filter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanFilter.GetDocIdSetIndexReader">
            <summary>设置 Filter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilter.InitializeStub">
            <summary>初始化 type StubSpanFilter 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSpanFilterResult">
            <summary>Lucene.Net.Search.SpanFilterResult 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilterResult.#ctor(Lucene.Net.Search.DocIdSet,System.Collections.Generic.List{Lucene.Net.Search.SpanFilterResult.PositionInfo})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilterResult.#ctor(System.Collections.BitArray,System.Collections.Generic.List{Lucene.Net.Search.SpanFilterResult.PositionInfo})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilterResult.GetBits">
            <summary>设置 SpanFilterResult.GetBits() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanFilterResult.GetBits01">
            <summary>设置 SpanFilterResult.GetBits() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilterResult.GetDocIdSet">
            <summary>设置 SpanFilterResult.GetDocIdSet() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanFilterResult.GetDocIdSet01">
            <summary>设置 SpanFilterResult.GetDocIdSet() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilterResult.GetPositions">
            <summary>设置 SpanFilterResult.GetPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanFilterResult.GetPositions01">
            <summary>设置 SpanFilterResult.GetPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanFilterResult.InitializeStub">
            <summary>初始化 type StubSpanFilterResult 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanFilterResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanFilterResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanFilterResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubSpanQueryFilter">
            <summary>Lucene.Net.Search.SpanQueryFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.#ctor(Lucene.Net.Search.Spans.SpanQuery)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.BitSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanQueryFilter.BitSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanQueryFilter.BitSpansIndexReader">
            <summary>设置 SpanQueryFilter.BitSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.Equals(System.Object)">
            <summary>设置 SpanQueryFilter.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanQueryFilter.EqualsObject">
            <summary>设置 SpanQueryFilter.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanQueryFilter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanQueryFilter.GetDocIdSetIndexReader">
            <summary>设置 SpanQueryFilter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.GetHashCode">
            <summary>设置 SpanQueryFilter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanQueryFilter.GetHashCode01">
            <summary>设置 SpanQueryFilter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.GetQuery">
            <summary>设置 SpanQueryFilter.GetQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanQueryFilter.GetQuery01">
            <summary>设置 SpanQueryFilter.GetQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.InitializeStub">
            <summary>初始化 type StubSpanQueryFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubSpanQueryFilter.ToString">
            <summary>设置 SpanQueryFilter.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubSpanQueryFilter.ToString01">
            <summary>设置 SpanQueryFilter.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanQueryFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanQueryFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubSpanQueryFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubStringIndex">
            <summary>Lucene.Net.Search.StringIndex 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubStringIndex.#ctor(System.Int32[],System.String[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubStringIndex.BinarySearchLookup(System.String)">
            <summary>设置 StringIndex.BinarySearchLookup(String key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubStringIndex.BinarySearchLookupString">
            <summary>设置 StringIndex.BinarySearchLookup(String key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubStringIndex.InitializeStub">
            <summary>初始化 type StubStringIndex 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubStringIndex.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubStringIndex.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubStringIndex.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubTermQuery">
            <summary>Lucene.Net.Search.TermQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.#ctor(Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 TermQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.CreateWeightSearcher">
            <summary>设置 TermQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.Equals(System.Object)">
            <summary>设置 TermQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.EqualsObject">
            <summary>设置 TermQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 TermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 TermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.GetHashCode">
            <summary>设置 TermQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.GetHashCode01">
            <summary>设置 TermQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.GetTerm">
            <summary>设置 TermQuery.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.GetTerm01">
            <summary>设置 TermQuery.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.InitializeStub">
            <summary>初始化 type StubTermQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.ToString(System.String)">
            <summary>设置 TermQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.ToStringString">
            <summary>设置 TermQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubTermRangeFilter">
            <summary>Lucene.Net.Search.TermRangeFilter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Globalization.CompareInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.ClearTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.ClearTotalNumberOfTerms01">
            <summary>设置 MultiTermQueryWrapperFilter.ClearTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.Equals(System.Object)">
            <summary>设置 MultiTermQueryWrapperFilter.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.EqualsObject">
            <summary>设置 MultiTermQueryWrapperFilter.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetDocIdSet(Lucene.Net.Index.IndexReader)">
            <summary>设置 MultiTermQueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetDocIdSetIndexReader">
            <summary>设置 MultiTermQueryWrapperFilter.GetDocIdSet(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetField">
            <summary>设置 TermRangeFilter.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetField01">
            <summary>设置 TermRangeFilter.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetHashCode">
            <summary>设置 MultiTermQueryWrapperFilter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetHashCode01">
            <summary>设置 MultiTermQueryWrapperFilter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetLowerTerm">
            <summary>设置 TermRangeFilter.GetLowerTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetLowerTerm01">
            <summary>设置 TermRangeFilter.GetLowerTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQueryWrapperFilter.GetTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetTotalNumberOfTerms01">
            <summary>设置 MultiTermQueryWrapperFilter.GetTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetUpperTerm">
            <summary>设置 TermRangeFilter.GetUpperTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.GetUpperTerm01">
            <summary>设置 TermRangeFilter.GetUpperTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.IncludesLower">
            <summary>设置 TermRangeFilter.IncludesLower() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.IncludesLower01">
            <summary>设置 TermRangeFilter.IncludesLower() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.IncludesUpper">
            <summary>设置 TermRangeFilter.IncludesUpper() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.IncludesUpper01">
            <summary>设置 TermRangeFilter.IncludesUpper() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.InitializeStub">
            <summary>初始化 type StubTermRangeFilter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeFilter.ToString">
            <summary>设置 MultiTermQueryWrapperFilter.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeFilter.ToString01">
            <summary>设置 MultiTermQueryWrapperFilter.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubTermRangeQuery">
            <summary>Lucene.Net.Search.TermRangeQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Globalization.CompareInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.ClearTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.CreateWeightSearcher">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.Equals(System.Object)">
            <summary>设置 TermRangeQuery.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.EqualsObject">
            <summary>设置 TermRangeQuery.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetEnum(Lucene.Net.Index.IndexReader)">
            <summary>设置 TermRangeQuery.GetEnum(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetEnumIndexReader">
            <summary>设置 TermRangeQuery.GetEnum(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetField">
            <summary>设置 TermRangeQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetField01">
            <summary>设置 TermRangeQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetHashCode">
            <summary>设置 TermRangeQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetHashCode01">
            <summary>设置 TermRangeQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetLowerTerm">
            <summary>设置 TermRangeQuery.GetLowerTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetLowerTerm01">
            <summary>设置 TermRangeQuery.GetLowerTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetRewriteMethod">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetRewriteMethod01">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetTerm">
            <summary>设置 MultiTermQuery.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetTerm01">
            <summary>设置 MultiTermQuery.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetUpperTerm">
            <summary>设置 TermRangeQuery.GetUpperTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.GetUpperTerm01">
            <summary>设置 TermRangeQuery.GetUpperTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.IncTotalNumberOfTerms(System.Int32)">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.IncTotalNumberOfTermsInt32">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.IncludesLower">
            <summary>设置 TermRangeQuery.IncludesLower() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.IncludesLower01">
            <summary>设置 TermRangeQuery.IncludesLower() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.IncludesUpper">
            <summary>设置 TermRangeQuery.IncludesUpper() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.IncludesUpper01">
            <summary>设置 TermRangeQuery.IncludesUpper() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.InitializeStub">
            <summary>初始化 type StubTermRangeQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 MultiTermQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.RewriteIndexReader">
            <summary>设置 MultiTermQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.SetRewriteMethod(Lucene.Net.Search.MultiTermQuery.RewriteMethod)">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.ToString(System.String)">
            <summary>设置 TermRangeQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.ToStringString">
            <summary>设置 TermRangeQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubTermRangeTermEnum">
            <summary>Lucene.Net.Search.TermRangeTermEnum 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.#ctor(Lucene.Net.Index.IndexReader,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Globalization.CompareInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.Close">
            <summary>设置 FilteredTermEnum.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.Close01">
            <summary>设置 FilteredTermEnum.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.Difference">
            <summary>设置 TermRangeTermEnum.Difference() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.Difference01">
            <summary>设置 TermRangeTermEnum.Difference() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.DocFreq">
            <summary>设置 FilteredTermEnum.DocFreq() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.DocFreq01">
            <summary>设置 FilteredTermEnum.DocFreq() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.EndEnum">
            <summary>设置 TermRangeTermEnum.EndEnum() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.EndEnum01">
            <summary>设置 TermRangeTermEnum.EndEnum() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.InitializeStub">
            <summary>初始化 type StubTermRangeTermEnum 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.Next">
            <summary>设置 FilteredTermEnum.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.Next01">
            <summary>设置 FilteredTermEnum.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.SetEnum(Lucene.Net.Index.TermEnum)">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.SetEnumTermEnum">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.SkipTo(Lucene.Net.Index.Term)">
            <summary>设置 TermEnum.SkipTo(Term target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.SkipToTerm">
            <summary>设置 TermEnum.SkipTo(Term target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.Term">
            <summary>设置 FilteredTermEnum.Term() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.Term01">
            <summary>设置 FilteredTermEnum.Term() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.TermCompare(Lucene.Net.Index.Term)">
            <summary>设置 TermRangeTermEnum.TermCompare(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.TermCompareTerm">
            <summary>设置 TermRangeTermEnum.TermCompare(Term term) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTermRangeTermEnum.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubTimeLimitingCollector">
            <summary>Lucene.Net.Search.TimeLimitingCollector 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.#ctor(Lucene.Net.Search.Collector,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.AcceptsDocsOutOfOrder">
            <summary>设置 TimeLimitingCollector.AcceptsDocsOutOfOrder() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.AcceptsDocsOutOfOrder01">
            <summary>设置 TimeLimitingCollector.AcceptsDocsOutOfOrder() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.Collect(System.Int32)">
            <summary>设置 TimeLimitingCollector.Collect(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.CollectInt32">
            <summary>设置 TimeLimitingCollector.Collect(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.InitializeStub">
            <summary>初始化 type StubTimeLimitingCollector 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.IsGreedy">
            <summary>设置 TimeLimitingCollector.IsGreedy() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.IsGreedy01">
            <summary>设置 TimeLimitingCollector.IsGreedy() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.SetGreedy(System.Boolean)">
            <summary>设置 TimeLimitingCollector.SetGreedy(Boolean greedy) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.SetGreedyBoolean">
            <summary>设置 TimeLimitingCollector.SetGreedy(Boolean greedy) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.SetNextReader(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>设置 TimeLimitingCollector.SetNextReader(IndexReader reader, Int32 base_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.SetNextReaderIndexReaderInt32">
            <summary>设置 TimeLimitingCollector.SetNextReader(IndexReader reader, Int32 base_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.SetScorer(Lucene.Net.Search.Scorer)">
            <summary>设置 TimeLimitingCollector.SetScorer(Scorer scorer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.SetScorerScorer">
            <summary>设置 TimeLimitingCollector.SetScorer(Scorer scorer) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTimeLimitingCollector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubTopDocs">
            <summary>Lucene.Net.Search.TopDocs 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocs.#ctor(System.Int32,Lucene.Net.Search.ScoreDoc[],System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocs.GetMaxScore">
            <summary>设置 TopDocs.GetMaxScore() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocs.GetMaxScore01">
            <summary>设置 TopDocs.GetMaxScore() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocs.InitializeStub">
            <summary>初始化 type StubTopDocs 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocs.SetMaxScore(System.Single)">
            <summary>设置 TopDocs.SetMaxScore(Single maxScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocs.SetMaxScoreSingle">
            <summary>设置 TopDocs.SetMaxScore(Single maxScore) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopDocs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopDocs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopDocs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubTopDocsCollector`1">
            <summary>Lucene.Net.Search.TopDocsCollector`1 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.#ctor(Lucene.Net.Util.PriorityQueue{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.AcceptsDocsOutOfOrder">
            <summary>设置 Collector.AcceptsDocsOutOfOrder() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.AcceptsDocsOutOfOrder01">
            <summary>设置 Collector.AcceptsDocsOutOfOrder() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.Collect(System.Int32)">
            <summary>设置 Collector.Collect(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.CollectInt32">
            <summary>设置 Collector.Collect(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.GetTotalHits">
            <summary>设置 TopDocsCollector`1.GetTotalHits() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.GetTotalHits01">
            <summary>设置 TopDocsCollector`1.GetTotalHits() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.InitializeStub">
            <summary>初始化 type StubTopDocsCollector 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.NewTopDocs(Lucene.Net.Search.ScoreDoc[],System.Int32)">
            <summary>设置 TopDocsCollector`1.NewTopDocs(ScoreDoc[] results, Int32 start) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.NewTopDocsScoreDocArrayInt32">
            <summary>设置 TopDocsCollector`1.NewTopDocs(ScoreDoc[] results, Int32 start) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.PopulateResults(Lucene.Net.Search.ScoreDoc[],System.Int32)">
            <summary>设置 TopDocsCollector`1.PopulateResults(ScoreDoc[] results, Int32 howMany) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.PopulateResultsScoreDocArrayInt32">
            <summary>设置 TopDocsCollector`1.PopulateResults(ScoreDoc[] results, Int32 howMany) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.SetNextReader(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>设置 Collector.SetNextReader(IndexReader reader, Int32 docBase) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.SetNextReaderIndexReaderInt32">
            <summary>设置 Collector.SetNextReader(IndexReader reader, Int32 docBase) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.SetScorer(Lucene.Net.Search.Scorer)">
            <summary>设置 Collector.SetScorer(Scorer scorer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.SetScorerScorer">
            <summary>设置 Collector.SetScorer(Scorer scorer) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopDocsCollector`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubTopFieldDocs">
            <summary>Lucene.Net.Search.TopFieldDocs 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopFieldDocs.#ctor(System.Int32,Lucene.Net.Search.ScoreDoc[],Lucene.Net.Search.SortField[],System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopFieldDocs.GetMaxScore">
            <summary>设置 TopDocs.GetMaxScore() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopFieldDocs.GetMaxScore01">
            <summary>设置 TopDocs.GetMaxScore() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopFieldDocs.InitializeStub">
            <summary>初始化 type StubTopFieldDocs 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubTopFieldDocs.SetMaxScore(System.Single)">
            <summary>设置 TopDocs.SetMaxScore(Single maxScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubTopFieldDocs.SetMaxScoreSingle">
            <summary>设置 TopDocs.SetMaxScore(Single maxScore) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopFieldDocs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopFieldDocs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubTopFieldDocs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubWeight">
            <summary>Lucene.Net.Search.Weight 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.Explain(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>设置 Weight.Explain(IndexReader reader, Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWeight.ExplainIndexReaderInt32">
            <summary>设置 Weight.Explain(IndexReader reader, Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.GetQuery">
            <summary>设置 Weight.GetQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWeight.GetQuery01">
            <summary>设置 Weight.GetQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.GetValue">
            <summary>设置 Weight.GetValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWeight.GetValue01">
            <summary>设置 Weight.GetValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.InitializeStub">
            <summary>初始化 type StubWeight 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.Normalize(System.Single)">
            <summary>设置 Weight.Normalize(Single norm) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWeight.NormalizeSingle">
            <summary>设置 Weight.Normalize(Single norm) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.Scorer(Lucene.Net.Index.IndexReader,System.Boolean,System.Boolean)">
            <summary>设置 Weight.Scorer(IndexReader reader, Boolean scoreDocsInOrder, Boolean topScorer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWeight.ScorerIndexReaderBooleanBoolean">
            <summary>设置 Weight.Scorer(IndexReader reader, Boolean scoreDocsInOrder, Boolean topScorer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.ScoresDocsOutOfOrder">
            <summary>设置 Weight.ScoresDocsOutOfOrder() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWeight.ScoresDocsOutOfOrder01">
            <summary>设置 Weight.ScoresDocsOutOfOrder() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWeight.SumOfSquaredWeights">
            <summary>设置 Weight.SumOfSquaredWeights() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWeight.SumOfSquaredWeights01">
            <summary>设置 Weight.SumOfSquaredWeights() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWeight.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWeight.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWeight.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubWildcardQuery">
            <summary>Lucene.Net.Search.WildcardQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.#ctor(Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.ClearTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.ClearTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.ClearTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.CreateWeightSearcher">
            <summary>设置 Query.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.Equals(System.Object)">
            <summary>设置 WildcardQuery.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.EqualsObject">
            <summary>设置 WildcardQuery.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.GetEnum(Lucene.Net.Index.IndexReader)">
            <summary>设置 WildcardQuery.GetEnum(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.GetEnumIndexReader">
            <summary>设置 WildcardQuery.GetEnum(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.GetHashCode">
            <summary>设置 WildcardQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.GetHashCode01">
            <summary>设置 WildcardQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.GetRewriteMethod">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.GetRewriteMethod01">
            <summary>设置 MultiTermQuery.GetRewriteMethod() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.GetTerm">
            <summary>设置 WildcardQuery.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.GetTerm01">
            <summary>设置 WildcardQuery.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.GetTotalNumberOfTerms">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.GetTotalNumberOfTerms01">
            <summary>设置 MultiTermQuery.GetTotalNumberOfTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.IncTotalNumberOfTerms(System.Int32)">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.IncTotalNumberOfTermsInt32">
            <summary>设置 MultiTermQuery.IncTotalNumberOfTerms(Int32 inc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.InitializeStub">
            <summary>初始化 type StubWildcardQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 WildcardQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.RewriteIndexReader">
            <summary>设置 WildcardQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.SetRewriteMethod(Lucene.Net.Search.MultiTermQuery.RewriteMethod)">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.SetRewriteMethodMultiTermQueryRewriteMethod">
            <summary>设置 MultiTermQuery.SetRewriteMethod(RewriteMethod method) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.ToString(System.String)">
            <summary>设置 WildcardQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.ToStringString">
            <summary>设置 WildcardQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWildcardQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWildcardQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWildcardQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Fakes.StubWildcardTermEnum">
            <summary>Lucene.Net.Search.WildcardTermEnum 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.#ctor(Lucene.Net.Index.IndexReader,Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.Close">
            <summary>设置 FilteredTermEnum.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.Close01">
            <summary>设置 FilteredTermEnum.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.Difference">
            <summary>设置 WildcardTermEnum.Difference() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.Difference01">
            <summary>设置 WildcardTermEnum.Difference() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.DocFreq">
            <summary>设置 FilteredTermEnum.DocFreq() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.DocFreq01">
            <summary>设置 FilteredTermEnum.DocFreq() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.EndEnum">
            <summary>设置 WildcardTermEnum.EndEnum() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.EndEnum01">
            <summary>设置 WildcardTermEnum.EndEnum() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.InitializeStub">
            <summary>初始化 type StubWildcardTermEnum 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.Next">
            <summary>设置 FilteredTermEnum.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.Next01">
            <summary>设置 FilteredTermEnum.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.SetEnum(Lucene.Net.Index.TermEnum)">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.SetEnumTermEnum">
            <summary>设置 FilteredTermEnum.SetEnum(TermEnum actualEnum) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.SkipTo(Lucene.Net.Index.Term)">
            <summary>设置 TermEnum.SkipTo(Term target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.SkipToTerm">
            <summary>设置 TermEnum.SkipTo(Term target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.Term">
            <summary>设置 FilteredTermEnum.Term() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.Term01">
            <summary>设置 FilteredTermEnum.Term() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Fakes.StubWildcardTermEnum.TermCompare(Lucene.Net.Index.Term)">
            <summary>设置 WildcardTermEnum.TermCompare(Term term) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Fakes.StubWildcardTermEnum.TermCompareTerm">
            <summary>设置 WildcardTermEnum.TermCompare(Term term) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWildcardTermEnum.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWildcardTermEnum.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Fakes.StubWildcardTermEnum.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource">
            <summary>Lucene.Net.Search.Function.ByteFieldSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.#ctor(Lucene.Net.Search.Function.ByteFieldSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 ByteFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.CachedFieldSourceHashCode">
            <summary>设置 ByteFieldSource.CachedFieldSourceHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.ConstructorString">
            <summary>设置 ByteFieldSource.ByteFieldSource(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.ConstructorStringByteParser">
            <summary>设置 ByteFieldSource.ByteFieldSource(String field, ByteParser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.Description">
            <summary>设置 ByteFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 ByteFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.AllInstances.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 ByteFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.AllInstances.CachedFieldSourceHashCode">
            <summary>设置 ByteFieldSource.CachedFieldSourceHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.AllInstances.Description">
            <summary>设置 ByteFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimByteFieldSource.AllInstances.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 ByteFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider">
            <summary>Lucene.Net.Search.Function.CustomScoreProvider 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.#ctor(Lucene.Net.Search.Function.CustomScoreProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.ConstructorIndexReader">
            <summary>设置 CustomScoreProvider.CustomScoreProvider(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.CustomExplainInt32ExplanationExplanation">
            <summary>设置 CustomScoreProvider.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation valSrcExpl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.CustomExplainInt32ExplanationExplanationArray">
            <summary>设置 CustomScoreProvider.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation[] valSrcExpls) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.CustomScoreInt32SingleSingle">
            <summary>设置 CustomScoreProvider.CustomScore(Int32 doc, Single subQueryScore, Single valSrcScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.CustomScoreInt32SingleSingleArray">
            <summary>设置 CustomScoreProvider.CustomScore(Int32 doc, Single subQueryScore, Single[] valSrcScores) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.AllInstances.CustomExplainInt32ExplanationExplanation">
            <summary>设置 CustomScoreProvider.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation valSrcExpl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.AllInstances.CustomExplainInt32ExplanationExplanationArray">
            <summary>设置 CustomScoreProvider.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation[] valSrcExpls) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.AllInstances.CustomScoreInt32SingleSingle">
            <summary>设置 CustomScoreProvider.CustomScore(Int32 doc, Single subQueryScore, Single valSrcScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreProvider.AllInstances.CustomScoreInt32SingleSingleArray">
            <summary>设置 CustomScoreProvider.CustomScore(Int32 doc, Single subQueryScore, Single[] valSrcScores) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery">
            <summary>Lucene.Net.Search.Function.CustomScoreQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.#ctor(Lucene.Net.Search.Function.CustomScoreQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.Clone">
            <summary>设置 CustomScoreQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.ConstructorQuery">
            <summary>设置 CustomScoreQuery.CustomScoreQuery(Query subQuery) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.ConstructorQueryValueSourceQuery">
            <summary>设置 CustomScoreQuery.CustomScoreQuery(Query subQuery, ValueSourceQuery valSrcQuery) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.ConstructorQueryValueSourceQueryArray">
            <summary>设置 CustomScoreQuery.CustomScoreQuery(Query subQuery, ValueSourceQuery[] valSrcQueries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.CreateWeightSearcher">
            <summary>设置 CustomScoreQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.CustomExplainInt32ExplanationExplanation">
            <summary>设置 CustomScoreQuery.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation valSrcExpl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.CustomExplainInt32ExplanationExplanationArray">
            <summary>设置 CustomScoreQuery.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation[] valSrcExpls) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.CustomScoreInt32SingleSingle">
            <summary>设置 CustomScoreQuery.CustomScore(Int32 doc, Single subQueryScore, Single valSrcScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.CustomScoreInt32SingleSingleArray">
            <summary>设置 CustomScoreQuery.CustomScore(Int32 doc, Single subQueryScore, Single[] valSrcScores) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.EqualsObject">
            <summary>设置 CustomScoreQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 CustomScoreQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.GetCustomScoreProviderIndexReader">
            <summary>设置 CustomScoreQuery.GetCustomScoreProvider(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.GetHashCode">
            <summary>设置 CustomScoreQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.IsStrict">
            <summary>设置 CustomScoreQuery.IsStrict() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.Name">
            <summary>设置 CustomScoreQuery.Name() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.RewriteIndexReader">
            <summary>设置 CustomScoreQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.SetStrictBoolean">
            <summary>设置 CustomScoreQuery.SetStrict(Boolean strict) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.ToStringString">
            <summary>设置 CustomScoreQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.Clone">
            <summary>设置 CustomScoreQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 CustomScoreQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.CustomExplainInt32ExplanationExplanation">
            <summary>设置 CustomScoreQuery.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation valSrcExpl) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.CustomExplainInt32ExplanationExplanationArray">
            <summary>设置 CustomScoreQuery.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation[] valSrcExpls) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.CustomScoreInt32SingleSingle">
            <summary>设置 CustomScoreQuery.CustomScore(Int32 doc, Single subQueryScore, Single valSrcScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.CustomScoreInt32SingleSingleArray">
            <summary>设置 CustomScoreQuery.CustomScore(Int32 doc, Single subQueryScore, Single[] valSrcScores) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.EqualsObject">
            <summary>设置 CustomScoreQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 CustomScoreQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.GetCustomScoreProviderIndexReader">
            <summary>设置 CustomScoreQuery.GetCustomScoreProvider(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.GetHashCode01">
            <summary>设置 CustomScoreQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.IsStrict">
            <summary>设置 CustomScoreQuery.IsStrict() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.Name">
            <summary>设置 CustomScoreQuery.Name() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.RewriteIndexReader">
            <summary>设置 CustomScoreQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.SetStrictBoolean">
            <summary>设置 CustomScoreQuery.SetStrict(Boolean strict) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimCustomScoreQuery.AllInstances.ToStringString">
            <summary>设置 CustomScoreQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimDocValues">
            <summary>Lucene.Net.Search.Function.DocValues 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimDocValues.#ctor(Lucene.Net.Search.Function.DocValues)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimDocValues.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimDocValues.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.Compute">
            <summary>设置 DocValues.Compute() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.Constructor">
            <summary>设置 DocValues.DocValues() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.DoubleValInt32">
            <summary>设置 DocValues.DoubleVal(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.ExplainInt32">
            <summary>设置 DocValues.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.GetAverageValue">
            <summary>设置 DocValues.GetAverageValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.GetInnerArray">
            <summary>设置 DocValues.GetInnerArray() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.GetMaxValue">
            <summary>设置 DocValues.GetMaxValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.GetMinValue">
            <summary>设置 DocValues.GetMinValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.IntValInt32">
            <summary>设置 DocValues.IntVal(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.LongValInt32">
            <summary>设置 DocValues.LongVal(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.StrValInt32">
            <summary>设置 DocValues.StrVal(Int32 doc) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.Compute">
            <summary>设置 DocValues.Compute() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.DoubleValInt32">
            <summary>设置 DocValues.DoubleVal(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.ExplainInt32">
            <summary>设置 DocValues.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.GetAverageValue">
            <summary>设置 DocValues.GetAverageValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.GetInnerArray">
            <summary>设置 DocValues.GetInnerArray() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.GetMaxValue">
            <summary>设置 DocValues.GetMaxValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.GetMinValue">
            <summary>设置 DocValues.GetMinValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.IntValInt32">
            <summary>设置 DocValues.IntVal(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.LongValInt32">
            <summary>设置 DocValues.LongVal(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimDocValues.AllInstances.StrValInt32">
            <summary>设置 DocValues.StrVal(Int32 doc) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource">
            <summary>Lucene.Net.Search.Function.FieldCacheSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.#ctor(Lucene.Net.Search.Function.FieldCacheSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.ConstructorString">
            <summary>设置 FieldCacheSource.FieldCacheSource(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.Description">
            <summary>设置 FieldCacheSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.EqualsObject">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.GetHashCode">
            <summary>设置 FieldCacheSource.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.GetValuesIndexReader">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.AllInstances.Description">
            <summary>设置 FieldCacheSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.AllInstances.EqualsObject">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.AllInstances.GetHashCode01">
            <summary>设置 FieldCacheSource.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldCacheSource.AllInstances.GetValuesIndexReader">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery">
            <summary>Lucene.Net.Search.Function.FieldScoreQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.#ctor(Lucene.Net.Search.Function.FieldScoreQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ConstructorStringFieldScoreQueryType">
            <summary>设置 FieldScoreQuery.FieldScoreQuery(String field, Type type) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.GetValueSourceStringFieldScoreQueryType">
            <summary>设置 FieldScoreQuery.GetValueSource(String field, Type type) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType">
            <summary>Lucene.Net.Search.Function.FieldScoreQuery+Type 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.#ctor(Lucene.Net.Search.Function.FieldScoreQuery.Type)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.ConstructorString">
            <summary>设置 Type.Type(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.StaticConstructor">
            <summary>设置 Type.Type() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.ToString">
            <summary>设置 Type.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFieldScoreQuery.ShimType.AllInstances.ToString01">
            <summary>设置 Type.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource">
            <summary>Lucene.Net.Search.Function.FloatFieldSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.#ctor(Lucene.Net.Search.Function.FloatFieldSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 FloatFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.CachedFieldSourceHashCode">
            <summary>设置 FloatFieldSource.CachedFieldSourceHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.ConstructorString">
            <summary>设置 FloatFieldSource.FloatFieldSource(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.ConstructorStringFloatParser">
            <summary>设置 FloatFieldSource.FloatFieldSource(String field, FloatParser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.Description">
            <summary>设置 FloatFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 FloatFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.AllInstances.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 FloatFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.AllInstances.CachedFieldSourceHashCode">
            <summary>设置 FloatFieldSource.CachedFieldSourceHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.AllInstances.Description">
            <summary>设置 FloatFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimFloatFieldSource.AllInstances.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 FloatFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource">
            <summary>Lucene.Net.Search.Function.IntFieldSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.#ctor(Lucene.Net.Search.Function.IntFieldSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 IntFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.CachedFieldSourceHashCode">
            <summary>设置 IntFieldSource.CachedFieldSourceHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.ConstructorString">
            <summary>设置 IntFieldSource.IntFieldSource(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.ConstructorStringIntParser">
            <summary>设置 IntFieldSource.IntFieldSource(String field, IntParser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.Description">
            <summary>设置 IntFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 IntFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.AllInstances.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 IntFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.AllInstances.CachedFieldSourceHashCode">
            <summary>设置 IntFieldSource.CachedFieldSourceHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.AllInstances.Description">
            <summary>设置 IntFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimIntFieldSource.AllInstances.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 IntFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource">
            <summary>Lucene.Net.Search.Function.OrdFieldSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.#ctor(Lucene.Net.Search.Function.OrdFieldSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.ConstructorString">
            <summary>设置 OrdFieldSource.OrdFieldSource(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.Description">
            <summary>设置 OrdFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.EqualsObject">
            <summary>设置 OrdFieldSource.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.GetHashCode">
            <summary>设置 OrdFieldSource.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.GetValuesIndexReader">
            <summary>设置 OrdFieldSource.GetValues(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.StaticConstructor">
            <summary>设置 OrdFieldSource.OrdFieldSource() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.AllInstances.Description">
            <summary>设置 OrdFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.AllInstances.EqualsObject">
            <summary>设置 OrdFieldSource.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.AllInstances.GetHashCode01">
            <summary>设置 OrdFieldSource.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimOrdFieldSource.AllInstances.GetValuesIndexReader">
            <summary>设置 OrdFieldSource.GetValues(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource">
            <summary>Lucene.Net.Search.Function.ReverseOrdFieldSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.#ctor(Lucene.Net.Search.Function.ReverseOrdFieldSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.ConstructorString">
            <summary>设置 ReverseOrdFieldSource.ReverseOrdFieldSource(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.Description">
            <summary>设置 ReverseOrdFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.EqualsObject">
            <summary>设置 ReverseOrdFieldSource.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.GetHashCode">
            <summary>设置 ReverseOrdFieldSource.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.GetValuesIndexReader">
            <summary>设置 ReverseOrdFieldSource.GetValues(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.StaticConstructor">
            <summary>设置 ReverseOrdFieldSource.ReverseOrdFieldSource() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.AllInstances.Description">
            <summary>设置 ReverseOrdFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.AllInstances.EqualsObject">
            <summary>设置 ReverseOrdFieldSource.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.AllInstances.GetHashCode01">
            <summary>设置 ReverseOrdFieldSource.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimReverseOrdFieldSource.AllInstances.GetValuesIndexReader">
            <summary>设置 ReverseOrdFieldSource.GetValues(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource">
            <summary>Lucene.Net.Search.Function.ShortFieldSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.#ctor(Lucene.Net.Search.Function.ShortFieldSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 ShortFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.CachedFieldSourceHashCode">
            <summary>设置 ShortFieldSource.CachedFieldSourceHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.ConstructorString">
            <summary>设置 ShortFieldSource.ShortFieldSource(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.ConstructorStringShortParser">
            <summary>设置 ShortFieldSource.ShortFieldSource(String field, ShortParser parser) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.Description">
            <summary>设置 ShortFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 ShortFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.AllInstances.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 ShortFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.AllInstances.CachedFieldSourceHashCode">
            <summary>设置 ShortFieldSource.CachedFieldSourceHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.AllInstances.Description">
            <summary>设置 ShortFieldSource.Description() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimShortFieldSource.AllInstances.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 ShortFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimValueSource">
            <summary>Lucene.Net.Search.Function.ValueSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimValueSource.#ctor(Lucene.Net.Search.Function.ValueSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimValueSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimValueSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSource.Constructor">
            <summary>设置 ValueSource.ValueSource() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSource.ToString">
            <summary>设置 ValueSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimValueSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSource.AllInstances.ToString01">
            <summary>设置 ValueSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery">
            <summary>Lucene.Net.Search.Function.ValueSourceQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.#ctor(Lucene.Net.Search.Function.ValueSourceQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.Clone">
            <summary>设置 ValueSourceQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.ConstructorValueSource">
            <summary>设置 ValueSourceQuery.ValueSourceQuery(ValueSource valSrc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.CreateWeightSearcher">
            <summary>设置 ValueSourceQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.EqualsObject">
            <summary>设置 ValueSourceQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 ValueSourceQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.GetHashCode">
            <summary>设置 ValueSourceQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.RewriteIndexReader">
            <summary>设置 ValueSourceQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.ToStringString">
            <summary>设置 ValueSourceQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.valSrc_ForNUnitGet">
            <summary>设置 ValueSourceQuery.get_valSrc_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances.Clone">
            <summary>设置 ValueSourceQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 ValueSourceQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances.EqualsObject">
            <summary>设置 ValueSourceQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 ValueSourceQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances.GetHashCode01">
            <summary>设置 ValueSourceQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances.RewriteIndexReader">
            <summary>设置 ValueSourceQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances.ToStringString">
            <summary>设置 ValueSourceQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.ShimValueSourceQuery.AllInstances.valSrc_ForNUnitGet">
            <summary>设置 ValueSourceQuery.get_valSrc_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubByteFieldSource">
            <summary>Lucene.Net.Search.Function.ByteFieldSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.#ctor(System.String,Lucene.Net.Search.ByteParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.CachedFieldSourceEquals(Lucene.Net.Search.Function.FieldCacheSource)">
            <summary>设置 ByteFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 ByteFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.CachedFieldSourceHashCode">
            <summary>设置 ByteFieldSource.CachedFieldSourceHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.CachedFieldSourceHashCode01">
            <summary>设置 ByteFieldSource.CachedFieldSourceHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.Description">
            <summary>设置 ByteFieldSource.Description() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.Description01">
            <summary>设置 ByteFieldSource.Description() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.Equals(System.Object)">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.EqualsObject">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.GetCachedFieldValues(Lucene.Net.Search.FieldCache,System.String,Lucene.Net.Index.IndexReader)">
            <summary>设置 ByteFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 ByteFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.GetHashCode">
            <summary>设置 FieldCacheSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.GetHashCode01">
            <summary>设置 FieldCacheSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.GetValues(Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.GetValuesIndexReader">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.InitializeStub">
            <summary>初始化 type StubByteFieldSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.ToString">
            <summary>设置 ValueSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.ToString01">
            <summary>设置 ValueSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubByteFieldSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider">
            <summary>Lucene.Net.Search.Function.CustomScoreProvider 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.#ctor(Lucene.Net.Index.IndexReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CustomExplain(System.Int32,Lucene.Net.Search.Explanation,Lucene.Net.Search.Explanation)">
            <summary>设置 CustomScoreProvider.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation valSrcExpl) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CustomExplain(System.Int32,Lucene.Net.Search.Explanation,Lucene.Net.Search.Explanation[])">
            <summary>设置 CustomScoreProvider.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation[] valSrcExpls) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CustomExplainInt32ExplanationExplanation">
            <summary>设置 CustomScoreProvider.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation valSrcExpl) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CustomExplainInt32ExplanationExplanationArray">
            <summary>设置 CustomScoreProvider.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation[] valSrcExpls) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CustomScore(System.Int32,System.Single,System.Single[])">
            <summary>设置 CustomScoreProvider.CustomScore(Int32 doc, Single subQueryScore, Single[] valSrcScores) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CustomScore(System.Int32,System.Single,System.Single)">
            <summary>设置 CustomScoreProvider.CustomScore(Int32 doc, Single subQueryScore, Single valSrcScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CustomScoreInt32SingleSingle">
            <summary>设置 CustomScoreProvider.CustomScore(Int32 doc, Single subQueryScore, Single valSrcScore) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CustomScoreInt32SingleSingleArray">
            <summary>设置 CustomScoreProvider.CustomScore(Int32 doc, Single subQueryScore, Single[] valSrcScores) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.InitializeStub">
            <summary>初始化 type StubCustomScoreProvider 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubCustomScoreProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery">
            <summary>Lucene.Net.Search.Function.CustomScoreQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.#ctor(Lucene.Net.Search.Query)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.#ctor(Lucene.Net.Search.Query,Lucene.Net.Search.Function.ValueSourceQuery)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.#ctor(Lucene.Net.Search.Query,Lucene.Net.Search.Function.ValueSourceQuery[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.Clone">
            <summary>设置 CustomScoreQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.Clone01">
            <summary>设置 CustomScoreQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 CustomScoreQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CreateWeightSearcher">
            <summary>设置 CustomScoreQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CustomExplain(System.Int32,Lucene.Net.Search.Explanation,Lucene.Net.Search.Explanation)">
            <summary>设置 CustomScoreQuery.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation valSrcExpl) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CustomExplain(System.Int32,Lucene.Net.Search.Explanation,Lucene.Net.Search.Explanation[])">
            <summary>设置 CustomScoreQuery.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation[] valSrcExpls) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CustomExplainInt32ExplanationExplanation">
            <summary>设置 CustomScoreQuery.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation valSrcExpl) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CustomExplainInt32ExplanationExplanationArray">
            <summary>设置 CustomScoreQuery.CustomExplain(Int32 doc, Explanation subQueryExpl, Explanation[] valSrcExpls) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CustomScore(System.Int32,System.Single,System.Single[])">
            <summary>设置 CustomScoreQuery.CustomScore(Int32 doc, Single subQueryScore, Single[] valSrcScores) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CustomScore(System.Int32,System.Single,System.Single)">
            <summary>设置 CustomScoreQuery.CustomScore(Int32 doc, Single subQueryScore, Single valSrcScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CustomScoreInt32SingleSingle">
            <summary>设置 CustomScoreQuery.CustomScore(Int32 doc, Single subQueryScore, Single valSrcScore) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CustomScoreInt32SingleSingleArray">
            <summary>设置 CustomScoreQuery.CustomScore(Int32 doc, Single subQueryScore, Single[] valSrcScores) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.Equals(System.Object)">
            <summary>设置 CustomScoreQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.EqualsObject">
            <summary>设置 CustomScoreQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 CustomScoreQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 CustomScoreQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.GetCustomScoreProvider(Lucene.Net.Index.IndexReader)">
            <summary>设置 CustomScoreQuery.GetCustomScoreProvider(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.GetCustomScoreProviderIndexReader">
            <summary>设置 CustomScoreQuery.GetCustomScoreProvider(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.GetHashCode">
            <summary>设置 CustomScoreQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.GetHashCode01">
            <summary>设置 CustomScoreQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.InitializeStub">
            <summary>初始化 type StubCustomScoreQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.IsStrict">
            <summary>设置 CustomScoreQuery.IsStrict() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.IsStrict01">
            <summary>设置 CustomScoreQuery.IsStrict() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.Name">
            <summary>设置 CustomScoreQuery.Name() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.Name01">
            <summary>设置 CustomScoreQuery.Name() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 CustomScoreQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.RewriteIndexReader">
            <summary>设置 CustomScoreQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.SetStrict(System.Boolean)">
            <summary>设置 CustomScoreQuery.SetStrict(Boolean strict) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.SetStrictBoolean">
            <summary>设置 CustomScoreQuery.SetStrict(Boolean strict) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.ToString(System.String)">
            <summary>设置 CustomScoreQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.ToStringString">
            <summary>设置 CustomScoreQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubCustomScoreQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubDocValues">
            <summary>Lucene.Net.Search.Function.DocValues 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.DoubleVal(System.Int32)">
            <summary>设置 DocValues.DoubleVal(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.DoubleValInt32">
            <summary>设置 DocValues.DoubleVal(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.Explain(System.Int32)">
            <summary>设置 DocValues.Explain(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.ExplainInt32">
            <summary>设置 DocValues.Explain(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.FloatVal(System.Int32)">
            <summary>设置 DocValues.FloatVal(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.FloatValInt32">
            <summary>设置 DocValues.FloatVal(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.GetAverageValue">
            <summary>设置 DocValues.GetAverageValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.GetAverageValue01">
            <summary>设置 DocValues.GetAverageValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.GetInnerArray">
            <summary>设置 DocValues.GetInnerArray() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.GetInnerArray01">
            <summary>设置 DocValues.GetInnerArray() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.GetMaxValue">
            <summary>设置 DocValues.GetMaxValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.GetMaxValue01">
            <summary>设置 DocValues.GetMaxValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.GetMinValue">
            <summary>设置 DocValues.GetMinValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.GetMinValue01">
            <summary>设置 DocValues.GetMinValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.InitializeStub">
            <summary>初始化 type StubDocValues 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.IntVal(System.Int32)">
            <summary>设置 DocValues.IntVal(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.IntValInt32">
            <summary>设置 DocValues.IntVal(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.LongVal(System.Int32)">
            <summary>设置 DocValues.LongVal(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.LongValInt32">
            <summary>设置 DocValues.LongVal(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.StrVal(System.Int32)">
            <summary>设置 DocValues.StrVal(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.StrValInt32">
            <summary>设置 DocValues.StrVal(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubDocValues.ToString(System.Int32)">
            <summary>设置 DocValues.ToString(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubDocValues.ToStringInt32">
            <summary>设置 DocValues.ToString(Int32 doc) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubDocValues.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubDocValues.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubDocValues.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource">
            <summary>Lucene.Net.Search.Function.FieldCacheSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.CachedFieldSourceEquals(Lucene.Net.Search.Function.FieldCacheSource)">
            <summary>设置 FieldCacheSource.CachedFieldSourceEquals(FieldCacheSource other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 FieldCacheSource.CachedFieldSourceEquals(FieldCacheSource other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.CachedFieldSourceHashCode">
            <summary>设置 FieldCacheSource.CachedFieldSourceHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.CachedFieldSourceHashCode01">
            <summary>设置 FieldCacheSource.CachedFieldSourceHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.Description">
            <summary>设置 FieldCacheSource.Description() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.Description01">
            <summary>设置 FieldCacheSource.Description() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.Equals(System.Object)">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.EqualsObject">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.GetCachedFieldValues(Lucene.Net.Search.FieldCache,System.String,Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldCacheSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 FieldCacheSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.GetHashCode">
            <summary>设置 FieldCacheSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.GetHashCode01">
            <summary>设置 FieldCacheSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.GetValues(Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.GetValuesIndexReader">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.InitializeStub">
            <summary>初始化 type StubFieldCacheSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.ToString">
            <summary>设置 ValueSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.ToString01">
            <summary>设置 ValueSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFieldCacheSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery">
            <summary>Lucene.Net.Search.Function.FieldScoreQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.#ctor(System.String,Lucene.Net.Search.Function.FieldScoreQuery.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.Clone">
            <summary>设置 ValueSourceQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.Clone01">
            <summary>设置 ValueSourceQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 ValueSourceQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.CreateWeightSearcher">
            <summary>设置 ValueSourceQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.Equals(System.Object)">
            <summary>设置 ValueSourceQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.EqualsObject">
            <summary>设置 ValueSourceQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 ValueSourceQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 ValueSourceQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.GetHashCode">
            <summary>设置 ValueSourceQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.GetHashCode01">
            <summary>设置 ValueSourceQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.InitializeStub">
            <summary>初始化 type StubFieldScoreQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 ValueSourceQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.RewriteIndexReader">
            <summary>设置 ValueSourceQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.ToString(System.String)">
            <summary>设置 ValueSourceQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.ToStringString">
            <summary>设置 ValueSourceQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFieldScoreQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource">
            <summary>Lucene.Net.Search.Function.FloatFieldSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.#ctor(System.String,Lucene.Net.Search.FloatParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.CachedFieldSourceEquals(Lucene.Net.Search.Function.FieldCacheSource)">
            <summary>设置 FloatFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 FloatFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.CachedFieldSourceHashCode">
            <summary>设置 FloatFieldSource.CachedFieldSourceHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.CachedFieldSourceHashCode01">
            <summary>设置 FloatFieldSource.CachedFieldSourceHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.Description">
            <summary>设置 FloatFieldSource.Description() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.Description01">
            <summary>设置 FloatFieldSource.Description() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.Equals(System.Object)">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.EqualsObject">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.GetCachedFieldValues(Lucene.Net.Search.FieldCache,System.String,Lucene.Net.Index.IndexReader)">
            <summary>设置 FloatFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 FloatFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.GetHashCode">
            <summary>设置 FieldCacheSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.GetHashCode01">
            <summary>设置 FieldCacheSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.GetValues(Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.GetValuesIndexReader">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.InitializeStub">
            <summary>初始化 type StubFloatFieldSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.ToString">
            <summary>设置 ValueSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.ToString01">
            <summary>设置 ValueSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubFloatFieldSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubIntFieldSource">
            <summary>Lucene.Net.Search.Function.IntFieldSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.#ctor(System.String,Lucene.Net.Search.IntParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.CachedFieldSourceEquals(Lucene.Net.Search.Function.FieldCacheSource)">
            <summary>设置 IntFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 IntFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.CachedFieldSourceHashCode">
            <summary>设置 IntFieldSource.CachedFieldSourceHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.CachedFieldSourceHashCode01">
            <summary>设置 IntFieldSource.CachedFieldSourceHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.Description">
            <summary>设置 IntFieldSource.Description() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.Description01">
            <summary>设置 IntFieldSource.Description() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.Equals(System.Object)">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.EqualsObject">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.GetCachedFieldValues(Lucene.Net.Search.FieldCache,System.String,Lucene.Net.Index.IndexReader)">
            <summary>设置 IntFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 IntFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.GetHashCode">
            <summary>设置 FieldCacheSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.GetHashCode01">
            <summary>设置 FieldCacheSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.GetValues(Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.GetValuesIndexReader">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.InitializeStub">
            <summary>初始化 type StubIntFieldSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.ToString">
            <summary>设置 ValueSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.ToString01">
            <summary>设置 ValueSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubIntFieldSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource">
            <summary>Lucene.Net.Search.Function.OrdFieldSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.Description">
            <summary>设置 OrdFieldSource.Description() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.Description01">
            <summary>设置 OrdFieldSource.Description() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.Equals(System.Object)">
            <summary>设置 OrdFieldSource.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.EqualsObject">
            <summary>设置 OrdFieldSource.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.GetHashCode">
            <summary>设置 OrdFieldSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.GetHashCode01">
            <summary>设置 OrdFieldSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.GetValues(Lucene.Net.Index.IndexReader)">
            <summary>设置 OrdFieldSource.GetValues(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.GetValuesIndexReader">
            <summary>设置 OrdFieldSource.GetValues(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.InitializeStub">
            <summary>初始化 type StubOrdFieldSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.ToString">
            <summary>设置 ValueSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.ToString01">
            <summary>设置 ValueSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubOrdFieldSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource">
            <summary>Lucene.Net.Search.Function.ReverseOrdFieldSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.Description">
            <summary>设置 ReverseOrdFieldSource.Description() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.Description01">
            <summary>设置 ReverseOrdFieldSource.Description() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.Equals(System.Object)">
            <summary>设置 ReverseOrdFieldSource.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.EqualsObject">
            <summary>设置 ReverseOrdFieldSource.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.GetHashCode">
            <summary>设置 ReverseOrdFieldSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.GetHashCode01">
            <summary>设置 ReverseOrdFieldSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.GetValues(Lucene.Net.Index.IndexReader)">
            <summary>设置 ReverseOrdFieldSource.GetValues(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.GetValuesIndexReader">
            <summary>设置 ReverseOrdFieldSource.GetValues(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.InitializeStub">
            <summary>初始化 type StubReverseOrdFieldSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.ToString">
            <summary>设置 ValueSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.ToString01">
            <summary>设置 ValueSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubReverseOrdFieldSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubShortFieldSource">
            <summary>Lucene.Net.Search.Function.ShortFieldSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.#ctor(System.String,Lucene.Net.Search.ShortParser)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.CachedFieldSourceEquals(Lucene.Net.Search.Function.FieldCacheSource)">
            <summary>设置 ShortFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.CachedFieldSourceEqualsFieldCacheSource">
            <summary>设置 ShortFieldSource.CachedFieldSourceEquals(FieldCacheSource o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.CachedFieldSourceHashCode">
            <summary>设置 ShortFieldSource.CachedFieldSourceHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.CachedFieldSourceHashCode01">
            <summary>设置 ShortFieldSource.CachedFieldSourceHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.Description">
            <summary>设置 ShortFieldSource.Description() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.Description01">
            <summary>设置 ShortFieldSource.Description() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.Equals(System.Object)">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.EqualsObject">
            <summary>设置 FieldCacheSource.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.GetCachedFieldValues(Lucene.Net.Search.FieldCache,System.String,Lucene.Net.Index.IndexReader)">
            <summary>设置 ShortFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.GetCachedFieldValuesFieldCacheStringIndexReader">
            <summary>设置 ShortFieldSource.GetCachedFieldValues(FieldCache cache, String field, IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.GetHashCode">
            <summary>设置 FieldCacheSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.GetHashCode01">
            <summary>设置 FieldCacheSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.GetValues(Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.GetValuesIndexReader">
            <summary>设置 FieldCacheSource.GetValues(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.InitializeStub">
            <summary>初始化 type StubShortFieldSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.ToString">
            <summary>设置 ValueSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.ToString01">
            <summary>设置 ValueSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubShortFieldSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubValueSource">
            <summary>Lucene.Net.Search.Function.ValueSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSource.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSource.Description">
            <summary>设置 ValueSource.Description() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSource.Description01">
            <summary>设置 ValueSource.Description() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSource.Equals(System.Object)">
            <summary>设置 ValueSource.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSource.EqualsObject">
            <summary>设置 ValueSource.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSource.GetHashCode">
            <summary>设置 ValueSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSource.GetHashCode01">
            <summary>设置 ValueSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSource.GetValues(Lucene.Net.Index.IndexReader)">
            <summary>设置 ValueSource.GetValues(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSource.GetValuesIndexReader">
            <summary>设置 ValueSource.GetValues(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSource.InitializeStub">
            <summary>初始化 type StubValueSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSource.ToString">
            <summary>设置 ValueSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSource.ToString01">
            <summary>设置 ValueSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubValueSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubValueSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubValueSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery">
            <summary>Lucene.Net.Search.Function.ValueSourceQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.#ctor(Lucene.Net.Search.Function.ValueSource)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.Clone">
            <summary>设置 ValueSourceQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.Clone01">
            <summary>设置 ValueSourceQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 ValueSourceQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.CreateWeightSearcher">
            <summary>设置 ValueSourceQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.Equals(System.Object)">
            <summary>设置 ValueSourceQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.EqualsObject">
            <summary>设置 ValueSourceQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 ValueSourceQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 ValueSourceQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.GetHashCode">
            <summary>设置 ValueSourceQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.GetHashCode01">
            <summary>设置 ValueSourceQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.InitializeStub">
            <summary>初始化 type StubValueSourceQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 ValueSourceQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.RewriteIndexReader">
            <summary>设置 ValueSourceQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.ToString(System.String)">
            <summary>设置 ValueSourceQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.ToStringString">
            <summary>设置 ValueSourceQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Function.Fakes.StubValueSourceQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction">
            <summary>Lucene.Net.Search.Payloads.AveragePayloadFunction 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.#ctor(Lucene.Net.Search.Payloads.AveragePayloadFunction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.Constructor">
            <summary>设置 AveragePayloadFunction.AveragePayloadFunction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 AveragePayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.DocScoreInt32StringInt32Single">
            <summary>设置 AveragePayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.EqualsObject">
            <summary>设置 AveragePayloadFunction.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.GetHashCode">
            <summary>设置 AveragePayloadFunction.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.AllInstances.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 AveragePayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.AllInstances.DocScoreInt32StringInt32Single">
            <summary>设置 AveragePayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.AllInstances.EqualsObject">
            <summary>设置 AveragePayloadFunction.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimAveragePayloadFunction.AllInstances.GetHashCode01">
            <summary>设置 AveragePayloadFunction.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction">
            <summary>Lucene.Net.Search.Payloads.MaxPayloadFunction 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.#ctor(Lucene.Net.Search.Payloads.MaxPayloadFunction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.Constructor">
            <summary>设置 MaxPayloadFunction.MaxPayloadFunction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 MaxPayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.DocScoreInt32StringInt32Single">
            <summary>设置 MaxPayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.EqualsObject">
            <summary>设置 MaxPayloadFunction.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.GetHashCode">
            <summary>设置 MaxPayloadFunction.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.AllInstances.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 MaxPayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.AllInstances.DocScoreInt32StringInt32Single">
            <summary>设置 MaxPayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.AllInstances.EqualsObject">
            <summary>设置 MaxPayloadFunction.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMaxPayloadFunction.AllInstances.GetHashCode01">
            <summary>设置 MaxPayloadFunction.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction">
            <summary>Lucene.Net.Search.Payloads.MinPayloadFunction 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.#ctor(Lucene.Net.Search.Payloads.MinPayloadFunction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.Constructor">
            <summary>设置 MinPayloadFunction.MinPayloadFunction() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 MinPayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.DocScoreInt32StringInt32Single">
            <summary>设置 MinPayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.EqualsObject">
            <summary>设置 MinPayloadFunction.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.GetHashCode">
            <summary>设置 MinPayloadFunction.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.AllInstances.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 MinPayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.AllInstances.DocScoreInt32StringInt32Single">
            <summary>设置 MinPayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.AllInstances.EqualsObject">
            <summary>设置 MinPayloadFunction.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimMinPayloadFunction.AllInstances.GetHashCode01">
            <summary>设置 MinPayloadFunction.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadFunction">
            <summary>Lucene.Net.Search.Payloads.PayloadFunction 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadFunction.#ctor(Lucene.Net.Search.Payloads.PayloadFunction)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadFunction.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadFunction.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadFunction.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadFunction.Constructor">
            <summary>设置 PayloadFunction.PayloadFunction() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadFunction.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery">
            <summary>Lucene.Net.Search.Payloads.PayloadNearQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.#ctor(Lucene.Net.Search.Payloads.PayloadNearQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.Clone">
            <summary>设置 PayloadNearQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ConstructorSpanQueryArrayInt32Boolean">
            <summary>设置 PayloadNearQuery.PayloadNearQuery(SpanQuery[] clauses, Int32 slop, Boolean inOrder) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ConstructorSpanQueryArrayInt32BooleanPayloadFunction">
            <summary>设置 PayloadNearQuery.PayloadNearQuery(SpanQuery[] clauses, Int32 slop, Boolean inOrder, PayloadFunction function) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.CreateWeightSearcher">
            <summary>设置 PayloadNearQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.EqualsObject">
            <summary>设置 PayloadNearQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.GetHashCode">
            <summary>设置 PayloadNearQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ToStringString">
            <summary>设置 PayloadNearQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.AllInstances.Clone">
            <summary>设置 PayloadNearQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 PayloadNearQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.AllInstances.EqualsObject">
            <summary>设置 PayloadNearQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.AllInstances.GetHashCode01">
            <summary>设置 PayloadNearQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.AllInstances.ToStringString">
            <summary>设置 PayloadNearQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer">
            <summary>Lucene.Net.Search.Payloads.PayloadNearQuery+PayloadNearSpanScorer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.#ctor(Lucene.Net.Search.Payloads.PayloadNearQuery.PayloadNearSpanScorer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.ConstructorPayloadNearQuerySpansWeightSimilarityByteArray">
            <summary>设置 PayloadNearSpanScorer.PayloadNearSpanScorer(PayloadNearQuery enclosingInstance, Spans spans, Weight weight, Similarity similarity, Byte[] norms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.Enclosing_InstanceGet">
            <summary>设置 PayloadNearSpanScorer.get_Enclosing_Instance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.ExplainInt32">
            <summary>设置 PayloadNearSpanScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.GetPayloadsSpansArray">
            <summary>设置 PayloadNearSpanScorer.GetPayloads(Spans[] subSpans) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.InitBlockPayloadNearQuery">
            <summary>设置 PayloadNearSpanScorer.InitBlock(PayloadNearQuery enclosingInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.ProcessPayloadsICollectionOfByteArrayInt32Int32">
            <summary>设置 PayloadNearSpanScorer.ProcessPayloads(ICollection`1&lt;Byte[]&gt; payLoads, Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.Score">
            <summary>设置 PayloadNearSpanScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.SetFreqCurrentDoc">
            <summary>设置 PayloadNearSpanScorer.SetFreqCurrentDoc() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.AllInstances.Enclosing_InstanceGet">
            <summary>设置 PayloadNearSpanScorer.get_Enclosing_Instance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.AllInstances.ExplainInt32">
            <summary>设置 PayloadNearSpanScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.AllInstances.GetPayloadsSpansArray">
            <summary>设置 PayloadNearSpanScorer.GetPayloads(Spans[] subSpans) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.AllInstances.InitBlockPayloadNearQuery">
            <summary>设置 PayloadNearSpanScorer.InitBlock(PayloadNearQuery enclosingInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.AllInstances.ProcessPayloadsICollectionOfByteArrayInt32Int32">
            <summary>设置 PayloadNearSpanScorer.ProcessPayloads(ICollection`1&lt;Byte[]&gt; payLoads, Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.AllInstances.Score">
            <summary>设置 PayloadNearSpanScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanScorer.AllInstances.SetFreqCurrentDoc">
            <summary>设置 PayloadNearSpanScorer.SetFreqCurrentDoc() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight">
            <summary>Lucene.Net.Search.Payloads.PayloadNearQuery+PayloadNearSpanWeight 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.#ctor(Lucene.Net.Search.Payloads.PayloadNearQuery.PayloadNearSpanWeight)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.ConstructorPayloadNearQuerySpanQuerySearcher">
            <summary>设置 PayloadNearSpanWeight.PayloadNearSpanWeight(PayloadNearQuery enclosingInstance, SpanQuery query, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.Enclosing_InstanceGet">
            <summary>设置 PayloadNearSpanWeight.get_Enclosing_Instance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.InitBlockPayloadNearQuery">
            <summary>设置 PayloadNearSpanWeight.InitBlock(PayloadNearQuery enclosingInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.ScorerIndexReader">
            <summary>设置 PayloadNearSpanWeight.Scorer(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.ScorerIndexReaderBooleanBoolean">
            <summary>设置 PayloadNearSpanWeight.Scorer(IndexReader reader, Boolean scoreDocsInOrder, Boolean topScorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.AllInstances.Enclosing_InstanceGet">
            <summary>设置 PayloadNearSpanWeight.get_Enclosing_Instance() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.AllInstances.InitBlockPayloadNearQuery">
            <summary>设置 PayloadNearSpanWeight.InitBlock(PayloadNearQuery enclosingInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.AllInstances.ScorerIndexReader">
            <summary>设置 PayloadNearSpanWeight.Scorer(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadNearQuery.ShimPayloadNearSpanWeight.AllInstances.ScorerIndexReaderBooleanBoolean">
            <summary>设置 PayloadNearSpanWeight.Scorer(IndexReader reader, Boolean scoreDocsInOrder, Boolean topScorer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil">
            <summary>Lucene.Net.Search.Payloads.PayloadSpanUtil 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.#ctor(Lucene.Net.Search.Payloads.PayloadSpanUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.ConstructorIndexReader">
            <summary>设置 PayloadSpanUtil.PayloadSpanUtil(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.GetPayloadsForQueryQuery">
            <summary>设置 PayloadSpanUtil.GetPayloadsForQuery(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.GetPayloadsICollectionOfByteArraySpanQuery">
            <summary>设置 PayloadSpanUtil.GetPayloads(ICollection`1&lt;Byte[]&gt; payloads, SpanQuery query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.QueryToSpanQueryQueryICollectionOfByteArray">
            <summary>设置 PayloadSpanUtil.QueryToSpanQuery(Query query, ICollection`1&lt;Byte[]&gt; payloads) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.AllInstances.GetPayloadsForQueryQuery">
            <summary>设置 PayloadSpanUtil.GetPayloadsForQuery(Query query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.AllInstances.GetPayloadsICollectionOfByteArraySpanQuery">
            <summary>设置 PayloadSpanUtil.GetPayloads(ICollection`1&lt;Byte[]&gt; payloads, SpanQuery query) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadSpanUtil.AllInstances.QueryToSpanQueryQueryICollectionOfByteArray">
            <summary>设置 PayloadSpanUtil.QueryToSpanQuery(Query query, ICollection`1&lt;Byte[]&gt; payloads) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery">
            <summary>Lucene.Net.Search.Payloads.PayloadTermQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.#ctor(Lucene.Net.Search.Payloads.PayloadTermQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.ConstructorTermPayloadFunction">
            <summary>设置 PayloadTermQuery.PayloadTermQuery(Term term, PayloadFunction function) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.ConstructorTermPayloadFunctionBoolean">
            <summary>设置 PayloadTermQuery.PayloadTermQuery(Term term, PayloadFunction function, Boolean includeSpanScore) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.CreateWeightSearcher">
            <summary>设置 PayloadTermQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.EqualsObject">
            <summary>设置 PayloadTermQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.GetHashCode">
            <summary>设置 PayloadTermQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 PayloadTermQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.AllInstances.EqualsObject">
            <summary>设置 PayloadTermQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.ShimPayloadTermQuery.AllInstances.GetHashCode01">
            <summary>设置 PayloadTermQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction">
            <summary>Lucene.Net.Search.Payloads.AveragePayloadFunction 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.CurrentScore(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>设置 AveragePayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 AveragePayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.DocScore(System.Int32,System.String,System.Int32,System.Single)">
            <summary>设置 AveragePayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.DocScoreInt32StringInt32Single">
            <summary>设置 AveragePayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.Equals(System.Object)">
            <summary>设置 AveragePayloadFunction.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.EqualsObject">
            <summary>设置 AveragePayloadFunction.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.GetHashCode">
            <summary>设置 AveragePayloadFunction.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.GetHashCode01">
            <summary>设置 AveragePayloadFunction.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.InitializeStub">
            <summary>初始化 type StubAveragePayloadFunction 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubAveragePayloadFunction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction">
            <summary>Lucene.Net.Search.Payloads.MaxPayloadFunction 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.CurrentScore(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>设置 MaxPayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 MaxPayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.DocScore(System.Int32,System.String,System.Int32,System.Single)">
            <summary>设置 MaxPayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.DocScoreInt32StringInt32Single">
            <summary>设置 MaxPayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.Equals(System.Object)">
            <summary>设置 MaxPayloadFunction.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.EqualsObject">
            <summary>设置 MaxPayloadFunction.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.GetHashCode">
            <summary>设置 MaxPayloadFunction.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.GetHashCode01">
            <summary>设置 MaxPayloadFunction.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.InitializeStub">
            <summary>初始化 type StubMaxPayloadFunction 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubMaxPayloadFunction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction">
            <summary>Lucene.Net.Search.Payloads.MinPayloadFunction 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.CurrentScore(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>设置 MinPayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 MinPayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.DocScore(System.Int32,System.String,System.Int32,System.Single)">
            <summary>设置 MinPayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.DocScoreInt32StringInt32Single">
            <summary>设置 MinPayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.Equals(System.Object)">
            <summary>设置 MinPayloadFunction.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.EqualsObject">
            <summary>设置 MinPayloadFunction.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.GetHashCode">
            <summary>设置 MinPayloadFunction.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.GetHashCode01">
            <summary>设置 MinPayloadFunction.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.InitializeStub">
            <summary>初始化 type StubMinPayloadFunction 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubMinPayloadFunction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction">
            <summary>Lucene.Net.Search.Payloads.PayloadFunction 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.CurrentScore(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>设置 PayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.CurrentScoreInt32StringInt32Int32Int32SingleSingle">
            <summary>设置 PayloadFunction.CurrentScore(Int32 docId, String field, Int32 start, Int32 end, Int32 numPayloadsSeen, Single currentScore, Single currentPayloadScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.DocScore(System.Int32,System.String,System.Int32,System.Single)">
            <summary>设置 PayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.DocScoreInt32StringInt32Single">
            <summary>设置 PayloadFunction.DocScore(Int32 docId, String field, Int32 numPayloadsSeen, Single payloadScore) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.Equals(System.Object)">
            <summary>设置 PayloadFunction.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.EqualsObject">
            <summary>设置 PayloadFunction.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.GetHashCode">
            <summary>设置 PayloadFunction.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.GetHashCode01">
            <summary>设置 PayloadFunction.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.InitializeStub">
            <summary>初始化 type StubPayloadFunction 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadFunction.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery">
            <summary>Lucene.Net.Search.Payloads.PayloadNearQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery[],System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery[],System.Int32,System.Boolean,Lucene.Net.Search.Payloads.PayloadFunction)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.Clone">
            <summary>设置 PayloadNearQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.Clone01">
            <summary>设置 PayloadNearQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 PayloadNearQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.CreateWeightSearcher">
            <summary>设置 PayloadNearQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.Equals(System.Object)">
            <summary>设置 PayloadNearQuery.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.EqualsObject">
            <summary>设置 PayloadNearQuery.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 SpanNearQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanNearQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetClauses">
            <summary>设置 SpanNearQuery.GetClauses() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetClauses01">
            <summary>设置 SpanNearQuery.GetClauses() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetField">
            <summary>设置 SpanNearQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetField01">
            <summary>设置 SpanNearQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetHashCode">
            <summary>设置 PayloadNearQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetHashCode01">
            <summary>设置 PayloadNearQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetSlop">
            <summary>设置 SpanNearQuery.GetSlop() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetSlop01">
            <summary>设置 SpanNearQuery.GetSlop() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanNearQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetSpansIndexReader">
            <summary>设置 SpanNearQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetTerms">
            <summary>设置 SpanNearQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.GetTerms01">
            <summary>设置 SpanNearQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.InitializeStub">
            <summary>初始化 type StubPayloadNearQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.IsInOrder">
            <summary>设置 SpanNearQuery.IsInOrder() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.IsInOrder01">
            <summary>设置 SpanNearQuery.IsInOrder() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanNearQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.RewriteIndexReader">
            <summary>设置 SpanNearQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.ToString(System.String)">
            <summary>设置 PayloadNearQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.ToStringString">
            <summary>设置 PayloadNearQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadNearQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.StubPayloadSpanUtil">
            <summary>Lucene.Net.Search.Payloads.PayloadSpanUtil 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadSpanUtil.#ctor(Lucene.Net.Index.IndexReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadSpanUtil.GetPayloadsForQuery(Lucene.Net.Search.Query)">
            <summary>设置 PayloadSpanUtil.GetPayloadsForQuery(Query query) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadSpanUtil.GetPayloadsForQueryQuery">
            <summary>设置 PayloadSpanUtil.GetPayloadsForQuery(Query query) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadSpanUtil.InitializeStub">
            <summary>初始化 type StubPayloadSpanUtil 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadSpanUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadSpanUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadSpanUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery">
            <summary>Lucene.Net.Search.Payloads.PayloadTermQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.#ctor(Lucene.Net.Index.Term,Lucene.Net.Search.Payloads.PayloadFunction)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.#ctor(Lucene.Net.Index.Term,Lucene.Net.Search.Payloads.PayloadFunction,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 PayloadTermQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.CreateWeightSearcher">
            <summary>设置 PayloadTermQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.Equals(System.Object)">
            <summary>设置 PayloadTermQuery.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.EqualsObject">
            <summary>设置 PayloadTermQuery.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 SpanTermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanTermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetField">
            <summary>设置 SpanTermQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetField01">
            <summary>设置 SpanTermQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetHashCode">
            <summary>设置 PayloadTermQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetHashCode01">
            <summary>设置 PayloadTermQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanTermQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetSpansIndexReader">
            <summary>设置 SpanTermQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetTerm">
            <summary>设置 SpanTermQuery.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetTerm01">
            <summary>设置 SpanTermQuery.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetTerms">
            <summary>设置 SpanTermQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.GetTerms01">
            <summary>设置 SpanTermQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.InitializeStub">
            <summary>初始化 type StubPayloadTermQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.ToString(System.String)">
            <summary>设置 SpanTermQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.ToStringString">
            <summary>设置 SpanTermQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Payloads.Fakes.StubPayloadTermQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery">
            <summary>Lucene.Net.Search.Spans.FieldMaskingSpanQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.#ctor(Lucene.Net.Search.Spans.FieldMaskingSpanQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.ConstructorSpanQueryString">
            <summary>设置 FieldMaskingSpanQuery.FieldMaskingSpanQuery(SpanQuery maskedQuery, String maskedField) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.CreateWeightSearcher">
            <summary>设置 FieldMaskingSpanQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.EqualsObject">
            <summary>设置 FieldMaskingSpanQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 FieldMaskingSpanQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.GetField">
            <summary>设置 FieldMaskingSpanQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.GetHashCode">
            <summary>设置 FieldMaskingSpanQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.GetMaskedQuery">
            <summary>设置 FieldMaskingSpanQuery.GetMaskedQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.GetSimilaritySearcher">
            <summary>设置 FieldMaskingSpanQuery.GetSimilarity(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.GetSpansIndexReader">
            <summary>设置 FieldMaskingSpanQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.GetTerms">
            <summary>设置 FieldMaskingSpanQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.RewriteIndexReader">
            <summary>设置 FieldMaskingSpanQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.ToStringString">
            <summary>设置 FieldMaskingSpanQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 FieldMaskingSpanQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.EqualsObject">
            <summary>设置 FieldMaskingSpanQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 FieldMaskingSpanQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.GetField">
            <summary>设置 FieldMaskingSpanQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.GetHashCode01">
            <summary>设置 FieldMaskingSpanQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.GetMaskedQuery">
            <summary>设置 FieldMaskingSpanQuery.GetMaskedQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.GetSimilaritySearcher">
            <summary>设置 FieldMaskingSpanQuery.GetSimilarity(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.GetSpansIndexReader">
            <summary>设置 FieldMaskingSpanQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.GetTerms">
            <summary>设置 FieldMaskingSpanQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.RewriteIndexReader">
            <summary>设置 FieldMaskingSpanQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimFieldMaskingSpanQuery.AllInstances.ToStringString">
            <summary>设置 FieldMaskingSpanQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered">
            <summary>Lucene.Net.Search.Spans.NearSpansOrdered 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.#ctor(Lucene.Net.Search.Spans.NearSpansOrdered)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AdvanceAfterOrdered">
            <summary>设置 NearSpansOrdered.AdvanceAfterOrdered() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.ConstructorSpanNearQueryIndexReader">
            <summary>设置 NearSpansOrdered.NearSpansOrdered(SpanNearQuery spanNearQuery, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.ConstructorSpanNearQueryIndexReaderBoolean">
            <summary>设置 NearSpansOrdered.NearSpansOrdered(SpanNearQuery spanNearQuery, IndexReader reader, Boolean collectPayloads) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.Doc">
            <summary>设置 NearSpansOrdered.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.DocSpansOrderedInt32Int32Int32Int32">
            <summary>设置 NearSpansOrdered.DocSpansOrdered(Int32 start1, Int32 end1, Int32 start2, Int32 end2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.DocSpansOrderedSpansSpans">
            <summary>设置 NearSpansOrdered.DocSpansOrdered(Spans spans1, Spans spans2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.End">
            <summary>设置 NearSpansOrdered.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.GetPayload">
            <summary>设置 NearSpansOrdered.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.GetSubSpans">
            <summary>设置 NearSpansOrdered.GetSubSpans() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.IsPayloadAvailable">
            <summary>设置 NearSpansOrdered.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.Next">
            <summary>设置 NearSpansOrdered.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.ShrinkToAfterShortestMatch">
            <summary>设置 NearSpansOrdered.ShrinkToAfterShortestMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.SkipToInt32">
            <summary>设置 NearSpansOrdered.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.Start">
            <summary>设置 NearSpansOrdered.Start() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.StretchToOrder">
            <summary>设置 NearSpansOrdered.StretchToOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.ToSameDoc">
            <summary>设置 NearSpansOrdered.ToSameDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.ToString">
            <summary>设置 NearSpansOrdered.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered._ctorb__0SpansSpans">
            <summary>设置 NearSpansOrdered.&lt;.ctor&gt;b__0(Spans s1, Spans s2) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.AdvanceAfterOrdered">
            <summary>设置 NearSpansOrdered.AdvanceAfterOrdered() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.Doc">
            <summary>设置 NearSpansOrdered.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.End">
            <summary>设置 NearSpansOrdered.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.GetPayload">
            <summary>设置 NearSpansOrdered.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.GetSubSpans">
            <summary>设置 NearSpansOrdered.GetSubSpans() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.IsPayloadAvailable">
            <summary>设置 NearSpansOrdered.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.Next">
            <summary>设置 NearSpansOrdered.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.ShrinkToAfterShortestMatch">
            <summary>设置 NearSpansOrdered.ShrinkToAfterShortestMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.SkipToInt32">
            <summary>设置 NearSpansOrdered.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.Start">
            <summary>设置 NearSpansOrdered.Start() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.StretchToOrder">
            <summary>设置 NearSpansOrdered.StretchToOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.ToSameDoc">
            <summary>设置 NearSpansOrdered.ToSameDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansOrdered.AllInstances.ToString01">
            <summary>设置 NearSpansOrdered.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered">
            <summary>Lucene.Net.Search.Spans.NearSpansUnordered 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.#ctor(Lucene.Net.Search.Spans.NearSpansUnordered)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AtMatch">
            <summary>设置 NearSpansUnordered.AtMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.ConstructorSpanNearQueryIndexReader">
            <summary>设置 NearSpansUnordered.NearSpansUnordered(SpanNearQuery query, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.Doc">
            <summary>设置 NearSpansUnordered.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.End">
            <summary>设置 NearSpansUnordered.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.FirstToLast">
            <summary>设置 NearSpansUnordered.FirstToLast() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.GetPayload">
            <summary>设置 NearSpansUnordered.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.GetSubSpans">
            <summary>设置 NearSpansUnordered.GetSubSpans() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.InitListBoolean">
            <summary>设置 NearSpansUnordered.InitList(Boolean next) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.IsPayloadAvailable">
            <summary>设置 NearSpansUnordered.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.ListToQueue">
            <summary>设置 NearSpansUnordered.ListToQueue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.Next">
            <summary>设置 NearSpansUnordered.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.QueueToList">
            <summary>设置 NearSpansUnordered.QueueToList() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.SkipToInt32">
            <summary>设置 NearSpansUnordered.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.Start">
            <summary>设置 NearSpansUnordered.Start() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.ToString">
            <summary>设置 NearSpansUnordered.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.AtMatch">
            <summary>设置 NearSpansUnordered.AtMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.Doc">
            <summary>设置 NearSpansUnordered.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.End">
            <summary>设置 NearSpansUnordered.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.FirstToLast">
            <summary>设置 NearSpansUnordered.FirstToLast() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.GetPayload">
            <summary>设置 NearSpansUnordered.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.GetSubSpans">
            <summary>设置 NearSpansUnordered.GetSubSpans() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.InitListBoolean">
            <summary>设置 NearSpansUnordered.InitList(Boolean next) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.IsPayloadAvailable">
            <summary>设置 NearSpansUnordered.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.ListToQueue">
            <summary>设置 NearSpansUnordered.ListToQueue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.Next">
            <summary>设置 NearSpansUnordered.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.QueueToList">
            <summary>设置 NearSpansUnordered.QueueToList() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.SkipToInt32">
            <summary>设置 NearSpansUnordered.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.Start">
            <summary>设置 NearSpansUnordered.Start() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimNearSpansUnordered.AllInstances.ToString01">
            <summary>设置 NearSpansUnordered.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery">
            <summary>Lucene.Net.Search.Spans.SpanFirstQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.#ctor(Lucene.Net.Search.Spans.SpanFirstQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.Clone">
            <summary>设置 SpanFirstQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.ConstructorSpanQueryInt32">
            <summary>设置 SpanFirstQuery.SpanFirstQuery(SpanQuery match, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.EqualsObject">
            <summary>设置 SpanFirstQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanFirstQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.GetEnd">
            <summary>设置 SpanFirstQuery.GetEnd() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.GetField">
            <summary>设置 SpanFirstQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.GetHashCode">
            <summary>设置 SpanFirstQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.GetMatch">
            <summary>设置 SpanFirstQuery.GetMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.GetSpansIndexReader">
            <summary>设置 SpanFirstQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.GetTerms">
            <summary>设置 SpanFirstQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.RewriteIndexReader">
            <summary>设置 SpanFirstQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.ToStringString">
            <summary>设置 SpanFirstQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.Clone">
            <summary>设置 SpanFirstQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.EqualsObject">
            <summary>设置 SpanFirstQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanFirstQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.GetEnd">
            <summary>设置 SpanFirstQuery.GetEnd() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.GetField">
            <summary>设置 SpanFirstQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.GetHashCode01">
            <summary>设置 SpanFirstQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.GetMatch">
            <summary>设置 SpanFirstQuery.GetMatch() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.GetSpansIndexReader">
            <summary>设置 SpanFirstQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.GetTerms">
            <summary>设置 SpanFirstQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.RewriteIndexReader">
            <summary>设置 SpanFirstQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanFirstQuery.AllInstances.ToStringString">
            <summary>设置 SpanFirstQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery">
            <summary>Lucene.Net.Search.Spans.SpanNearQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.#ctor(Lucene.Net.Search.Spans.SpanNearQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.Clone">
            <summary>设置 SpanNearQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.ConstructorSpanQueryArrayInt32Boolean">
            <summary>设置 SpanNearQuery.SpanNearQuery(SpanQuery[] clauses, Int32 slop, Boolean inOrder) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.ConstructorSpanQueryArrayInt32BooleanBoolean">
            <summary>设置 SpanNearQuery.SpanNearQuery(SpanQuery[] clauses, Int32 slop, Boolean inOrder, Boolean collectPayloads) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.EqualsObject">
            <summary>设置 SpanNearQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanNearQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.GetClauses">
            <summary>设置 SpanNearQuery.GetClauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.GetField">
            <summary>设置 SpanNearQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.GetHashCode">
            <summary>设置 SpanNearQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.GetSlop">
            <summary>设置 SpanNearQuery.GetSlop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.GetSpansIndexReader">
            <summary>设置 SpanNearQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.GetTerms">
            <summary>设置 SpanNearQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.IsInOrder">
            <summary>设置 SpanNearQuery.IsInOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.RewriteIndexReader">
            <summary>设置 SpanNearQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.ToStringString">
            <summary>设置 SpanNearQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.Clone">
            <summary>设置 SpanNearQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.EqualsObject">
            <summary>设置 SpanNearQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanNearQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.GetClauses">
            <summary>设置 SpanNearQuery.GetClauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.GetField">
            <summary>设置 SpanNearQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.GetHashCode01">
            <summary>设置 SpanNearQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.GetSlop">
            <summary>设置 SpanNearQuery.GetSlop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.GetSpansIndexReader">
            <summary>设置 SpanNearQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.GetTerms">
            <summary>设置 SpanNearQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.IsInOrder">
            <summary>设置 SpanNearQuery.IsInOrder() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.RewriteIndexReader">
            <summary>设置 SpanNearQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNearQuery.AllInstances.ToStringString">
            <summary>设置 SpanNearQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery">
            <summary>Lucene.Net.Search.Spans.SpanNotQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.#ctor(Lucene.Net.Search.Spans.SpanNotQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.Clone">
            <summary>设置 SpanNotQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.ConstructorSpanQuerySpanQuery">
            <summary>设置 SpanNotQuery.SpanNotQuery(SpanQuery include, SpanQuery exclude) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.EqualsObject">
            <summary>设置 SpanNotQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanNotQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.GetExclude">
            <summary>设置 SpanNotQuery.GetExclude() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.GetField">
            <summary>设置 SpanNotQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.GetHashCode">
            <summary>设置 SpanNotQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.GetInclude">
            <summary>设置 SpanNotQuery.GetInclude() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.GetSpansIndexReader">
            <summary>设置 SpanNotQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.GetTerms">
            <summary>设置 SpanNotQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.RewriteIndexReader">
            <summary>设置 SpanNotQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.ToStringString">
            <summary>设置 SpanNotQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.Clone">
            <summary>设置 SpanNotQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.EqualsObject">
            <summary>设置 SpanNotQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanNotQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.GetExclude">
            <summary>设置 SpanNotQuery.GetExclude() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.GetField">
            <summary>设置 SpanNotQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.GetHashCode01">
            <summary>设置 SpanNotQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.GetInclude">
            <summary>设置 SpanNotQuery.GetInclude() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.GetSpansIndexReader">
            <summary>设置 SpanNotQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.GetTerms">
            <summary>设置 SpanNotQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.RewriteIndexReader">
            <summary>设置 SpanNotQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanNotQuery.AllInstances.ToStringString">
            <summary>设置 SpanNotQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery">
            <summary>Lucene.Net.Search.Spans.SpanOrQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.#ctor(Lucene.Net.Search.Spans.SpanOrQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.Clone">
            <summary>设置 SpanOrQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.ConstructorSpanQueryArray">
            <summary>设置 SpanOrQuery.SpanOrQuery(SpanQuery[] clauses) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.EqualsObject">
            <summary>设置 SpanOrQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanOrQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.GetClauses">
            <summary>设置 SpanOrQuery.GetClauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.GetField">
            <summary>设置 SpanOrQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.GetHashCode">
            <summary>设置 SpanOrQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.GetSpansIndexReader">
            <summary>设置 SpanOrQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.GetTerms">
            <summary>设置 SpanOrQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.RewriteIndexReader">
            <summary>设置 SpanOrQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.ToStringString">
            <summary>设置 SpanOrQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.Clone">
            <summary>设置 SpanOrQuery.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.EqualsObject">
            <summary>设置 SpanOrQuery.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanOrQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.GetClauses">
            <summary>设置 SpanOrQuery.GetClauses() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.GetField">
            <summary>设置 SpanOrQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.GetHashCode01">
            <summary>设置 SpanOrQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.GetSpansIndexReader">
            <summary>设置 SpanOrQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.GetTerms">
            <summary>设置 SpanOrQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.RewriteIndexReader">
            <summary>设置 SpanOrQuery.Rewrite(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanOrQuery.AllInstances.ToStringString">
            <summary>设置 SpanOrQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery">
            <summary>Lucene.Net.Search.Spans.SpanQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.Constructor">
            <summary>设置 SpanQuery.SpanQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.CreateWeightSearcher">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanQuery.AllInstances.CreateWeightSearcher">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer">
            <summary>Lucene.Net.Search.Spans.SpanScorer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.#ctor(Lucene.Net.Search.Spans.SpanScorer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AdvanceInt32">
            <summary>设置 SpanScorer.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.ConstructorSpansWeightSimilarityByteArray">
            <summary>设置 SpanScorer.SpanScorer(Spans spans, Weight weight, Similarity similarity, Byte[] norms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.Doc">
            <summary>设置 SpanScorer.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.DocID">
            <summary>设置 SpanScorer.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.ExplainInt32">
            <summary>设置 SpanScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.Next">
            <summary>设置 SpanScorer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.NextDoc">
            <summary>设置 SpanScorer.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.Score">
            <summary>设置 SpanScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.SetFreqCurrentDoc">
            <summary>设置 SpanScorer.SetFreqCurrentDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.SkipToInt32">
            <summary>设置 SpanScorer.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.AdvanceInt32">
            <summary>设置 SpanScorer.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.Doc">
            <summary>设置 SpanScorer.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.DocID">
            <summary>设置 SpanScorer.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.ExplainInt32">
            <summary>设置 SpanScorer.Explain(Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.Next">
            <summary>设置 SpanScorer.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.NextDoc">
            <summary>设置 SpanScorer.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.Score">
            <summary>设置 SpanScorer.Score() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.SetFreqCurrentDoc">
            <summary>设置 SpanScorer.SetFreqCurrentDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanScorer.AllInstances.SkipToInt32">
            <summary>设置 SpanScorer.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery">
            <summary>Lucene.Net.Search.Spans.SpanTermQuery 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.#ctor(Lucene.Net.Search.Spans.SpanTermQuery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.ConstructorTerm">
            <summary>设置 SpanTermQuery.SpanTermQuery(Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.EqualsObject">
            <summary>设置 SpanTermQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanTermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.GetField">
            <summary>设置 SpanTermQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.GetHashCode">
            <summary>设置 SpanTermQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.GetSpansIndexReader">
            <summary>设置 SpanTermQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.GetTerm">
            <summary>设置 SpanTermQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.GetTerms">
            <summary>设置 SpanTermQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.ToStringString">
            <summary>设置 SpanTermQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances.EqualsObject">
            <summary>设置 SpanTermQuery.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanTermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances.GetField">
            <summary>设置 SpanTermQuery.GetField() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances.GetHashCode01">
            <summary>设置 SpanTermQuery.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances.GetSpansIndexReader">
            <summary>设置 SpanTermQuery.GetSpans(IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances.GetTerm">
            <summary>设置 SpanTermQuery.GetTerm() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances.GetTerms">
            <summary>设置 SpanTermQuery.GetTerms() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanTermQuery.AllInstances.ToStringString">
            <summary>设置 SpanTermQuery.ToString(String field) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight">
            <summary>Lucene.Net.Search.Spans.SpanWeight 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.#ctor(Lucene.Net.Search.Spans.SpanWeight)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.ConstructorSpanQuerySearcher">
            <summary>设置 SpanWeight.SpanWeight(SpanQuery query, Searcher searcher) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.ExplainIndexReaderInt32">
            <summary>设置 SpanWeight.Explain(IndexReader reader, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.GetQuery">
            <summary>设置 SpanWeight.GetQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.GetValue">
            <summary>设置 SpanWeight.GetValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.NormalizeSingle">
            <summary>设置 SpanWeight.Normalize(Single queryNorm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.ScorerIndexReaderBooleanBoolean">
            <summary>设置 SpanWeight.Scorer(IndexReader reader, Boolean scoreDocsInOrder, Boolean topScorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.SumOfSquaredWeights">
            <summary>设置 SpanWeight.SumOfSquaredWeights() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.AllInstances.ExplainIndexReaderInt32">
            <summary>设置 SpanWeight.Explain(IndexReader reader, Int32 doc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.AllInstances.GetQuery">
            <summary>设置 SpanWeight.GetQuery() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.AllInstances.GetValue">
            <summary>设置 SpanWeight.GetValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.AllInstances.NormalizeSingle">
            <summary>设置 SpanWeight.Normalize(Single queryNorm) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.AllInstances.ScorerIndexReaderBooleanBoolean">
            <summary>设置 SpanWeight.Scorer(IndexReader reader, Boolean scoreDocsInOrder, Boolean topScorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpanWeight.AllInstances.SumOfSquaredWeights">
            <summary>设置 SpanWeight.SumOfSquaredWeights() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpans">
            <summary>Lucene.Net.Search.Spans.Spans 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpans.#ctor(Lucene.Net.Search.Spans.Spans)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpans.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimSpans.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpans.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimSpans.Constructor">
            <summary>设置 Spans.Spans() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimSpans.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimTermSpans">
            <summary>Lucene.Net.Search.Spans.TermSpans 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.#ctor(Lucene.Net.Search.Spans.TermSpans)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.ConstructorTermPositionsTerm">
            <summary>设置 TermSpans.TermSpans(TermPositions positions, Term term) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.Doc">
            <summary>设置 TermSpans.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.End">
            <summary>设置 TermSpans.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.GetPayload">
            <summary>设置 TermSpans.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.GetPositions">
            <summary>设置 TermSpans.GetPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.IsPayloadAvailable">
            <summary>设置 TermSpans.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.Next">
            <summary>设置 TermSpans.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.SkipToInt32">
            <summary>设置 TermSpans.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.Start">
            <summary>设置 TermSpans.Start() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.ToString">
            <summary>设置 TermSpans.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.Doc">
            <summary>设置 TermSpans.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.End">
            <summary>设置 TermSpans.End() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.GetPayload">
            <summary>设置 TermSpans.GetPayload() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.GetPositions">
            <summary>设置 TermSpans.GetPositions() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.IsPayloadAvailable">
            <summary>设置 TermSpans.IsPayloadAvailable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.Next">
            <summary>设置 TermSpans.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.SkipToInt32">
            <summary>设置 TermSpans.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.Start">
            <summary>设置 TermSpans.Start() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.ShimTermSpans.AllInstances.ToString01">
            <summary>设置 TermSpans.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery">
            <summary>Lucene.Net.Search.Spans.FieldMaskingSpanQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 FieldMaskingSpanQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.CreateWeightSearcher">
            <summary>设置 FieldMaskingSpanQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.Equals(System.Object)">
            <summary>设置 FieldMaskingSpanQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.EqualsObject">
            <summary>设置 FieldMaskingSpanQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 FieldMaskingSpanQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 FieldMaskingSpanQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetField">
            <summary>设置 FieldMaskingSpanQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetField01">
            <summary>设置 FieldMaskingSpanQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetHashCode">
            <summary>设置 FieldMaskingSpanQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetHashCode01">
            <summary>设置 FieldMaskingSpanQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetMaskedQuery">
            <summary>设置 FieldMaskingSpanQuery.GetMaskedQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetMaskedQuery01">
            <summary>设置 FieldMaskingSpanQuery.GetMaskedQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 FieldMaskingSpanQuery.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetSimilaritySearcher">
            <summary>设置 FieldMaskingSpanQuery.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldMaskingSpanQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetSpansIndexReader">
            <summary>设置 FieldMaskingSpanQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetTerms">
            <summary>设置 FieldMaskingSpanQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.GetTerms01">
            <summary>设置 FieldMaskingSpanQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.InitializeStub">
            <summary>初始化 type StubFieldMaskingSpanQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 FieldMaskingSpanQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.RewriteIndexReader">
            <summary>设置 FieldMaskingSpanQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.ToString(System.String)">
            <summary>设置 FieldMaskingSpanQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.ToStringString">
            <summary>设置 FieldMaskingSpanQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubFieldMaskingSpanQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered">
            <summary>Lucene.Net.Search.Spans.NearSpansOrdered 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.#ctor(Lucene.Net.Search.Spans.SpanNearQuery,Lucene.Net.Index.IndexReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.#ctor(Lucene.Net.Search.Spans.SpanNearQuery,Lucene.Net.Index.IndexReader,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.Doc">
            <summary>设置 NearSpansOrdered.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.Doc01">
            <summary>设置 NearSpansOrdered.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.End">
            <summary>设置 NearSpansOrdered.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.End01">
            <summary>设置 NearSpansOrdered.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.GetPayload">
            <summary>设置 NearSpansOrdered.GetPayload() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.GetPayload01">
            <summary>设置 NearSpansOrdered.GetPayload() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.GetSubSpans">
            <summary>设置 NearSpansOrdered.GetSubSpans() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.GetSubSpans01">
            <summary>设置 NearSpansOrdered.GetSubSpans() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.InitializeStub">
            <summary>初始化 type StubNearSpansOrdered 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.IsPayloadAvailable">
            <summary>设置 NearSpansOrdered.IsPayloadAvailable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.IsPayloadAvailable01">
            <summary>设置 NearSpansOrdered.IsPayloadAvailable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.Next">
            <summary>设置 NearSpansOrdered.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.Next01">
            <summary>设置 NearSpansOrdered.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.SkipTo(System.Int32)">
            <summary>设置 NearSpansOrdered.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.SkipToInt32">
            <summary>设置 NearSpansOrdered.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.Start">
            <summary>设置 NearSpansOrdered.Start() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.Start01">
            <summary>设置 NearSpansOrdered.Start() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.ToString">
            <summary>设置 NearSpansOrdered.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.ToString01">
            <summary>设置 NearSpansOrdered.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubNearSpansOrdered.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered">
            <summary>Lucene.Net.Search.Spans.NearSpansUnordered 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.#ctor(Lucene.Net.Search.Spans.SpanNearQuery,Lucene.Net.Index.IndexReader)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.Doc">
            <summary>设置 NearSpansUnordered.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.Doc01">
            <summary>设置 NearSpansUnordered.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.End">
            <summary>设置 NearSpansUnordered.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.End01">
            <summary>设置 NearSpansUnordered.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.GetPayload">
            <summary>设置 NearSpansUnordered.GetPayload() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.GetPayload01">
            <summary>设置 NearSpansUnordered.GetPayload() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.GetSubSpans">
            <summary>设置 NearSpansUnordered.GetSubSpans() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.GetSubSpans01">
            <summary>设置 NearSpansUnordered.GetSubSpans() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.InitializeStub">
            <summary>初始化 type StubNearSpansUnordered 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.IsPayloadAvailable">
            <summary>设置 NearSpansUnordered.IsPayloadAvailable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.IsPayloadAvailable01">
            <summary>设置 NearSpansUnordered.IsPayloadAvailable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.Next">
            <summary>设置 NearSpansUnordered.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.Next01">
            <summary>设置 NearSpansUnordered.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.SkipTo(System.Int32)">
            <summary>设置 NearSpansUnordered.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.SkipToInt32">
            <summary>设置 NearSpansUnordered.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.Start">
            <summary>设置 NearSpansUnordered.Start() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.Start01">
            <summary>设置 NearSpansUnordered.Start() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.ToString">
            <summary>设置 NearSpansUnordered.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.ToString01">
            <summary>设置 NearSpansUnordered.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubNearSpansUnordered.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery">
            <summary>Lucene.Net.Search.Spans.SpanFirstQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.Clone">
            <summary>设置 SpanFirstQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.Clone01">
            <summary>设置 SpanFirstQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.CreateWeightSearcher">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.Equals(System.Object)">
            <summary>设置 SpanFirstQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.EqualsObject">
            <summary>设置 SpanFirstQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 SpanFirstQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanFirstQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetEnd">
            <summary>设置 SpanFirstQuery.GetEnd() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetEnd01">
            <summary>设置 SpanFirstQuery.GetEnd() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetField">
            <summary>设置 SpanFirstQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetField01">
            <summary>设置 SpanFirstQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetHashCode">
            <summary>设置 SpanFirstQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetHashCode01">
            <summary>设置 SpanFirstQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetMatch">
            <summary>设置 SpanFirstQuery.GetMatch() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetMatch01">
            <summary>设置 SpanFirstQuery.GetMatch() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanFirstQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetSpansIndexReader">
            <summary>设置 SpanFirstQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetTerms">
            <summary>设置 SpanFirstQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.GetTerms01">
            <summary>设置 SpanFirstQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.InitializeStub">
            <summary>初始化 type StubSpanFirstQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanFirstQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.RewriteIndexReader">
            <summary>设置 SpanFirstQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.ToString(System.String)">
            <summary>设置 SpanFirstQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.ToStringString">
            <summary>设置 SpanFirstQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanFirstQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery">
            <summary>Lucene.Net.Search.Spans.SpanNearQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery[],System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery[],System.Int32,System.Boolean,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.Clone">
            <summary>设置 SpanNearQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.Clone01">
            <summary>设置 SpanNearQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.CreateWeightSearcher">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.Equals(System.Object)">
            <summary>设置 SpanNearQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.EqualsObject">
            <summary>设置 SpanNearQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 SpanNearQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanNearQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetClauses">
            <summary>设置 SpanNearQuery.GetClauses() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetClauses01">
            <summary>设置 SpanNearQuery.GetClauses() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetField">
            <summary>设置 SpanNearQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetField01">
            <summary>设置 SpanNearQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetHashCode">
            <summary>设置 SpanNearQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetHashCode01">
            <summary>设置 SpanNearQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetSlop">
            <summary>设置 SpanNearQuery.GetSlop() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetSlop01">
            <summary>设置 SpanNearQuery.GetSlop() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanNearQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetSpansIndexReader">
            <summary>设置 SpanNearQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetTerms">
            <summary>设置 SpanNearQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.GetTerms01">
            <summary>设置 SpanNearQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.InitializeStub">
            <summary>初始化 type StubSpanNearQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.IsInOrder">
            <summary>设置 SpanNearQuery.IsInOrder() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.IsInOrder01">
            <summary>设置 SpanNearQuery.IsInOrder() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanNearQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.RewriteIndexReader">
            <summary>设置 SpanNearQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.ToString(System.String)">
            <summary>设置 SpanNearQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.ToStringString">
            <summary>设置 SpanNearQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanNearQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery">
            <summary>Lucene.Net.Search.Spans.SpanNotQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery,Lucene.Net.Search.Spans.SpanQuery)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.Clone">
            <summary>设置 SpanNotQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.Clone01">
            <summary>设置 SpanNotQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.CreateWeightSearcher">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.Equals(System.Object)">
            <summary>设置 SpanNotQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.EqualsObject">
            <summary>设置 SpanNotQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 SpanNotQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanNotQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetExclude">
            <summary>设置 SpanNotQuery.GetExclude() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetExclude01">
            <summary>设置 SpanNotQuery.GetExclude() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetField">
            <summary>设置 SpanNotQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetField01">
            <summary>设置 SpanNotQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetHashCode">
            <summary>设置 SpanNotQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetHashCode01">
            <summary>设置 SpanNotQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetInclude">
            <summary>设置 SpanNotQuery.GetInclude() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetInclude01">
            <summary>设置 SpanNotQuery.GetInclude() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanNotQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetSpansIndexReader">
            <summary>设置 SpanNotQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetTerms">
            <summary>设置 SpanNotQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.GetTerms01">
            <summary>设置 SpanNotQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.InitializeStub">
            <summary>初始化 type StubSpanNotQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanNotQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.RewriteIndexReader">
            <summary>设置 SpanNotQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.ToString(System.String)">
            <summary>设置 SpanNotQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.ToStringString">
            <summary>设置 SpanNotQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanNotQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery">
            <summary>Lucene.Net.Search.Spans.SpanOrQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.#ctor(Lucene.Net.Search.Spans.SpanQuery[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.Clone">
            <summary>设置 SpanOrQuery.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.Clone01">
            <summary>设置 SpanOrQuery.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.CreateWeightSearcher">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.Equals(System.Object)">
            <summary>设置 SpanOrQuery.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.EqualsObject">
            <summary>设置 SpanOrQuery.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 SpanOrQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanOrQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetClauses">
            <summary>设置 SpanOrQuery.GetClauses() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetClauses01">
            <summary>设置 SpanOrQuery.GetClauses() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetField">
            <summary>设置 SpanOrQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetField01">
            <summary>设置 SpanOrQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetHashCode">
            <summary>设置 SpanOrQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetHashCode01">
            <summary>设置 SpanOrQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanOrQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetSpansIndexReader">
            <summary>设置 SpanOrQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetTerms">
            <summary>设置 SpanOrQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.GetTerms01">
            <summary>设置 SpanOrQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.InitializeStub">
            <summary>初始化 type StubSpanOrQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanOrQuery.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.RewriteIndexReader">
            <summary>设置 SpanOrQuery.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.ToString(System.String)">
            <summary>设置 SpanOrQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.ToStringString">
            <summary>设置 SpanOrQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanOrQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpanQuery">
            <summary>Lucene.Net.Search.Spans.SpanQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.CreateWeightSearcher">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.Equals(System.Object)">
            <summary>设置 Query.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.EqualsObject">
            <summary>设置 Query.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 Query.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetField">
            <summary>设置 SpanQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetField01">
            <summary>设置 SpanQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetHashCode">
            <summary>设置 Query.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetHashCode01">
            <summary>设置 Query.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetSpansIndexReader">
            <summary>设置 SpanQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetTerms">
            <summary>设置 SpanQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.GetTerms01">
            <summary>设置 SpanQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.InitializeStub">
            <summary>初始化 type StubSpanQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.ToString(System.String)">
            <summary>设置 Query.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.ToStringString">
            <summary>设置 Query.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpanScorer">
            <summary>Lucene.Net.Search.Spans.SpanScorer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.#ctor(Lucene.Net.Search.Spans.Spans,Lucene.Net.Search.Weight,Lucene.Net.Search.Similarity,System.Byte[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Advance(System.Int32)">
            <summary>设置 SpanScorer.Advance(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.AdvanceInt32">
            <summary>设置 SpanScorer.Advance(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Doc">
            <summary>设置 SpanScorer.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Doc01">
            <summary>设置 SpanScorer.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.DocID">
            <summary>设置 SpanScorer.DocID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.DocID01">
            <summary>设置 SpanScorer.DocID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Explain(System.Int32)">
            <summary>设置 SpanScorer.Explain(Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.ExplainInt32">
            <summary>设置 SpanScorer.Explain(Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.GetSimilarity">
            <summary>设置 Scorer.GetSimilarity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.GetSimilarity01">
            <summary>设置 Scorer.GetSimilarity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.InitializeStub">
            <summary>初始化 type StubSpanScorer 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Next">
            <summary>设置 SpanScorer.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Next01">
            <summary>设置 SpanScorer.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.NextDoc">
            <summary>设置 SpanScorer.NextDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.NextDoc01">
            <summary>设置 SpanScorer.NextDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Score(Lucene.Net.Search.HitCollector,System.Int32)">
            <summary>设置 Scorer.Score(HitCollector hc, Int32 max) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Score(Lucene.Net.Search.Collector,System.Int32,System.Int32)">
            <summary>设置 Scorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Score">
            <summary>设置 SpanScorer.Score() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Score(Lucene.Net.Search.Collector)">
            <summary>设置 Scorer.Score(Collector collector) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Score(Lucene.Net.Search.HitCollector)">
            <summary>设置 Scorer.Score(HitCollector hc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.Score01">
            <summary>设置 SpanScorer.Score() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.ScoreCollector">
            <summary>设置 Scorer.Score(Collector collector) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.ScoreCollectorInt32Int32">
            <summary>设置 Scorer.Score(Collector collector, Int32 max, Int32 firstDocID) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.ScoreHitCollector">
            <summary>设置 Scorer.Score(HitCollector hc) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.ScoreHitCollectorInt32">
            <summary>设置 Scorer.Score(HitCollector hc, Int32 max) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.SetFreqCurrentDoc">
            <summary>设置 SpanScorer.SetFreqCurrentDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.SetFreqCurrentDoc01">
            <summary>设置 SpanScorer.SetFreqCurrentDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.SkipTo(System.Int32)">
            <summary>设置 SpanScorer.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.SkipToInt32">
            <summary>设置 SpanScorer.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanScorer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery">
            <summary>Lucene.Net.Search.Spans.SpanTermQuery 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.#ctor(Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.Clone">
            <summary>设置 Query.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.Clone01">
            <summary>设置 Query.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.Combine(Lucene.Net.Search.Query[])">
            <summary>设置 Query.Combine(Query[] queries) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.CombineQueryArray">
            <summary>设置 Query.Combine(Query[] queries) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.CreateWeight(Lucene.Net.Search.Searcher)">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.CreateWeightSearcher">
            <summary>设置 SpanQuery.CreateWeight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.Equals(System.Object)">
            <summary>设置 SpanTermQuery.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.EqualsObject">
            <summary>设置 SpanTermQuery.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.ExtractTerms(System.Collections.Generic.ICollection{Lucene.Net.Index.Term})">
            <summary>设置 SpanTermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.ExtractTermsICollectionOfTerm">
            <summary>设置 SpanTermQuery.ExtractTerms(ICollection`1&lt;Term&gt; terms) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetBoost">
            <summary>设置 Query.GetBoost() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetBoost01">
            <summary>设置 Query.GetBoost() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetField">
            <summary>设置 SpanTermQuery.GetField() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetField01">
            <summary>设置 SpanTermQuery.GetField() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetHashCode">
            <summary>设置 SpanTermQuery.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetHashCode01">
            <summary>设置 SpanTermQuery.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetSimilarity(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetSimilaritySearcher">
            <summary>设置 Query.GetSimilarity(Searcher searcher) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetSpans(Lucene.Net.Index.IndexReader)">
            <summary>设置 SpanTermQuery.GetSpans(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetSpansIndexReader">
            <summary>设置 SpanTermQuery.GetSpans(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetTerm">
            <summary>设置 SpanTermQuery.GetTerm() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetTerm01">
            <summary>设置 SpanTermQuery.GetTerm() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetTerms">
            <summary>设置 SpanTermQuery.GetTerms() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.GetTerms01">
            <summary>设置 SpanTermQuery.GetTerms() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.InitializeStub">
            <summary>初始化 type StubSpanTermQuery 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.Rewrite(Lucene.Net.Index.IndexReader)">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.RewriteIndexReader">
            <summary>设置 Query.Rewrite(IndexReader reader) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.SetBoost(System.Single)">
            <summary>设置 Query.SetBoost(Single b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.SetBoostSingle">
            <summary>设置 Query.SetBoost(Single b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.ToString">
            <summary>设置 Query.ToString() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.ToString(System.String)">
            <summary>设置 SpanTermQuery.ToString(String field) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.ToString01">
            <summary>设置 Query.ToString() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.ToStringString">
            <summary>设置 SpanTermQuery.ToString(String field) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.Weight(Lucene.Net.Search.Searcher)">
            <summary>设置 Query.Weight(Searcher searcher) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.WeightSearcher">
            <summary>设置 Query.Weight(Searcher searcher) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanTermQuery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpanWeight">
            <summary>Lucene.Net.Search.Spans.SpanWeight 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.#ctor(Lucene.Net.Search.Spans.SpanQuery,Lucene.Net.Search.Searcher)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.Explain(Lucene.Net.Index.IndexReader,System.Int32)">
            <summary>设置 SpanWeight.Explain(IndexReader reader, Int32 doc) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.ExplainIndexReaderInt32">
            <summary>设置 SpanWeight.Explain(IndexReader reader, Int32 doc) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.GetQuery">
            <summary>设置 SpanWeight.GetQuery() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.GetQuery01">
            <summary>设置 SpanWeight.GetQuery() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.GetValue">
            <summary>设置 SpanWeight.GetValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.GetValue01">
            <summary>设置 SpanWeight.GetValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.InitializeStub">
            <summary>初始化 type StubSpanWeight 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.Normalize(System.Single)">
            <summary>设置 SpanWeight.Normalize(Single queryNorm) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.NormalizeSingle">
            <summary>设置 SpanWeight.Normalize(Single queryNorm) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.Scorer(Lucene.Net.Index.IndexReader,System.Boolean,System.Boolean)">
            <summary>设置 SpanWeight.Scorer(IndexReader reader, Boolean scoreDocsInOrder, Boolean topScorer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.ScorerIndexReaderBooleanBoolean">
            <summary>设置 SpanWeight.Scorer(IndexReader reader, Boolean scoreDocsInOrder, Boolean topScorer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.ScoresDocsOutOfOrder">
            <summary>设置 Weight.ScoresDocsOutOfOrder() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.ScoresDocsOutOfOrder01">
            <summary>设置 Weight.ScoresDocsOutOfOrder() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.SumOfSquaredWeights">
            <summary>设置 SpanWeight.SumOfSquaredWeights() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.SumOfSquaredWeights01">
            <summary>设置 SpanWeight.SumOfSquaredWeights() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpanWeight.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubSpans">
            <summary>Lucene.Net.Search.Spans.Spans 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.Doc">
            <summary>设置 Spans.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpans.Doc01">
            <summary>设置 Spans.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.End">
            <summary>设置 Spans.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpans.End01">
            <summary>设置 Spans.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.GetPayload">
            <summary>设置 Spans.GetPayload() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpans.GetPayload01">
            <summary>设置 Spans.GetPayload() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.InitializeStub">
            <summary>初始化 type StubSpans 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.IsPayloadAvailable">
            <summary>设置 Spans.IsPayloadAvailable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpans.IsPayloadAvailable01">
            <summary>设置 Spans.IsPayloadAvailable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.Next">
            <summary>设置 Spans.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpans.Next01">
            <summary>设置 Spans.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.SkipTo(System.Int32)">
            <summary>设置 Spans.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpans.SkipToInt32">
            <summary>设置 Spans.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubSpans.Start">
            <summary>设置 Spans.Start() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubSpans.Start01">
            <summary>设置 Spans.Start() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpans.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpans.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubSpans.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Search.Spans.Fakes.StubTermSpans">
            <summary>Lucene.Net.Search.Spans.TermSpans 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.#ctor(Lucene.Net.Index.TermPositions,Lucene.Net.Index.Term)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.Doc">
            <summary>设置 TermSpans.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.Doc01">
            <summary>设置 TermSpans.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.End">
            <summary>设置 TermSpans.End() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.End01">
            <summary>设置 TermSpans.End() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.GetPayload">
            <summary>设置 TermSpans.GetPayload() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.GetPayload01">
            <summary>设置 TermSpans.GetPayload() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.GetPositions">
            <summary>设置 TermSpans.GetPositions() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.GetPositions01">
            <summary>设置 TermSpans.GetPositions() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.InitializeStub">
            <summary>初始化 type StubTermSpans 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.IsPayloadAvailable">
            <summary>设置 TermSpans.IsPayloadAvailable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.IsPayloadAvailable01">
            <summary>设置 TermSpans.IsPayloadAvailable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.Next">
            <summary>设置 TermSpans.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.Next01">
            <summary>设置 TermSpans.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.SkipTo(System.Int32)">
            <summary>设置 TermSpans.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.SkipToInt32">
            <summary>设置 TermSpans.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.Start">
            <summary>设置 TermSpans.Start() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.Start01">
            <summary>设置 TermSpans.Start() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Search.Spans.Fakes.StubTermSpans.ToString">
            <summary>设置 TermSpans.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Search.Spans.Fakes.StubTermSpans.ToString01">
            <summary>设置 TermSpans.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubTermSpans.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubTermSpans.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Search.Spans.Fakes.StubTermSpans.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimAlreadyClosedException">
            <summary>Lucene.Net.Store.AlreadyClosedException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.#ctor(Lucene.Net.Store.AlreadyClosedException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 AlreadyClosedException.AlreadyClosedException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.ConstructorString">
            <summary>设置 AlreadyClosedException.AlreadyClosedException(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.ConstructorStringException">
            <summary>设置 AlreadyClosedException.AlreadyClosedException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimAlreadyClosedException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimBufferedIndexInput">
            <summary>Lucene.Net.Store.BufferedIndexInput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.#ctor(Lucene.Net.Store.BufferedIndexInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.CheckBufferSizeInt32">
            <summary>设置 BufferedIndexInput.CheckBufferSize(Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.Clone">
            <summary>设置 BufferedIndexInput.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.Constructor">
            <summary>设置 BufferedIndexInput.BufferedIndexInput() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.ConstructorInt32">
            <summary>设置 BufferedIndexInput.BufferedIndexInput(Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.GetBufferSize">
            <summary>设置 BufferedIndexInput.GetBufferSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.GetFilePointer">
            <summary>设置 BufferedIndexInput.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.NewBufferByteArray">
            <summary>设置 BufferedIndexInput.NewBuffer(Byte[] newBuffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.ReadByte">
            <summary>设置 BufferedIndexInput.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.ReadBytesByteArrayInt32Int32">
            <summary>设置 BufferedIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.ReadBytesByteArrayInt32Int32Boolean">
            <summary>设置 BufferedIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.Refill">
            <summary>设置 BufferedIndexInput.Refill() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.SeekInt64">
            <summary>设置 BufferedIndexInput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.SetBufferSizeInt32">
            <summary>设置 BufferedIndexInput.SetBufferSize(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.CheckBufferSizeInt32">
            <summary>设置 BufferedIndexInput.CheckBufferSize(Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.Clone">
            <summary>设置 BufferedIndexInput.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.GetBufferSize">
            <summary>设置 BufferedIndexInput.GetBufferSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.GetFilePointer">
            <summary>设置 BufferedIndexInput.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.NewBufferByteArray">
            <summary>设置 BufferedIndexInput.NewBuffer(Byte[] newBuffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.ReadByte">
            <summary>设置 BufferedIndexInput.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.ReadBytesByteArrayInt32Int32">
            <summary>设置 BufferedIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.ReadBytesByteArrayInt32Int32Boolean">
            <summary>设置 BufferedIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.Refill">
            <summary>设置 BufferedIndexInput.Refill() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.SeekInt64">
            <summary>设置 BufferedIndexInput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexInput.AllInstances.SetBufferSizeInt32">
            <summary>设置 BufferedIndexInput.SetBufferSize(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput">
            <summary>Lucene.Net.Store.BufferedIndexOutput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.#ctor(Lucene.Net.Store.BufferedIndexOutput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.Close">
            <summary>设置 BufferedIndexOutput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.Constructor">
            <summary>设置 BufferedIndexOutput.BufferedIndexOutput() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.Flush">
            <summary>设置 BufferedIndexOutput.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.FlushBufferByteArrayInt32">
            <summary>设置 BufferedIndexOutput.FlushBuffer(Byte[] b, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.GetFilePointer">
            <summary>设置 BufferedIndexOutput.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.SeekInt64">
            <summary>设置 BufferedIndexOutput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.WriteByteByte">
            <summary>设置 BufferedIndexOutput.WriteByte(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.WriteBytesByteArrayInt32Int32">
            <summary>设置 BufferedIndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.AllInstances.Close">
            <summary>设置 BufferedIndexOutput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.AllInstances.Flush">
            <summary>设置 BufferedIndexOutput.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.AllInstances.FlushBufferByteArrayInt32">
            <summary>设置 BufferedIndexOutput.FlushBuffer(Byte[] b, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.AllInstances.GetFilePointer">
            <summary>设置 BufferedIndexOutput.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.AllInstances.SeekInt64">
            <summary>设置 BufferedIndexOutput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.AllInstances.WriteByteByte">
            <summary>设置 BufferedIndexOutput.WriteByte(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimBufferedIndexOutput.AllInstances.WriteBytesByteArrayInt32Int32">
            <summary>设置 BufferedIndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimChecksumIndexInput">
            <summary>Lucene.Net.Store.ChecksumIndexInput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.#ctor(Lucene.Net.Store.ChecksumIndexInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.Close">
            <summary>设置 ChecksumIndexInput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.ConstructorIndexInput">
            <summary>设置 ChecksumIndexInput.ChecksumIndexInput(IndexInput main) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.GetChecksum">
            <summary>设置 ChecksumIndexInput.GetChecksum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.GetFilePointer">
            <summary>设置 ChecksumIndexInput.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.Length">
            <summary>设置 ChecksumIndexInput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.ReadByte">
            <summary>设置 ChecksumIndexInput.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.ReadBytesByteArrayInt32Int32">
            <summary>设置 ChecksumIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.SeekInt64">
            <summary>设置 ChecksumIndexInput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.AllInstances.Close">
            <summary>设置 ChecksumIndexInput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.AllInstances.GetChecksum">
            <summary>设置 ChecksumIndexInput.GetChecksum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.AllInstances.GetFilePointer">
            <summary>设置 ChecksumIndexInput.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.AllInstances.Length">
            <summary>设置 ChecksumIndexInput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.AllInstances.ReadByte">
            <summary>设置 ChecksumIndexInput.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.AllInstances.ReadBytesByteArrayInt32Int32">
            <summary>设置 ChecksumIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexInput.AllInstances.SeekInt64">
            <summary>设置 ChecksumIndexInput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput">
            <summary>Lucene.Net.Store.ChecksumIndexOutput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.#ctor(Lucene.Net.Store.ChecksumIndexOutput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.Close">
            <summary>设置 ChecksumIndexOutput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.ConstructorIndexOutput">
            <summary>设置 ChecksumIndexOutput.ChecksumIndexOutput(IndexOutput main) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.FinishCommit">
            <summary>设置 ChecksumIndexOutput.FinishCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.Flush">
            <summary>设置 ChecksumIndexOutput.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.GetChecksum">
            <summary>设置 ChecksumIndexOutput.GetChecksum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.GetFilePointer">
            <summary>设置 ChecksumIndexOutput.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.Length">
            <summary>设置 ChecksumIndexOutput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.PrepareCommit">
            <summary>设置 ChecksumIndexOutput.PrepareCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.SeekInt64">
            <summary>设置 ChecksumIndexOutput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.WriteByteByte">
            <summary>设置 ChecksumIndexOutput.WriteByte(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.WriteBytesByteArrayInt32Int32">
            <summary>设置 ChecksumIndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.Close">
            <summary>设置 ChecksumIndexOutput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.FinishCommit">
            <summary>设置 ChecksumIndexOutput.FinishCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.Flush">
            <summary>设置 ChecksumIndexOutput.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.GetChecksum">
            <summary>设置 ChecksumIndexOutput.GetChecksum() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.GetFilePointer">
            <summary>设置 ChecksumIndexOutput.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.Length">
            <summary>设置 ChecksumIndexOutput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.PrepareCommit">
            <summary>设置 ChecksumIndexOutput.PrepareCommit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.SeekInt64">
            <summary>设置 ChecksumIndexOutput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.WriteByteByte">
            <summary>设置 ChecksumIndexOutput.WriteByte(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimChecksumIndexOutput.AllInstances.WriteBytesByteArrayInt32Int32">
            <summary>设置 ChecksumIndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimDirectory">
            <summary>Lucene.Net.Store.Directory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimDirectory.#ctor(Lucene.Net.Store.Directory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimDirectory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.ClearLockString">
            <summary>设置 Directory.ClearLock(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.Constructor">
            <summary>设置 Directory.Directory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.CopyDirectoryDirectoryBoolean">
            <summary>设置 Directory.Copy(Directory src, Directory dest, Boolean closeDirSrc) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.EnsureOpen">
            <summary>设置 Directory.EnsureOpen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.GetLockFactory">
            <summary>设置 Directory.GetLockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.GetLockID">
            <summary>设置 Directory.GetLockID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.ListAll">
            <summary>设置 Directory.ListAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.MakeLockString">
            <summary>设置 Directory.MakeLock(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.OpenInputStringInt32">
            <summary>设置 Directory.OpenInput(String name, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.SetLockFactoryLockFactory">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.SyncString">
            <summary>设置 Directory.Sync(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.ToString">
            <summary>设置 Directory.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.isOpen_ForNUnitGet">
            <summary>设置 Directory.get_isOpen_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.ClearLockString">
            <summary>设置 Directory.ClearLock(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.EnsureOpen">
            <summary>设置 Directory.EnsureOpen() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.GetLockFactory">
            <summary>设置 Directory.GetLockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.GetLockID">
            <summary>设置 Directory.GetLockID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.ListAll">
            <summary>设置 Directory.ListAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.MakeLockString">
            <summary>设置 Directory.MakeLock(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.OpenInputStringInt32">
            <summary>设置 Directory.OpenInput(String name, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.SetLockFactoryLockFactory">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.SyncString">
            <summary>设置 Directory.Sync(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.ToString01">
            <summary>设置 Directory.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimDirectory.AllInstances.isOpen_ForNUnitGet">
            <summary>设置 Directory.get_isOpen_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimFSDirectory">
            <summary>Lucene.Net.Store.FSDirectory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFSDirectory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFSDirectory.#ctor(Lucene.Net.Store.FSDirectory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFSDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFSDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFSDirectory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.Close">
            <summary>设置 FSDirectory.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.Constructor">
            <summary>设置 FSDirectory.FSDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.ConstructorDirectoryInfoLockFactory">
            <summary>设置 FSDirectory.FSDirectory(DirectoryInfo path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.Create">
            <summary>设置 FSDirectory.Create() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.CreateDir">
            <summary>设置 FSDirectory.CreateDir() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.CreateOutputString">
            <summary>设置 FSDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.DeleteFileString">
            <summary>设置 FSDirectory.DeleteFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.Dispose">
            <summary>设置 FSDirectory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.FileExistsString">
            <summary>设置 FSDirectory.FileExists(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.FileLengthString">
            <summary>设置 FSDirectory.FileLength(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.FileModifiedFileInfoString">
            <summary>设置 FSDirectory.FileModified(FileInfo directory, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.FileModifiedString">
            <summary>设置 FSDirectory.FileModified(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectory">
            <summary>设置 FSDirectory.GetDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryDirectoryInfo">
            <summary>设置 FSDirectory.GetDirectory(DirectoryInfo file) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryDirectoryInfoBoolean">
            <summary>设置 FSDirectory.GetDirectory(DirectoryInfo file, Boolean create) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryDirectoryInfoLockFactory">
            <summary>设置 FSDirectory.GetDirectory(DirectoryInfo file, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryFileInfo">
            <summary>设置 FSDirectory.GetDirectory(FileInfo file) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryFileInfoBoolean">
            <summary>设置 FSDirectory.GetDirectory(FileInfo file, Boolean create) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryFileInfoLockFactory">
            <summary>设置 FSDirectory.GetDirectory(FileInfo file, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryString">
            <summary>设置 FSDirectory.GetDirectory(String path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryStringBoolean">
            <summary>设置 FSDirectory.GetDirectory(String path, Boolean create) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDirectoryStringLockFactory">
            <summary>设置 FSDirectory.GetDirectory(String path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetDisableLocks">
            <summary>设置 FSDirectory.GetDisableLocks() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetFile">
            <summary>设置 FSDirectory.GetFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetLockID">
            <summary>设置 FSDirectory.GetLockID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.GetReadChunkSize">
            <summary>设置 FSDirectory.GetReadChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.InitDirectoryInfoLockFactory">
            <summary>设置 FSDirectory.Init(DirectoryInfo path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.InitOutputString">
            <summary>设置 FSDirectory.InitOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.List">
            <summary>设置 FSDirectory.List() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.ListAll">
            <summary>设置 FSDirectory.ListAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.ListAllDirectoryInfo">
            <summary>设置 FSDirectory.ListAll(DirectoryInfo dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.ListAllFileInfo">
            <summary>设置 FSDirectory.ListAll(FileInfo dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.OpenDirectoryInfo">
            <summary>设置 FSDirectory.Open(DirectoryInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.OpenDirectoryInfoLockFactory">
            <summary>设置 FSDirectory.Open(DirectoryInfo path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.OpenFileInfo">
            <summary>设置 FSDirectory.Open(FileInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.OpenInputString">
            <summary>设置 FSDirectory.OpenInput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.OpenInputStringInt32">
            <summary>设置 FSDirectory.OpenInput(String name, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.RenameFileStringString">
            <summary>设置 FSDirectory.RenameFile(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.SetDisableLocksBoolean">
            <summary>设置 FSDirectory.SetDisableLocks(Boolean doDisableLocks) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.SetReadChunkSizeInt32">
            <summary>设置 FSDirectory.SetReadChunkSize(Int32 chunkSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.StaticConstructor">
            <summary>设置 FSDirectory.FSDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.SyncString">
            <summary>设置 FSDirectory.Sync(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.ToString">
            <summary>设置 FSDirectory.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.TouchFileString">
            <summary>设置 FSDirectory.TouchFile(String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.Close">
            <summary>设置 FSDirectory.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.Create">
            <summary>设置 FSDirectory.Create() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.CreateDir">
            <summary>设置 FSDirectory.CreateDir() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.CreateOutputString">
            <summary>设置 FSDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.DeleteFileString">
            <summary>设置 FSDirectory.DeleteFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.Dispose">
            <summary>设置 FSDirectory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.FileExistsString">
            <summary>设置 FSDirectory.FileExists(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.FileLengthString">
            <summary>设置 FSDirectory.FileLength(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.FileModifiedString">
            <summary>设置 FSDirectory.FileModified(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.GetDirectory">
            <summary>设置 FSDirectory.GetDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.GetFile">
            <summary>设置 FSDirectory.GetFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.GetLockID">
            <summary>设置 FSDirectory.GetLockID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.GetReadChunkSize">
            <summary>设置 FSDirectory.GetReadChunkSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.InitDirectoryInfoLockFactory">
            <summary>设置 FSDirectory.Init(DirectoryInfo path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.InitOutputString">
            <summary>设置 FSDirectory.InitOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.List">
            <summary>设置 FSDirectory.List() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.ListAll">
            <summary>设置 FSDirectory.ListAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.OpenInputString">
            <summary>设置 FSDirectory.OpenInput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.OpenInputStringInt32">
            <summary>设置 FSDirectory.OpenInput(String name, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.RenameFileStringString">
            <summary>设置 FSDirectory.RenameFile(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.SetReadChunkSizeInt32">
            <summary>设置 FSDirectory.SetReadChunkSize(Int32 chunkSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.SyncString">
            <summary>设置 FSDirectory.Sync(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.ToString01">
            <summary>设置 FSDirectory.ToString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSDirectory.AllInstances.TouchFileString">
            <summary>设置 FSDirectory.TouchFile(String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimFSLockFactory">
            <summary>Lucene.Net.Store.FSLockFactory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFSLockFactory.#ctor(Lucene.Net.Store.FSLockFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFSLockFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFSLockFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSLockFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSLockFactory.Constructor">
            <summary>设置 FSLockFactory.FSLockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSLockFactory.GetLockDir">
            <summary>设置 FSLockFactory.GetLockDir() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSLockFactory.SetLockDirDirectoryInfo">
            <summary>设置 FSLockFactory.SetLockDir(DirectoryInfo lockDir) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimFSLockFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSLockFactory.AllInstances.GetLockDir">
            <summary>设置 FSLockFactory.GetLockDir() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFSLockFactory.AllInstances.SetLockDirDirectoryInfo">
            <summary>设置 FSLockFactory.SetLockDir(DirectoryInfo lockDir) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory">
            <summary>Lucene.Net.Store.FileSwitchDirectory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.#ctor(Lucene.Net.Store.FileSwitchDirectory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.Close">
            <summary>设置 FileSwitchDirectory.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.ConstructorIListOfStringDirectoryDirectoryBoolean">
            <summary>设置 FileSwitchDirectory.FileSwitchDirectory(IList`1&lt;String&gt; primaryExtensions, Directory primaryDir, Directory secondaryDir, Boolean doClose) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.CreateOutputString">
            <summary>设置 FileSwitchDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.DeleteFileString">
            <summary>设置 FileSwitchDirectory.DeleteFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.Dispose">
            <summary>设置 FileSwitchDirectory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.FileExistsString">
            <summary>设置 FileSwitchDirectory.FileExists(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.FileLengthString">
            <summary>设置 FileSwitchDirectory.FileLength(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.FileModifiedString">
            <summary>设置 FileSwitchDirectory.FileModified(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.GetDirectoryString">
            <summary>设置 FileSwitchDirectory.GetDirectory(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.GetExtensionString">
            <summary>设置 FileSwitchDirectory.GetExtension(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.GetPrimaryDir">
            <summary>设置 FileSwitchDirectory.GetPrimaryDir() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.GetSecondaryDir">
            <summary>设置 FileSwitchDirectory.GetSecondaryDir() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.List">
            <summary>设置 FileSwitchDirectory.List() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.ListAll">
            <summary>设置 FileSwitchDirectory.ListAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.OpenInputString">
            <summary>设置 FileSwitchDirectory.OpenInput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.RenameFileStringString">
            <summary>设置 FileSwitchDirectory.RenameFile(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.SyncString">
            <summary>设置 FileSwitchDirectory.Sync(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.TouchFileString">
            <summary>设置 FileSwitchDirectory.TouchFile(String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.Close">
            <summary>设置 FileSwitchDirectory.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.CreateOutputString">
            <summary>设置 FileSwitchDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.DeleteFileString">
            <summary>设置 FileSwitchDirectory.DeleteFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.Dispose">
            <summary>设置 FileSwitchDirectory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.FileExistsString">
            <summary>设置 FileSwitchDirectory.FileExists(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.FileLengthString">
            <summary>设置 FileSwitchDirectory.FileLength(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.FileModifiedString">
            <summary>设置 FileSwitchDirectory.FileModified(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.GetDirectoryString">
            <summary>设置 FileSwitchDirectory.GetDirectory(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.GetPrimaryDir">
            <summary>设置 FileSwitchDirectory.GetPrimaryDir() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.GetSecondaryDir">
            <summary>设置 FileSwitchDirectory.GetSecondaryDir() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.List">
            <summary>设置 FileSwitchDirectory.List() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.ListAll">
            <summary>设置 FileSwitchDirectory.ListAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.OpenInputString">
            <summary>设置 FileSwitchDirectory.OpenInput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.RenameFileStringString">
            <summary>设置 FileSwitchDirectory.RenameFile(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.SyncString">
            <summary>设置 FileSwitchDirectory.Sync(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimFileSwitchDirectory.AllInstances.TouchFileString">
            <summary>设置 FileSwitchDirectory.TouchFile(String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimIndexInput">
            <summary>Lucene.Net.Store.IndexInput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimIndexInput.#ctor(Lucene.Net.Store.IndexInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimIndexInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimIndexInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimIndexInput.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.Clone">
            <summary>设置 IndexInput.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.Constructor">
            <summary>设置 IndexInput.IndexInput() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadBytesByteArrayInt32Int32Boolean">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadCharsCharArrayInt32Int32">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadInt">
            <summary>设置 IndexInput.ReadInt() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadLong">
            <summary>设置 IndexInput.ReadLong() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadModifiedUTF8String">
            <summary>设置 IndexInput.ReadModifiedUTF8String() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadString">
            <summary>设置 IndexInput.ReadString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadStringStringMap">
            <summary>设置 IndexInput.ReadStringStringMap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadVInt">
            <summary>设置 IndexInput.ReadVInt() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.ReadVLong">
            <summary>设置 IndexInput.ReadVLong() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.SetModifiedUTF8StringsMode">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.SkipCharsInt32">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.Clone">
            <summary>设置 IndexInput.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadBytesByteArrayInt32Int32Boolean">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadCharsCharArrayInt32Int32">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadInt">
            <summary>设置 IndexInput.ReadInt() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadLong">
            <summary>设置 IndexInput.ReadLong() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadModifiedUTF8String">
            <summary>设置 IndexInput.ReadModifiedUTF8String() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadString">
            <summary>设置 IndexInput.ReadString() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadStringStringMap">
            <summary>设置 IndexInput.ReadStringStringMap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadVInt">
            <summary>设置 IndexInput.ReadVInt() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.ReadVLong">
            <summary>设置 IndexInput.ReadVLong() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.SetModifiedUTF8StringsMode">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexInput.AllInstances.SkipCharsInt32">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimIndexOutput">
            <summary>Lucene.Net.Store.IndexOutput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimIndexOutput.#ctor(Lucene.Net.Store.IndexOutput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimIndexOutput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimIndexOutput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.Constructor">
            <summary>设置 IndexOutput.IndexOutput() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.CopyBytesIndexInputInt64">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.SetLengthInt64">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.StaticConstructor">
            <summary>设置 IndexOutput.IndexOutput() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteBytesByteArrayInt32">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteCharsCharArrayInt32Int32">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteCharsStringInt32Int32">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteIntInt32">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteLongInt64">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteStringString">
            <summary>设置 IndexOutput.WriteString(String s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteStringStringMapIDictionaryOfStringString">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteVIntInt32">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.WriteVLongInt64">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.CopyBytesIndexInputInt64">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.SetLengthInt64">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteBytesByteArrayInt32">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteCharsCharArrayInt32Int32">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteCharsStringInt32Int32">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteIntInt32">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteLongInt64">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteStringString">
            <summary>设置 IndexOutput.WriteString(String s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteStringStringMapIDictionaryOfStringString">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteVIntInt32">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimIndexOutput.AllInstances.WriteVLongInt64">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLock">
            <summary>Lucene.Net.Store.Lock 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLock.#ctor(Lucene.Net.Store.Lock)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.Constructor">
            <summary>设置 Lock.Lock() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.ObtainInt64">
            <summary>设置 Lock.Obtain(Int64 lockWaitTimeout) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.StaticConstructor">
            <summary>设置 Lock.Lock() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.AllInstances.ObtainInt64">
            <summary>设置 Lock.Obtain(Int64 lockWaitTimeout) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLock.ShimWith">
            <summary>Lucene.Net.Store.Lock+With 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLock.ShimWith.#ctor(Lucene.Net.Store.Lock.With)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLock.ShimWith.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLock.ShimWith.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.ShimWith.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.ShimWith.ConstructorLockInt64">
            <summary>设置 With.With(Lock lock_Renamed, Int64 lockWaitTimeout) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.ShimWith.run">
            <summary>设置 With.run() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLock.ShimWith.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLock.ShimWith.AllInstances.run">
            <summary>设置 With.run() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockFactory">
            <summary>Lucene.Net.Store.LockFactory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockFactory.#ctor(Lucene.Net.Store.LockFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockFactory.Constructor">
            <summary>设置 LockFactory.LockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockFactory.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockFactory.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockFactory.AllInstances.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockFactory.AllInstances.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockObtainFailedException">
            <summary>Lucene.Net.Store.LockObtainFailedException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.#ctor(Lucene.Net.Store.LockObtainFailedException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.ConstructorString">
            <summary>设置 LockObtainFailedException.LockObtainFailedException(String message) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.ConstructorStringException">
            <summary>设置 LockObtainFailedException.LockObtainFailedException(String message, Exception ex) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockObtainFailedException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException">
            <summary>Lucene.Net.Store.LockReleaseFailedException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException.#ctor(Lucene.Net.Store.LockReleaseFailedException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException.ConstructorString">
            <summary>设置 LockReleaseFailedException.LockReleaseFailedException(String message) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockReleaseFailedException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockStressTest">
            <summary>Lucene.Net.Store.LockStressTest 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockStressTest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockStressTest.#ctor(Lucene.Net.Store.LockStressTest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockStressTest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockStressTest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockStressTest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockStressTest.Constructor">
            <summary>设置 LockStressTest.LockStressTest() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockStressTest.MainStringArray">
            <summary>设置 LockStressTest.Main(String[] args) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockStressTest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockVerifyServer">
            <summary>Lucene.Net.Store.LockVerifyServer 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockVerifyServer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockVerifyServer.#ctor(Lucene.Net.Store.LockVerifyServer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockVerifyServer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimLockVerifyServer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockVerifyServer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockVerifyServer.Constructor">
            <summary>设置 LockVerifyServer.LockVerifyServer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockVerifyServer.GetTimeInt64">
            <summary>设置 LockVerifyServer.GetTime(Int64 startTime) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimLockVerifyServer.MainStringArray">
            <summary>设置 LockVerifyServer.Main(String[] args) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimLockVerifyServer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimMMapDirectory">
            <summary>Lucene.Net.Store.MMapDirectory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimMMapDirectory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimMMapDirectory.#ctor(Lucene.Net.Store.MMapDirectory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimMMapDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimMMapDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimMMapDirectory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimMMapDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimMMapDirectory.ConstructorDirectoryInfo">
            <summary>设置 MMapDirectory.MMapDirectory(DirectoryInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimMMapDirectory.ConstructorDirectoryInfoLockFactory">
            <summary>设置 MMapDirectory.MMapDirectory(DirectoryInfo path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimMMapDirectory.ConstructorFileInfo">
            <summary>设置 MMapDirectory.MMapDirectory(FileInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimMMapDirectory.ConstructorFileInfoLockFactory">
            <summary>设置 MMapDirectory.MMapDirectory(FileInfo path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimMMapDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNIOFSDirectory">
            <summary>Lucene.Net.Store.NIOFSDirectory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.#ctor(Lucene.Net.Store.NIOFSDirectory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.Constructor">
            <summary>设置 NIOFSDirectory.NIOFSDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ConstructorDirectoryInfoLockFactory">
            <summary>设置 NIOFSDirectory.NIOFSDirectory(DirectoryInfo dir, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ShimNIOFSIndexInput">
            <summary>Lucene.Net.Store.NIOFSDirectory+NIOFSIndexInput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ShimNIOFSIndexInput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ShimNIOFSIndexInput.#ctor(Lucene.Net.Store.NIOFSDirectory.NIOFSIndexInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ShimNIOFSIndexInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ShimNIOFSIndexInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ShimNIOFSIndexInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ShimNIOFSIndexInput.Constructor">
            <summary>设置 NIOFSIndexInput.NIOFSIndexInput() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNIOFSDirectory.ShimNIOFSIndexInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory">
            <summary>Lucene.Net.Store.NativeFSLockFactory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.#ctor(Lucene.Net.Store.NativeFSLockFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.ClearLockString">
            <summary>设置 NativeFSLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.Constructor">
            <summary>设置 NativeFSLockFactory.NativeFSLockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.ConstructorDirectoryInfo">
            <summary>设置 NativeFSLockFactory.NativeFSLockFactory(DirectoryInfo lockDir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.ConstructorFileInfo">
            <summary>设置 NativeFSLockFactory.NativeFSLockFactory(FileInfo lockDir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.ConstructorString">
            <summary>设置 NativeFSLockFactory.NativeFSLockFactory(String lockDirName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.MakeLockString">
            <summary>设置 NativeFSLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.AllInstances.ClearLockString">
            <summary>设置 NativeFSLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNativeFSLockFactory.AllInstances.MakeLockString">
            <summary>设置 NativeFSLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNoLockFactory">
            <summary>Lucene.Net.Store.NoLockFactory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoLockFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoLockFactory.#ctor(Lucene.Net.Store.NoLockFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoLockFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoLockFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoLockFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoLockFactory.ClearLockString">
            <summary>设置 NoLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoLockFactory.Constructor">
            <summary>设置 NoLockFactory.NoLockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoLockFactory.GetNoLockFactory">
            <summary>设置 NoLockFactory.GetNoLockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoLockFactory.MakeLockString">
            <summary>设置 NoLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoLockFactory.StaticConstructor">
            <summary>设置 NoLockFactory.NoLockFactory() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNoLockFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoLockFactory.AllInstances.ClearLockString">
            <summary>设置 NoLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoLockFactory.AllInstances.MakeLockString">
            <summary>设置 NoLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException">
            <summary>Lucene.Net.Store.NoSuchDirectoryException 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException.#ctor(Lucene.Net.Store.NoSuchDirectoryException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException.ConstructorString">
            <summary>设置 NoSuchDirectoryException.NoSuchDirectoryException(String message) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimNoSuchDirectoryException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimRAMDirectory">
            <summary>Lucene.Net.Store.RAMDirectory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMDirectory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMDirectory.#ctor(Lucene.Net.Store.RAMDirectory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMDirectory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.Close">
            <summary>设置 RAMDirectory.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.Constructor">
            <summary>设置 RAMDirectory.RAMDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.ConstructorDirectory">
            <summary>设置 RAMDirectory.RAMDirectory(Directory dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.ConstructorDirectoryBoolean">
            <summary>设置 RAMDirectory.RAMDirectory(Directory dir, Boolean closeDir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.ConstructorFileInfo">
            <summary>设置 RAMDirectory.RAMDirectory(FileInfo dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.ConstructorString">
            <summary>设置 RAMDirectory.RAMDirectory(String dir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.CreateOutputString">
            <summary>设置 RAMDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.DeleteFileString">
            <summary>设置 RAMDirectory.DeleteFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.Dispose">
            <summary>设置 RAMDirectory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.FileExistsString">
            <summary>设置 RAMDirectory.FileExists(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.FileLengthString">
            <summary>设置 RAMDirectory.FileLength(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.FileModifiedString">
            <summary>设置 RAMDirectory.FileModified(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.List">
            <summary>设置 RAMDirectory.List() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.ListAll">
            <summary>设置 RAMDirectory.ListAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.OnDeserializedStreamingContext">
            <summary>设置 RAMDirectory.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.OpenInputString">
            <summary>设置 RAMDirectory.OpenInput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.RenameFileStringString">
            <summary>设置 RAMDirectory.RenameFile(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.SizeInBytes">
            <summary>设置 RAMDirectory.SizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.TouchFileString">
            <summary>设置 RAMDirectory.TouchFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.sizeInBytes_ForNUnitTestGet">
            <summary>设置 RAMDirectory.get_sizeInBytes_ForNUnitTest() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.sizeInBytes_ForNUnitTestSetInt64">
            <summary>设置 RAMDirectory.set_sizeInBytes_ForNUnitTest(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.Close">
            <summary>设置 RAMDirectory.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.CreateOutputString">
            <summary>设置 RAMDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.DeleteFileString">
            <summary>设置 RAMDirectory.DeleteFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.Dispose">
            <summary>设置 RAMDirectory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.FileExistsString">
            <summary>设置 RAMDirectory.FileExists(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.FileLengthString">
            <summary>设置 RAMDirectory.FileLength(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.FileModifiedString">
            <summary>设置 RAMDirectory.FileModified(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.List">
            <summary>设置 RAMDirectory.List() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.ListAll">
            <summary>设置 RAMDirectory.ListAll() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.OnDeserializedStreamingContext">
            <summary>设置 RAMDirectory.OnDeserialized(StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.OpenInputString">
            <summary>设置 RAMDirectory.OpenInput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.RenameFileStringString">
            <summary>设置 RAMDirectory.RenameFile(String from, String to) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.SizeInBytes">
            <summary>设置 RAMDirectory.SizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.TouchFileString">
            <summary>设置 RAMDirectory.TouchFile(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.sizeInBytes_ForNUnitTestGet">
            <summary>设置 RAMDirectory.get_sizeInBytes_ForNUnitTest() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMDirectory.AllInstances.sizeInBytes_ForNUnitTestSetInt64">
            <summary>设置 RAMDirectory.set_sizeInBytes_ForNUnitTest(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimRAMFile">
            <summary>Lucene.Net.Store.RAMFile 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMFile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMFile.#ctor(Lucene.Net.Store.RAMFile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMFile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMFile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AddBufferInt32">
            <summary>设置 RAMFile.AddBuffer(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.Constructor">
            <summary>设置 RAMFile.RAMFile() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.ConstructorRAMDirectory">
            <summary>设置 RAMFile.RAMFile(RAMDirectory directory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.GetBufferInt32">
            <summary>设置 RAMFile.GetBuffer(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.GetLastModified">
            <summary>设置 RAMFile.GetLastModified() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.GetLength">
            <summary>设置 RAMFile.GetLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.GetSizeInBytes">
            <summary>设置 RAMFile.GetSizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.NewBufferInt32">
            <summary>设置 RAMFile.NewBuffer(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.NumBuffers">
            <summary>设置 RAMFile.NumBuffers() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.SetLastModifiedInt64">
            <summary>设置 RAMFile.SetLastModified(Int64 lastModified) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.SetLengthInt64">
            <summary>设置 RAMFile.SetLength(Int64 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.directory_ForNUnitGet">
            <summary>设置 RAMFile.get_directory_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.directory_ForNUnitSetRAMDirectory">
            <summary>设置 RAMFile.set_directory_ForNUnit(RAMDirectory value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.length_ForNUnitGet">
            <summary>设置 RAMFile.get_length_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.sizeInBytes_ForNUnitGet">
            <summary>设置 RAMFile.get_sizeInBytes_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.AddBufferInt32">
            <summary>设置 RAMFile.AddBuffer(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.GetBufferInt32">
            <summary>设置 RAMFile.GetBuffer(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.GetLastModified">
            <summary>设置 RAMFile.GetLastModified() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.GetLength">
            <summary>设置 RAMFile.GetLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.GetSizeInBytes">
            <summary>设置 RAMFile.GetSizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.NewBufferInt32">
            <summary>设置 RAMFile.NewBuffer(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.NumBuffers">
            <summary>设置 RAMFile.NumBuffers() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.SetLastModifiedInt64">
            <summary>设置 RAMFile.SetLastModified(Int64 lastModified) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.SetLengthInt64">
            <summary>设置 RAMFile.SetLength(Int64 length) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.directory_ForNUnitGet">
            <summary>设置 RAMFile.get_directory_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.directory_ForNUnitSetRAMDirectory">
            <summary>设置 RAMFile.set_directory_ForNUnit(RAMDirectory value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.length_ForNUnitGet">
            <summary>设置 RAMFile.get_length_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMFile.AllInstances.sizeInBytes_ForNUnitGet">
            <summary>设置 RAMFile.get_sizeInBytes_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimRAMInputStream">
            <summary>Lucene.Net.Store.RAMInputStream 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMInputStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMInputStream.#ctor(Lucene.Net.Store.RAMInputStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMInputStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMInputStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMInputStream.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.Close">
            <summary>设置 RAMInputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.ConstructorRAMFile">
            <summary>设置 RAMInputStream.RAMInputStream(RAMFile f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.GetFilePointer">
            <summary>设置 RAMInputStream.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.Length">
            <summary>设置 RAMInputStream.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.ReadByte">
            <summary>设置 RAMInputStream.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.ReadBytesByteArrayInt32Int32">
            <summary>设置 RAMInputStream.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.SeekInt64">
            <summary>设置 RAMInputStream.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.StaticConstructor">
            <summary>设置 RAMInputStream.RAMInputStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.SwitchCurrentBufferBoolean">
            <summary>设置 RAMInputStream.SwitchCurrentBuffer(Boolean enforceEOF) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimRAMInputStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.AllInstances.Close">
            <summary>设置 RAMInputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.AllInstances.GetFilePointer">
            <summary>设置 RAMInputStream.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.AllInstances.Length">
            <summary>设置 RAMInputStream.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.AllInstances.ReadByte">
            <summary>设置 RAMInputStream.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.AllInstances.ReadBytesByteArrayInt32Int32">
            <summary>设置 RAMInputStream.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.AllInstances.SeekInt64">
            <summary>设置 RAMInputStream.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMInputStream.AllInstances.SwitchCurrentBufferBoolean">
            <summary>设置 RAMInputStream.SwitchCurrentBuffer(Boolean enforceEOF) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimRAMOutputStream">
            <summary>Lucene.Net.Store.RAMOutputStream 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMOutputStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMOutputStream.#ctor(Lucene.Net.Store.RAMOutputStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMOutputStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimRAMOutputStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.BUFFER_SIZE_ForNUnitGet">
            <summary>设置 RAMOutputStream.get_BUFFER_SIZE_ForNUnit() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.Close">
            <summary>设置 RAMOutputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.Constructor">
            <summary>设置 RAMOutputStream.RAMOutputStream() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.ConstructorRAMFile">
            <summary>设置 RAMOutputStream.RAMOutputStream(RAMFile f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.Flush">
            <summary>设置 RAMOutputStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.GetFilePointer">
            <summary>设置 RAMOutputStream.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.Length">
            <summary>设置 RAMOutputStream.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.Reset">
            <summary>设置 RAMOutputStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.SeekInt64">
            <summary>设置 RAMOutputStream.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.SetFileLength">
            <summary>设置 RAMOutputStream.SetFileLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.SizeInBytes">
            <summary>设置 RAMOutputStream.SizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.SwitchCurrentBuffer">
            <summary>设置 RAMOutputStream.SwitchCurrentBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.WriteByteByte">
            <summary>设置 RAMOutputStream.WriteByte(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.WriteBytesByteArrayInt32Int32">
            <summary>设置 RAMOutputStream.WriteBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.WriteToIndexOutput">
            <summary>设置 RAMOutputStream.WriteTo(IndexOutput out_Renamed) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.Close">
            <summary>设置 RAMOutputStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.Flush">
            <summary>设置 RAMOutputStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.GetFilePointer">
            <summary>设置 RAMOutputStream.GetFilePointer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.Length">
            <summary>设置 RAMOutputStream.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.Reset">
            <summary>设置 RAMOutputStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.SeekInt64">
            <summary>设置 RAMOutputStream.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.SetFileLength">
            <summary>设置 RAMOutputStream.SetFileLength() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.SizeInBytes">
            <summary>设置 RAMOutputStream.SizeInBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.SwitchCurrentBuffer">
            <summary>设置 RAMOutputStream.SwitchCurrentBuffer() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.WriteByteByte">
            <summary>设置 RAMOutputStream.WriteByte(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.WriteBytesByteArrayInt32Int32">
            <summary>设置 RAMOutputStream.WriteBytes(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimRAMOutputStream.AllInstances.WriteToIndexOutput">
            <summary>设置 RAMOutputStream.WriteTo(IndexOutput out_Renamed) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory">
            <summary>Lucene.Net.Store.SimpleFSDirectory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.#ctor(Lucene.Net.Store.SimpleFSDirectory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.Constructor">
            <summary>设置 SimpleFSDirectory.SimpleFSDirectory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ConstructorDirectoryInfo">
            <summary>设置 SimpleFSDirectory.SimpleFSDirectory(DirectoryInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ConstructorDirectoryInfoLockFactory">
            <summary>设置 SimpleFSDirectory.SimpleFSDirectory(DirectoryInfo path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ConstructorFileInfo">
            <summary>设置 SimpleFSDirectory.SimpleFSDirectory(FileInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ConstructorFileInfoLockFactory">
            <summary>设置 SimpleFSDirectory.SimpleFSDirectory(FileInfo path, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.CreateOutputString">
            <summary>设置 SimpleFSDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.OpenInputStringInt32">
            <summary>设置 SimpleFSDirectory.OpenInput(String name, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.AllInstances.CreateOutputString">
            <summary>设置 SimpleFSDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.AllInstances.OpenInputStringInt32">
            <summary>设置 SimpleFSDirectory.OpenInput(String name, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput">
            <summary>Lucene.Net.Store.SimpleFSDirectory+SimpleFSIndexInput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.#ctor(Lucene.Net.Store.SimpleFSDirectory.SimpleFSIndexInput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.Clone">
            <summary>设置 SimpleFSIndexInput.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.Close">
            <summary>设置 SimpleFSIndexInput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.ConstructorFileInfo">
            <summary>设置 SimpleFSIndexInput.SimpleFSIndexInput(FileInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.ConstructorFileInfoInt32">
            <summary>设置 SimpleFSIndexInput.SimpleFSIndexInput(FileInfo path, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.ConstructorFileInfoInt32Int32">
            <summary>设置 SimpleFSIndexInput.SimpleFSIndexInput(FileInfo path, Int32 bufferSize, Int32 chunkSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.IsFDValid">
            <summary>设置 SimpleFSIndexInput.IsFDValid() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.Length">
            <summary>设置 SimpleFSIndexInput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.ReadInternalByteArrayInt32Int32">
            <summary>设置 SimpleFSIndexInput.ReadInternal(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.SeekInternalInt64">
            <summary>设置 SimpleFSIndexInput.SeekInternal(Int64 position) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.isClone_ForNUnitGet">
            <summary>设置 SimpleFSIndexInput.get_isClone_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.AllInstances.Clone">
            <summary>设置 SimpleFSIndexInput.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.AllInstances.Close">
            <summary>设置 SimpleFSIndexInput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.AllInstances.IsFDValid">
            <summary>设置 SimpleFSIndexInput.IsFDValid() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.AllInstances.Length">
            <summary>设置 SimpleFSIndexInput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.AllInstances.ReadInternalByteArrayInt32Int32">
            <summary>设置 SimpleFSIndexInput.ReadInternal(Byte[] b, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.AllInstances.SeekInternalInt64">
            <summary>设置 SimpleFSIndexInput.SeekInternal(Int64 position) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexInput.AllInstances.isClone_ForNUnitGet">
            <summary>设置 SimpleFSIndexInput.get_isClone_ForNUnit() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput">
            <summary>Lucene.Net.Store.SimpleFSDirectory+SimpleFSIndexOutput 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.#ctor(Lucene.Net.Store.SimpleFSDirectory.SimpleFSIndexOutput)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.Close">
            <summary>设置 SimpleFSIndexOutput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.ConstructorFileInfo">
            <summary>设置 SimpleFSIndexOutput.SimpleFSIndexOutput(FileInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.FlushBufferByteArrayInt32Int32">
            <summary>设置 SimpleFSIndexOutput.FlushBuffer(Byte[] b, Int32 offset, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.Length">
            <summary>设置 SimpleFSIndexOutput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.SeekInt64">
            <summary>设置 SimpleFSIndexOutput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.SetLengthInt64">
            <summary>设置 SimpleFSIndexOutput.SetLength(Int64 length) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.AllInstances.Close">
            <summary>设置 SimpleFSIndexOutput.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.AllInstances.FlushBufferByteArrayInt32Int32">
            <summary>设置 SimpleFSIndexOutput.FlushBuffer(Byte[] b, Int32 offset, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.AllInstances.Length">
            <summary>设置 SimpleFSIndexOutput.Length() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.AllInstances.SeekInt64">
            <summary>设置 SimpleFSIndexOutput.Seek(Int64 pos) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSDirectory.ShimSimpleFSIndexOutput.AllInstances.SetLengthInt64">
            <summary>设置 SimpleFSIndexOutput.SetLength(Int64 length) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory">
            <summary>Lucene.Net.Store.SimpleFSLockFactory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.#ctor(Lucene.Net.Store.SimpleFSLockFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.ClearLockString">
            <summary>设置 SimpleFSLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.Constructor">
            <summary>设置 SimpleFSLockFactory.SimpleFSLockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.ConstructorDirectoryInfo">
            <summary>设置 SimpleFSLockFactory.SimpleFSLockFactory(DirectoryInfo lockDir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.ConstructorFileInfo">
            <summary>设置 SimpleFSLockFactory.SimpleFSLockFactory(FileInfo lockDir) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.ConstructorString">
            <summary>设置 SimpleFSLockFactory.SimpleFSLockFactory(String lockDirName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.MakeLockString">
            <summary>设置 SimpleFSLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.AllInstances.ClearLockString">
            <summary>设置 SimpleFSLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSimpleFSLockFactory.AllInstances.MakeLockString">
            <summary>设置 SimpleFSLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory">
            <summary>Lucene.Net.Store.SingleInstanceLockFactory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.#ctor(Lucene.Net.Store.SingleInstanceLockFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.ClearLockString">
            <summary>设置 SingleInstanceLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.Constructor">
            <summary>设置 SingleInstanceLockFactory.SingleInstanceLockFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.MakeLockString">
            <summary>设置 SingleInstanceLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.AllInstances.ClearLockString">
            <summary>设置 SingleInstanceLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimSingleInstanceLockFactory.AllInstances.MakeLockString">
            <summary>设置 SingleInstanceLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory">
            <summary>Lucene.Net.Store.VerifyingLockFactory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.#ctor(Lucene.Net.Store.VerifyingLockFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.ClearLockString">
            <summary>设置 VerifyingLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.ConstructorSByteLockFactoryStringInt32">
            <summary>设置 VerifyingLockFactory.VerifyingLockFactory(SByte id, LockFactory lf, String host, Int32 port) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.MakeLockString">
            <summary>设置 VerifyingLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.AllInstances.ClearLockString">
            <summary>设置 VerifyingLockFactory.ClearLock(String lockName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.ShimVerifyingLockFactory.AllInstances.MakeLockString">
            <summary>设置 VerifyingLockFactory.MakeLock(String lockName) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubAlreadyClosedException">
            <summary>Lucene.Net.Store.AlreadyClosedException 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubAlreadyClosedException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubAlreadyClosedException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.InitializeStub">
            <summary>初始化 type StubAlreadyClosedException 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubAlreadyClosedException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubAlreadyClosedException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubAlreadyClosedException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubAlreadyClosedException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubAlreadyClosedException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubAlreadyClosedException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubAlreadyClosedException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubAlreadyClosedException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubAlreadyClosedException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubAlreadyClosedException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubBufferedIndexInput">
            <summary>Lucene.Net.Store.BufferedIndexInput 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.Clone">
            <summary>设置 BufferedIndexInput.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.Clone01">
            <summary>设置 BufferedIndexInput.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.Close">
            <summary>设置 IndexInput.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.Close01">
            <summary>设置 IndexInput.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.GetBufferSize">
            <summary>设置 BufferedIndexInput.GetBufferSize() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.GetBufferSize01">
            <summary>设置 BufferedIndexInput.GetBufferSize() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.GetFilePointer">
            <summary>设置 BufferedIndexInput.GetFilePointer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.GetFilePointer01">
            <summary>设置 BufferedIndexInput.GetFilePointer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.InitializeStub">
            <summary>初始化 type StubBufferedIndexInput 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.Length">
            <summary>设置 IndexInput.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.Length01">
            <summary>设置 IndexInput.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.NewBuffer(System.Byte[])">
            <summary>设置 BufferedIndexInput.NewBuffer(Byte[] newBuffer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.NewBufferByteArray">
            <summary>设置 BufferedIndexInput.NewBuffer(Byte[] newBuffer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadByte">
            <summary>设置 BufferedIndexInput.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadByte01">
            <summary>设置 BufferedIndexInput.ReadByte() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BufferedIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadBytes(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>设置 BufferedIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadBytesByteArrayInt32Int32">
            <summary>设置 BufferedIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadBytesByteArrayInt32Int32Boolean">
            <summary>设置 BufferedIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadCharsCharArrayInt32Int32">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadInt">
            <summary>设置 IndexInput.ReadInt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadInt01">
            <summary>设置 IndexInput.ReadInt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadInternal(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BufferedIndexInput.ReadInternal(Byte[] b, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadInternalByteArrayInt32Int32">
            <summary>设置 BufferedIndexInput.ReadInternal(Byte[] b, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadLong">
            <summary>设置 IndexInput.ReadLong() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadLong01">
            <summary>设置 IndexInput.ReadLong() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadString">
            <summary>设置 IndexInput.ReadString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadString01">
            <summary>设置 IndexInput.ReadString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadStringStringMap">
            <summary>设置 IndexInput.ReadStringStringMap() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadStringStringMap01">
            <summary>设置 IndexInput.ReadStringStringMap() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadVInt">
            <summary>设置 IndexInput.ReadVInt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadVInt01">
            <summary>设置 IndexInput.ReadVInt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadVLong">
            <summary>设置 IndexInput.ReadVLong() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.ReadVLong01">
            <summary>设置 IndexInput.ReadVLong() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.Seek(System.Int64)">
            <summary>设置 BufferedIndexInput.Seek(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SeekInt64">
            <summary>设置 BufferedIndexInput.Seek(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SeekInternal(System.Int64)">
            <summary>设置 BufferedIndexInput.SeekInternal(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SeekInternalInt64">
            <summary>设置 BufferedIndexInput.SeekInternal(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SetBufferSize(System.Int32)">
            <summary>设置 BufferedIndexInput.SetBufferSize(Int32 newSize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SetBufferSizeInt32">
            <summary>设置 BufferedIndexInput.SetBufferSize(Int32 newSize) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SetModifiedUTF8StringsMode">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SetModifiedUTF8StringsMode01">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SkipChars(System.Int32)">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexInput.SkipCharsInt32">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubBufferedIndexInput.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubBufferedIndexInput.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubBufferedIndexInput.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubBufferedIndexOutput">
            <summary>Lucene.Net.Store.BufferedIndexOutput 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.Close">
            <summary>设置 BufferedIndexOutput.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.Close01">
            <summary>设置 BufferedIndexOutput.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.CopyBytes(Lucene.Net.Store.IndexInput,System.Int64)">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.CopyBytesIndexInputInt64">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.Flush">
            <summary>设置 BufferedIndexOutput.Flush() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.Flush01">
            <summary>设置 BufferedIndexOutput.Flush() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.FlushBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BufferedIndexOutput.FlushBuffer(Byte[] b, Int32 offset, Int32 len) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.FlushBufferByteArrayInt32Int32">
            <summary>设置 BufferedIndexOutput.FlushBuffer(Byte[] b, Int32 offset, Int32 len) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.GetFilePointer">
            <summary>设置 BufferedIndexOutput.GetFilePointer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.GetFilePointer01">
            <summary>设置 BufferedIndexOutput.GetFilePointer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.InitializeStub">
            <summary>初始化 type StubBufferedIndexOutput 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.Length">
            <summary>设置 BufferedIndexOutput.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.Length01">
            <summary>设置 BufferedIndexOutput.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.Seek(System.Int64)">
            <summary>设置 BufferedIndexOutput.Seek(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.SeekInt64">
            <summary>设置 BufferedIndexOutput.Seek(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.SetLength(System.Int64)">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.SetLengthInt64">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteByte(System.Byte)">
            <summary>设置 BufferedIndexOutput.WriteByte(Byte b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteByteByte">
            <summary>设置 BufferedIndexOutput.WriteByte(Byte b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteBytes(System.Byte[],System.Int32)">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 BufferedIndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteBytesByteArrayInt32">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteBytesByteArrayInt32Int32">
            <summary>设置 BufferedIndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteChars(System.String,System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteCharsCharArrayInt32Int32">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteCharsStringInt32Int32">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteInt(System.Int32)">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteIntInt32">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteLong(System.Int64)">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteLongInt64">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteString(System.String)">
            <summary>设置 IndexOutput.WriteString(String s) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteStringString">
            <summary>设置 IndexOutput.WriteString(String s) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteStringStringMap(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteStringStringMapIDictionaryOfStringString">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteVInt(System.Int32)">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteVIntInt32">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteVLong(System.Int64)">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.WriteVLongInt64">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubBufferedIndexOutput.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubChecksumIndexInput">
            <summary>Lucene.Net.Store.ChecksumIndexInput 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.#ctor(Lucene.Net.Store.IndexInput)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.Clone">
            <summary>设置 IndexInput.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.Clone01">
            <summary>设置 IndexInput.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.Close">
            <summary>设置 ChecksumIndexInput.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.Close01">
            <summary>设置 ChecksumIndexInput.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.GetChecksum">
            <summary>设置 ChecksumIndexInput.GetChecksum() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.GetChecksum01">
            <summary>设置 ChecksumIndexInput.GetChecksum() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.GetFilePointer">
            <summary>设置 ChecksumIndexInput.GetFilePointer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.GetFilePointer01">
            <summary>设置 ChecksumIndexInput.GetFilePointer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.InitializeStub">
            <summary>初始化 type StubChecksumIndexInput 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.Length">
            <summary>设置 ChecksumIndexInput.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.Length01">
            <summary>设置 ChecksumIndexInput.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadByte">
            <summary>设置 ChecksumIndexInput.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadByte01">
            <summary>设置 ChecksumIndexInput.ReadByte() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 ChecksumIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadBytes(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadBytesByteArrayInt32Int32">
            <summary>设置 ChecksumIndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadBytesByteArrayInt32Int32Boolean">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadCharsCharArrayInt32Int32">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadInt">
            <summary>设置 IndexInput.ReadInt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadInt01">
            <summary>设置 IndexInput.ReadInt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadLong">
            <summary>设置 IndexInput.ReadLong() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadLong01">
            <summary>设置 IndexInput.ReadLong() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadString">
            <summary>设置 IndexInput.ReadString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadString01">
            <summary>设置 IndexInput.ReadString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadStringStringMap">
            <summary>设置 IndexInput.ReadStringStringMap() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadStringStringMap01">
            <summary>设置 IndexInput.ReadStringStringMap() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadVInt">
            <summary>设置 IndexInput.ReadVInt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadVInt01">
            <summary>设置 IndexInput.ReadVInt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadVLong">
            <summary>设置 IndexInput.ReadVLong() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.ReadVLong01">
            <summary>设置 IndexInput.ReadVLong() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.Seek(System.Int64)">
            <summary>设置 ChecksumIndexInput.Seek(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.SeekInt64">
            <summary>设置 ChecksumIndexInput.Seek(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.SetModifiedUTF8StringsMode">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.SetModifiedUTF8StringsMode01">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexInput.SkipChars(System.Int32)">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexInput.SkipCharsInt32">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubChecksumIndexInput.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubChecksumIndexInput.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubChecksumIndexInput.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubChecksumIndexOutput">
            <summary>Lucene.Net.Store.ChecksumIndexOutput 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.#ctor(Lucene.Net.Store.IndexOutput)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.Close">
            <summary>设置 ChecksumIndexOutput.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.Close01">
            <summary>设置 ChecksumIndexOutput.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.CopyBytes(Lucene.Net.Store.IndexInput,System.Int64)">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.CopyBytesIndexInputInt64">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.FinishCommit">
            <summary>设置 ChecksumIndexOutput.FinishCommit() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.FinishCommit01">
            <summary>设置 ChecksumIndexOutput.FinishCommit() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.Flush">
            <summary>设置 ChecksumIndexOutput.Flush() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.Flush01">
            <summary>设置 ChecksumIndexOutput.Flush() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.GetChecksum">
            <summary>设置 ChecksumIndexOutput.GetChecksum() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.GetChecksum01">
            <summary>设置 ChecksumIndexOutput.GetChecksum() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.GetFilePointer">
            <summary>设置 ChecksumIndexOutput.GetFilePointer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.GetFilePointer01">
            <summary>设置 ChecksumIndexOutput.GetFilePointer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.InitializeStub">
            <summary>初始化 type StubChecksumIndexOutput 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.Length">
            <summary>设置 ChecksumIndexOutput.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.Length01">
            <summary>设置 ChecksumIndexOutput.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.PrepareCommit">
            <summary>设置 ChecksumIndexOutput.PrepareCommit() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.PrepareCommit01">
            <summary>设置 ChecksumIndexOutput.PrepareCommit() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.Seek(System.Int64)">
            <summary>设置 ChecksumIndexOutput.Seek(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.SeekInt64">
            <summary>设置 ChecksumIndexOutput.Seek(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.SetLength(System.Int64)">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.SetLengthInt64">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteByte(System.Byte)">
            <summary>设置 ChecksumIndexOutput.WriteByte(Byte b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteByteByte">
            <summary>设置 ChecksumIndexOutput.WriteByte(Byte b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteBytes(System.Byte[],System.Int32)">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 ChecksumIndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteBytesByteArrayInt32">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteBytesByteArrayInt32Int32">
            <summary>设置 ChecksumIndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteChars(System.String,System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteCharsCharArrayInt32Int32">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteCharsStringInt32Int32">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteInt(System.Int32)">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteIntInt32">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteLong(System.Int64)">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteLongInt64">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteString(System.String)">
            <summary>设置 IndexOutput.WriteString(String s) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteStringString">
            <summary>设置 IndexOutput.WriteString(String s) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteStringStringMap(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteStringStringMapIDictionaryOfStringString">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteVInt(System.Int32)">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteVIntInt32">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteVLong(System.Int64)">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.WriteVLongInt64">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubChecksumIndexOutput.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubDirectory">
            <summary>Lucene.Net.Store.Directory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.ClearLock(System.String)">
            <summary>设置 Directory.ClearLock(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.ClearLockString">
            <summary>设置 Directory.ClearLock(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.Close">
            <summary>设置 Directory.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.Close01">
            <summary>设置 Directory.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.CreateOutput(System.String)">
            <summary>设置 Directory.CreateOutput(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.CreateOutputString">
            <summary>设置 Directory.CreateOutput(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.DeleteFile(System.String)">
            <summary>设置 Directory.DeleteFile(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.DeleteFileString">
            <summary>设置 Directory.DeleteFile(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.Dispose">
            <summary>设置 Directory.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.Dispose01">
            <summary>设置 Directory.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.FileExists(System.String)">
            <summary>设置 Directory.FileExists(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.FileExistsString">
            <summary>设置 Directory.FileExists(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.FileLength(System.String)">
            <summary>设置 Directory.FileLength(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.FileLengthString">
            <summary>设置 Directory.FileLength(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.FileModified(System.String)">
            <summary>设置 Directory.FileModified(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.FileModifiedString">
            <summary>设置 Directory.FileModified(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.GetLockFactory">
            <summary>设置 Directory.GetLockFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.GetLockFactory01">
            <summary>设置 Directory.GetLockFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.GetLockID">
            <summary>设置 Directory.GetLockID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.GetLockID01">
            <summary>设置 Directory.GetLockID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.InitializeStub">
            <summary>初始化 type StubDirectory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.List">
            <summary>设置 Directory.List() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.List01">
            <summary>设置 Directory.List() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.ListAll">
            <summary>设置 Directory.ListAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.ListAll01">
            <summary>设置 Directory.ListAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.MakeLock(System.String)">
            <summary>设置 Directory.MakeLock(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.MakeLockString">
            <summary>设置 Directory.MakeLock(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.OpenInput(System.String)">
            <summary>设置 Directory.OpenInput(String name) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.OpenInput(System.String,System.Int32)">
            <summary>设置 Directory.OpenInput(String name, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.OpenInputString">
            <summary>设置 Directory.OpenInput(String name) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.OpenInputStringInt32">
            <summary>设置 Directory.OpenInput(String name, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.RenameFile(System.String,System.String)">
            <summary>设置 Directory.RenameFile(String from, String to) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.RenameFileStringString">
            <summary>设置 Directory.RenameFile(String from, String to) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.SetLockFactory(Lucene.Net.Store.LockFactory)">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.SetLockFactoryLockFactory">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.Sync(System.String)">
            <summary>设置 Directory.Sync(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.SyncString">
            <summary>设置 Directory.Sync(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.ToString">
            <summary>设置 Directory.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.ToString01">
            <summary>设置 Directory.ToString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubDirectory.TouchFile(System.String)">
            <summary>设置 Directory.TouchFile(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubDirectory.TouchFileString">
            <summary>设置 Directory.TouchFile(String name) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubDirectory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubDirectory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubDirectory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubFSLockFactory">
            <summary>Lucene.Net.Store.FSLockFactory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFSLockFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFSLockFactory.ClearLock(System.String)">
            <summary>设置 LockFactory.ClearLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFSLockFactory.ClearLockString">
            <summary>设置 LockFactory.ClearLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFSLockFactory.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFSLockFactory.GetLockPrefix01">
            <summary>设置 LockFactory.GetLockPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFSLockFactory.InitializeStub">
            <summary>初始化 type StubFSLockFactory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFSLockFactory.MakeLock(System.String)">
            <summary>设置 LockFactory.MakeLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFSLockFactory.MakeLockString">
            <summary>设置 LockFactory.MakeLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFSLockFactory.SetLockPrefix(System.String)">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFSLockFactory.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubFSLockFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubFSLockFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubFSLockFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubFileSwitchDirectory">
            <summary>Lucene.Net.Store.FileSwitchDirectory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.#ctor(System.Collections.Generic.IList{System.String},Lucene.Net.Store.Directory,Lucene.Net.Store.Directory,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.ClearLock(System.String)">
            <summary>设置 Directory.ClearLock(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.ClearLockString">
            <summary>设置 Directory.ClearLock(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.Close">
            <summary>设置 FileSwitchDirectory.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.Close01">
            <summary>设置 FileSwitchDirectory.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.CreateOutput(System.String)">
            <summary>设置 FileSwitchDirectory.CreateOutput(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.CreateOutputString">
            <summary>设置 FileSwitchDirectory.CreateOutput(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.DeleteFile(System.String)">
            <summary>设置 FileSwitchDirectory.DeleteFile(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.DeleteFileString">
            <summary>设置 FileSwitchDirectory.DeleteFile(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.Dispose">
            <summary>设置 FileSwitchDirectory.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.Dispose01">
            <summary>设置 FileSwitchDirectory.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.FileExists(System.String)">
            <summary>设置 FileSwitchDirectory.FileExists(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.FileExistsString">
            <summary>设置 FileSwitchDirectory.FileExists(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.FileLength(System.String)">
            <summary>设置 FileSwitchDirectory.FileLength(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.FileLengthString">
            <summary>设置 FileSwitchDirectory.FileLength(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.FileModified(System.String)">
            <summary>设置 FileSwitchDirectory.FileModified(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.FileModifiedString">
            <summary>设置 FileSwitchDirectory.FileModified(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.GetLockFactory">
            <summary>设置 Directory.GetLockFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.GetLockFactory01">
            <summary>设置 Directory.GetLockFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.GetLockID">
            <summary>设置 Directory.GetLockID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.GetLockID01">
            <summary>设置 Directory.GetLockID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.GetPrimaryDir">
            <summary>设置 FileSwitchDirectory.GetPrimaryDir() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.GetPrimaryDir01">
            <summary>设置 FileSwitchDirectory.GetPrimaryDir() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.GetSecondaryDir">
            <summary>设置 FileSwitchDirectory.GetSecondaryDir() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.GetSecondaryDir01">
            <summary>设置 FileSwitchDirectory.GetSecondaryDir() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.InitializeStub">
            <summary>初始化 type StubFileSwitchDirectory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.List">
            <summary>设置 FileSwitchDirectory.List() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.List01">
            <summary>设置 FileSwitchDirectory.List() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.ListAll">
            <summary>设置 FileSwitchDirectory.ListAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.ListAll01">
            <summary>设置 FileSwitchDirectory.ListAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.MakeLock(System.String)">
            <summary>设置 Directory.MakeLock(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.MakeLockString">
            <summary>设置 Directory.MakeLock(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.OpenInput(System.String)">
            <summary>设置 FileSwitchDirectory.OpenInput(String name) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.OpenInput(System.String,System.Int32)">
            <summary>设置 Directory.OpenInput(String name, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.OpenInputString">
            <summary>设置 FileSwitchDirectory.OpenInput(String name) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.OpenInputStringInt32">
            <summary>设置 Directory.OpenInput(String name, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.RenameFile(System.String,System.String)">
            <summary>设置 FileSwitchDirectory.RenameFile(String from, String to) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.RenameFileStringString">
            <summary>设置 FileSwitchDirectory.RenameFile(String from, String to) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.SetLockFactory(Lucene.Net.Store.LockFactory)">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.SetLockFactoryLockFactory">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.Sync(System.String)">
            <summary>设置 FileSwitchDirectory.Sync(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.SyncString">
            <summary>设置 FileSwitchDirectory.Sync(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.ToString">
            <summary>设置 Directory.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.ToString01">
            <summary>设置 Directory.ToString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.TouchFile(System.String)">
            <summary>设置 FileSwitchDirectory.TouchFile(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.TouchFileString">
            <summary>设置 FileSwitchDirectory.TouchFile(String name) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubFileSwitchDirectory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubIndexInput">
            <summary>Lucene.Net.Store.IndexInput 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.Clone">
            <summary>设置 IndexInput.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.Clone01">
            <summary>设置 IndexInput.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.Close">
            <summary>设置 IndexInput.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.Close01">
            <summary>设置 IndexInput.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.GetFilePointer">
            <summary>设置 IndexInput.GetFilePointer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.GetFilePointer01">
            <summary>设置 IndexInput.GetFilePointer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.InitializeStub">
            <summary>初始化 type StubIndexInput 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.Length">
            <summary>设置 IndexInput.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.Length01">
            <summary>设置 IndexInput.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadByte">
            <summary>设置 IndexInput.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadByte01">
            <summary>设置 IndexInput.ReadByte() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadBytes(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadBytesByteArrayInt32Int32">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadBytesByteArrayInt32Int32Boolean">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadCharsCharArrayInt32Int32">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadInt">
            <summary>设置 IndexInput.ReadInt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadInt01">
            <summary>设置 IndexInput.ReadInt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadLong">
            <summary>设置 IndexInput.ReadLong() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadLong01">
            <summary>设置 IndexInput.ReadLong() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadString">
            <summary>设置 IndexInput.ReadString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadString01">
            <summary>设置 IndexInput.ReadString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadStringStringMap">
            <summary>设置 IndexInput.ReadStringStringMap() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadStringStringMap01">
            <summary>设置 IndexInput.ReadStringStringMap() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadVInt">
            <summary>设置 IndexInput.ReadVInt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadVInt01">
            <summary>设置 IndexInput.ReadVInt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.ReadVLong">
            <summary>设置 IndexInput.ReadVLong() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.ReadVLong01">
            <summary>设置 IndexInput.ReadVLong() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.Seek(System.Int64)">
            <summary>设置 IndexInput.Seek(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.SeekInt64">
            <summary>设置 IndexInput.Seek(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.SetModifiedUTF8StringsMode">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.SetModifiedUTF8StringsMode01">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexInput.SkipChars(System.Int32)">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexInput.SkipCharsInt32">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubIndexInput.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubIndexInput.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubIndexInput.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubIndexOutput">
            <summary>Lucene.Net.Store.IndexOutput 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.Close">
            <summary>设置 IndexOutput.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.Close01">
            <summary>设置 IndexOutput.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.CopyBytes(Lucene.Net.Store.IndexInput,System.Int64)">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.CopyBytesIndexInputInt64">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.Flush">
            <summary>设置 IndexOutput.Flush() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.Flush01">
            <summary>设置 IndexOutput.Flush() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.GetFilePointer">
            <summary>设置 IndexOutput.GetFilePointer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.GetFilePointer01">
            <summary>设置 IndexOutput.GetFilePointer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.InitializeStub">
            <summary>初始化 type StubIndexOutput 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.Length">
            <summary>设置 IndexOutput.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.Length01">
            <summary>设置 IndexOutput.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.Seek(System.Int64)">
            <summary>设置 IndexOutput.Seek(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.SeekInt64">
            <summary>设置 IndexOutput.Seek(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.SetLength(System.Int64)">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.SetLengthInt64">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteByte(System.Byte)">
            <summary>设置 IndexOutput.WriteByte(Byte b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteByteByte">
            <summary>设置 IndexOutput.WriteByte(Byte b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteBytes(System.Byte[],System.Int32)">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteBytesByteArrayInt32">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteBytesByteArrayInt32Int32">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteChars(System.String,System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteCharsCharArrayInt32Int32">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteCharsStringInt32Int32">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteInt(System.Int32)">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteIntInt32">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteLong(System.Int64)">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteLongInt64">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteString(System.String)">
            <summary>设置 IndexOutput.WriteString(String s) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteStringString">
            <summary>设置 IndexOutput.WriteString(String s) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteStringStringMap(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteStringStringMapIDictionaryOfStringString">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteVInt(System.Int32)">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteVIntInt32">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubIndexOutput.WriteVLong(System.Int64)">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubIndexOutput.WriteVLongInt64">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubIndexOutput.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubIndexOutput.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubIndexOutput.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubLock">
            <summary>Lucene.Net.Store.Lock 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLock.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLock.InitializeStub">
            <summary>初始化 type StubLock 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLock.IsLocked">
            <summary>设置 Lock.IsLocked() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubLock.IsLocked01">
            <summary>设置 Lock.IsLocked() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLock.Obtain">
            <summary>设置 Lock.Obtain() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLock.Obtain(System.Int64)">
            <summary>设置 Lock.Obtain(Int64 lockWaitTimeout) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubLock.Obtain01">
            <summary>设置 Lock.Obtain() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubLock.ObtainInt64">
            <summary>设置 Lock.Obtain(Int64 lockWaitTimeout) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLock.Release">
            <summary>设置 Lock.Release() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubLock.Release01">
            <summary>设置 Lock.Release() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLock.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLock.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLock.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubLockFactory">
            <summary>Lucene.Net.Store.LockFactory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockFactory.ClearLock(System.String)">
            <summary>设置 LockFactory.ClearLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubLockFactory.ClearLockString">
            <summary>设置 LockFactory.ClearLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockFactory.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubLockFactory.GetLockPrefix01">
            <summary>设置 LockFactory.GetLockPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockFactory.InitializeStub">
            <summary>初始化 type StubLockFactory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockFactory.MakeLock(System.String)">
            <summary>设置 LockFactory.MakeLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubLockFactory.MakeLockString">
            <summary>设置 LockFactory.MakeLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockFactory.SetLockPrefix(System.String)">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubLockFactory.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubLockStressTest">
            <summary>Lucene.Net.Store.LockStressTest 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockStressTest.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockStressTest.InitializeStub">
            <summary>初始化 type StubLockStressTest 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockStressTest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockStressTest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockStressTest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubLockVerifyServer">
            <summary>Lucene.Net.Store.LockVerifyServer 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockVerifyServer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubLockVerifyServer.InitializeStub">
            <summary>初始化 type StubLockVerifyServer 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockVerifyServer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockVerifyServer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubLockVerifyServer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubNativeFSLockFactory">
            <summary>Lucene.Net.Store.NativeFSLockFactory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.#ctor(System.IO.DirectoryInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.#ctor(System.IO.FileInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.ClearLock(System.String)">
            <summary>设置 NativeFSLockFactory.ClearLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.ClearLockString">
            <summary>设置 NativeFSLockFactory.ClearLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.GetLockPrefix01">
            <summary>设置 LockFactory.GetLockPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.InitializeStub">
            <summary>初始化 type StubNativeFSLockFactory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.MakeLock(System.String)">
            <summary>设置 NativeFSLockFactory.MakeLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.MakeLockString">
            <summary>设置 NativeFSLockFactory.MakeLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.SetLockPrefix(System.String)">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubNativeFSLockFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubNoLockFactory">
            <summary>Lucene.Net.Store.NoLockFactory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNoLockFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNoLockFactory.ClearLock(System.String)">
            <summary>设置 NoLockFactory.ClearLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubNoLockFactory.ClearLockString">
            <summary>设置 NoLockFactory.ClearLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNoLockFactory.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubNoLockFactory.GetLockPrefix01">
            <summary>设置 LockFactory.GetLockPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNoLockFactory.InitializeStub">
            <summary>初始化 type StubNoLockFactory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNoLockFactory.MakeLock(System.String)">
            <summary>设置 NoLockFactory.MakeLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubNoLockFactory.MakeLockString">
            <summary>设置 NoLockFactory.MakeLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubNoLockFactory.SetLockPrefix(System.String)">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubNoLockFactory.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubNoLockFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubNoLockFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubNoLockFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubRAMDirectory">
            <summary>Lucene.Net.Store.RAMDirectory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.#ctor(Lucene.Net.Store.Directory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.#ctor(System.IO.FileInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.ClearLock(System.String)">
            <summary>设置 Directory.ClearLock(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.ClearLockString">
            <summary>设置 Directory.ClearLock(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.Close">
            <summary>设置 RAMDirectory.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.Close01">
            <summary>设置 RAMDirectory.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.CreateOutput(System.String)">
            <summary>设置 RAMDirectory.CreateOutput(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.CreateOutputString">
            <summary>设置 RAMDirectory.CreateOutput(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.DeleteFile(System.String)">
            <summary>设置 RAMDirectory.DeleteFile(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.DeleteFileString">
            <summary>设置 RAMDirectory.DeleteFile(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.Dispose">
            <summary>设置 RAMDirectory.Dispose() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.Dispose01">
            <summary>设置 RAMDirectory.Dispose() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.FileExists(System.String)">
            <summary>设置 RAMDirectory.FileExists(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.FileExistsString">
            <summary>设置 RAMDirectory.FileExists(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.FileLength(System.String)">
            <summary>设置 RAMDirectory.FileLength(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.FileLengthString">
            <summary>设置 RAMDirectory.FileLength(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.FileModified(System.String)">
            <summary>设置 RAMDirectory.FileModified(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.FileModifiedString">
            <summary>设置 RAMDirectory.FileModified(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.GetLockFactory">
            <summary>设置 Directory.GetLockFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.GetLockFactory01">
            <summary>设置 Directory.GetLockFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.GetLockID">
            <summary>设置 Directory.GetLockID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.GetLockID01">
            <summary>设置 Directory.GetLockID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.InitializeStub">
            <summary>初始化 type StubRAMDirectory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.List">
            <summary>设置 RAMDirectory.List() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.List01">
            <summary>设置 RAMDirectory.List() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.ListAll">
            <summary>设置 RAMDirectory.ListAll() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.ListAll01">
            <summary>设置 RAMDirectory.ListAll() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.MakeLock(System.String)">
            <summary>设置 Directory.MakeLock(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.MakeLockString">
            <summary>设置 Directory.MakeLock(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.OpenInput(System.String)">
            <summary>设置 RAMDirectory.OpenInput(String name) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.OpenInput(System.String,System.Int32)">
            <summary>设置 Directory.OpenInput(String name, Int32 bufferSize) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.OpenInputString">
            <summary>设置 RAMDirectory.OpenInput(String name) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.OpenInputStringInt32">
            <summary>设置 Directory.OpenInput(String name, Int32 bufferSize) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.RenameFile(System.String,System.String)">
            <summary>设置 RAMDirectory.RenameFile(String from, String to) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.RenameFileStringString">
            <summary>设置 RAMDirectory.RenameFile(String from, String to) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.SetLockFactory(Lucene.Net.Store.LockFactory)">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.SetLockFactoryLockFactory">
            <summary>设置 Directory.SetLockFactory(LockFactory lockFactory) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.Sync(System.String)">
            <summary>设置 Directory.Sync(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.SyncString">
            <summary>设置 Directory.Sync(String name) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.ToString">
            <summary>设置 Directory.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.ToString01">
            <summary>设置 Directory.ToString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMDirectory.TouchFile(System.String)">
            <summary>设置 RAMDirectory.TouchFile(String name) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMDirectory.TouchFileString">
            <summary>设置 RAMDirectory.TouchFile(String name) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMDirectory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMDirectory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMDirectory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubRAMFile">
            <summary>Lucene.Net.Store.RAMFile 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMFile.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMFile.#ctor(Lucene.Net.Store.RAMDirectory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMFile.GetLength">
            <summary>设置 RAMFile.GetLength() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMFile.GetLength01">
            <summary>设置 RAMFile.GetLength() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMFile.GetSizeInBytes">
            <summary>设置 RAMFile.GetSizeInBytes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMFile.GetSizeInBytes01">
            <summary>设置 RAMFile.GetSizeInBytes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMFile.InitializeStub">
            <summary>初始化 type StubRAMFile 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMFile.NewBuffer(System.Int32)">
            <summary>设置 RAMFile.NewBuffer(Int32 size) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMFile.NewBufferInt32">
            <summary>设置 RAMFile.NewBuffer(Int32 size) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMFile.SetLength(System.Int64)">
            <summary>设置 RAMFile.SetLength(Int64 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMFile.SetLengthInt64">
            <summary>设置 RAMFile.SetLength(Int64 length) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMFile.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMFile.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMFile.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubRAMInputStream">
            <summary>Lucene.Net.Store.RAMInputStream 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.#ctor(Lucene.Net.Store.RAMFile)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.Clone">
            <summary>设置 IndexInput.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.Clone01">
            <summary>设置 IndexInput.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.Close">
            <summary>设置 RAMInputStream.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.Close01">
            <summary>设置 RAMInputStream.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.GetFilePointer">
            <summary>设置 RAMInputStream.GetFilePointer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.GetFilePointer01">
            <summary>设置 RAMInputStream.GetFilePointer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.InitializeStub">
            <summary>初始化 type StubRAMInputStream 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.Length">
            <summary>设置 RAMInputStream.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.Length01">
            <summary>设置 RAMInputStream.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadByte">
            <summary>设置 RAMInputStream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadByte01">
            <summary>设置 RAMInputStream.ReadByte() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 RAMInputStream.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadBytes(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadBytesByteArrayInt32Int32">
            <summary>设置 RAMInputStream.ReadBytes(Byte[] b, Int32 offset, Int32 len) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadBytesByteArrayInt32Int32Boolean">
            <summary>设置 IndexInput.ReadBytes(Byte[] b, Int32 offset, Int32 len, Boolean useBuffer) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadCharsCharArrayInt32Int32">
            <summary>设置 IndexInput.ReadChars(Char[] buffer, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadInt">
            <summary>设置 IndexInput.ReadInt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadInt01">
            <summary>设置 IndexInput.ReadInt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadLong">
            <summary>设置 IndexInput.ReadLong() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadLong01">
            <summary>设置 IndexInput.ReadLong() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadString">
            <summary>设置 IndexInput.ReadString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadString01">
            <summary>设置 IndexInput.ReadString() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadStringStringMap">
            <summary>设置 IndexInput.ReadStringStringMap() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadStringStringMap01">
            <summary>设置 IndexInput.ReadStringStringMap() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadVInt">
            <summary>设置 IndexInput.ReadVInt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadVInt01">
            <summary>设置 IndexInput.ReadVInt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadVLong">
            <summary>设置 IndexInput.ReadVLong() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.ReadVLong01">
            <summary>设置 IndexInput.ReadVLong() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.Seek(System.Int64)">
            <summary>设置 RAMInputStream.Seek(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.SeekInt64">
            <summary>设置 RAMInputStream.Seek(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.SetModifiedUTF8StringsMode">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.SetModifiedUTF8StringsMode01">
            <summary>设置 IndexInput.SetModifiedUTF8StringsMode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMInputStream.SkipChars(System.Int32)">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMInputStream.SkipCharsInt32">
            <summary>设置 IndexInput.SkipChars(Int32 length) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMInputStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMInputStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMInputStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubRAMOutputStream">
            <summary>Lucene.Net.Store.RAMOutputStream 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.#ctor(Lucene.Net.Store.RAMFile)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.Close">
            <summary>设置 RAMOutputStream.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.Close01">
            <summary>设置 RAMOutputStream.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.CopyBytes(Lucene.Net.Store.IndexInput,System.Int64)">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.CopyBytesIndexInputInt64">
            <summary>设置 IndexOutput.CopyBytes(IndexInput input, Int64 numBytes) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.Flush">
            <summary>设置 RAMOutputStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.Flush01">
            <summary>设置 RAMOutputStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.GetFilePointer">
            <summary>设置 RAMOutputStream.GetFilePointer() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.GetFilePointer01">
            <summary>设置 RAMOutputStream.GetFilePointer() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.InitializeStub">
            <summary>初始化 type StubRAMOutputStream 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.Length">
            <summary>设置 RAMOutputStream.Length() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.Length01">
            <summary>设置 RAMOutputStream.Length() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.Reset">
            <summary>设置 RAMOutputStream.Reset() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.Reset01">
            <summary>设置 RAMOutputStream.Reset() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.Seek(System.Int64)">
            <summary>设置 RAMOutputStream.Seek(Int64 pos) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.SeekInt64">
            <summary>设置 RAMOutputStream.Seek(Int64 pos) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.SetLength(System.Int64)">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.SetLengthInt64">
            <summary>设置 IndexOutput.SetLength(Int64 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.SizeInBytes">
            <summary>设置 RAMOutputStream.SizeInBytes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.SizeInBytes01">
            <summary>设置 RAMOutputStream.SizeInBytes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteByte(System.Byte)">
            <summary>设置 RAMOutputStream.WriteByte(Byte b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteByteByte">
            <summary>设置 RAMOutputStream.WriteByte(Byte b) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteBytes(System.Byte[],System.Int32)">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 RAMOutputStream.WriteBytes(Byte[] b, Int32 offset, Int32 len) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteBytesByteArrayInt32">
            <summary>设置 IndexOutput.WriteBytes(Byte[] b, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteBytesByteArrayInt32Int32">
            <summary>设置 RAMOutputStream.WriteBytes(Byte[] b, Int32 offset, Int32 len) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteChars(System.Char[],System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteChars(System.String,System.Int32,System.Int32)">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteCharsCharArrayInt32Int32">
            <summary>设置 IndexOutput.WriteChars(Char[] s, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteCharsStringInt32Int32">
            <summary>设置 IndexOutput.WriteChars(String s, Int32 start, Int32 length) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteInt(System.Int32)">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteIntInt32">
            <summary>设置 IndexOutput.WriteInt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteLong(System.Int64)">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteLongInt64">
            <summary>设置 IndexOutput.WriteLong(Int64 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteString(System.String)">
            <summary>设置 IndexOutput.WriteString(String s) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteStringString">
            <summary>设置 IndexOutput.WriteString(String s) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteStringStringMap(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteStringStringMapIDictionaryOfStringString">
            <summary>设置 IndexOutput.WriteStringStringMap(IDictionary`2&lt;String,String&gt; map) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteTo(Lucene.Net.Store.IndexOutput)">
            <summary>设置 RAMOutputStream.WriteTo(IndexOutput out_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteToIndexOutput">
            <summary>设置 RAMOutputStream.WriteTo(IndexOutput out_Renamed) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteVInt(System.Int32)">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteVIntInt32">
            <summary>设置 IndexOutput.WriteVInt(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteVLong(System.Int64)">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubRAMOutputStream.WriteVLongInt64">
            <summary>设置 IndexOutput.WriteVLong(Int64 i) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMOutputStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMOutputStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubRAMOutputStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory">
            <summary>Lucene.Net.Store.SimpleFSLockFactory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.#ctor(System.IO.DirectoryInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.#ctor(System.IO.FileInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.ClearLock(System.String)">
            <summary>设置 SimpleFSLockFactory.ClearLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.ClearLockString">
            <summary>设置 SimpleFSLockFactory.ClearLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.GetLockPrefix01">
            <summary>设置 LockFactory.GetLockPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.InitializeStub">
            <summary>初始化 type StubSimpleFSLockFactory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.MakeLock(System.String)">
            <summary>设置 SimpleFSLockFactory.MakeLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.MakeLockString">
            <summary>设置 SimpleFSLockFactory.MakeLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.SetLockPrefix(System.String)">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubSimpleFSLockFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory">
            <summary>Lucene.Net.Store.SingleInstanceLockFactory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.ClearLock(System.String)">
            <summary>设置 SingleInstanceLockFactory.ClearLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.ClearLockString">
            <summary>设置 SingleInstanceLockFactory.ClearLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.GetLockPrefix01">
            <summary>设置 LockFactory.GetLockPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.InitializeStub">
            <summary>初始化 type StubSingleInstanceLockFactory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.MakeLock(System.String)">
            <summary>设置 SingleInstanceLockFactory.MakeLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.MakeLockString">
            <summary>设置 SingleInstanceLockFactory.MakeLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.SetLockPrefix(System.String)">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubSingleInstanceLockFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Store.Fakes.StubVerifyingLockFactory">
            <summary>Lucene.Net.Store.VerifyingLockFactory 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.#ctor(System.SByte,Lucene.Net.Store.LockFactory,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.ClearLock(System.String)">
            <summary>设置 VerifyingLockFactory.ClearLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.ClearLockString">
            <summary>设置 VerifyingLockFactory.ClearLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.GetLockPrefix">
            <summary>设置 LockFactory.GetLockPrefix() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.GetLockPrefix01">
            <summary>设置 LockFactory.GetLockPrefix() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.InitializeStub">
            <summary>初始化 type StubVerifyingLockFactory 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.MakeLock(System.String)">
            <summary>设置 VerifyingLockFactory.MakeLock(String lockName) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.MakeLockString">
            <summary>设置 VerifyingLockFactory.MakeLock(String lockName) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.SetLockPrefix(System.String)">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.SetLockPrefixString">
            <summary>设置 LockFactory.SetLockPrefix(String lockPrefix) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Store.Fakes.StubVerifyingLockFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimAppSettings">
            <summary>Lucene.Net.Support.AppSettings 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimAppSettings.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimAppSettings.#ctor(Lucene.Net.Support.AppSettings)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimAppSettings.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimAppSettings.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.Constructor">
            <summary>设置 AppSettings.AppSettings() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.GetStringBoolean">
            <summary>设置 AppSettings.Get(String key, Boolean defValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.GetStringInt32">
            <summary>设置 AppSettings.Get(String key, Int32 defValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.GetStringInt64">
            <summary>设置 AppSettings.Get(String key, Int64 defValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.GetStringString">
            <summary>设置 AppSettings.Get(String key, String defValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.SetStringBoolean">
            <summary>设置 AppSettings.Set(String key, Boolean defValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.SetStringInt32">
            <summary>设置 AppSettings.Set(String key, Int32 defValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.SetStringInt64">
            <summary>设置 AppSettings.Set(String key, Int64 defValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.SetStringString">
            <summary>设置 AppSettings.Set(String key, String defValue) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimAppSettings.StaticConstructor">
            <summary>设置 AppSettings.AppSettings() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimAppSettings.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimBitSetSupport">
            <summary>Lucene.Net.Support.BitSetSupport 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimBitSetSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimBitSetSupport.#ctor(Lucene.Net.Support.BitSetSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimBitSetSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimBitSetSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimBitSetSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimBitSetSupport.CardinalityBitArray">
            <summary>设置 BitSetSupport.Cardinality(BitArray bits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimBitSetSupport.Constructor">
            <summary>设置 BitSetSupport.BitSetSupport() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimBitSetSupport.NextClearBitBitArrayInt32">
            <summary>设置 BitSetSupport.NextClearBit(BitArray bitArray, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimBitSetSupport.NextSetBitBitArrayInt32">
            <summary>设置 BitSetSupport.NextSetBit(BitArray bitArray, Int32 index) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimBitSetSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimBuildType">
            <summary>Lucene.Net.Support.BuildType 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimBuildType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimBuildType.#ctor(Lucene.Net.Support.BuildType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimBuildType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimBuildType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimBuildType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimBuildType.Constructor">
            <summary>设置 BuildType.BuildType() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimBuildType.StaticConstructor">
            <summary>设置 BuildType.BuildType() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimBuildType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCRC32">
            <summary>Lucene.Net.Support.CRC32 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCRC32.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCRC32.#ctor(Lucene.Net.Support.CRC32)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCRC32.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCRC32.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCRC32.Bind(Lucene.Net.Support.Checksum)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.Constructor">
            <summary>设置 CRC32.CRC32() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.GetValue">
            <summary>设置 CRC32.GetValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.InitializeCRCTable">
            <summary>设置 CRC32.InitializeCRCTable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.Reset">
            <summary>设置 CRC32.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.StaticConstructor">
            <summary>设置 CRC32.CRC32() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.UpdateByteArray">
            <summary>设置 CRC32.Update(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.UpdateByteArrayInt32Int32">
            <summary>设置 CRC32.Update(Byte[] buf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.UpdateInt32">
            <summary>设置 CRC32.Update(Int32 bval) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCRC32.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.AllInstances.GetValue">
            <summary>设置 CRC32.GetValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.AllInstances.Reset">
            <summary>设置 CRC32.Reset() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.AllInstances.UpdateByteArray">
            <summary>设置 CRC32.Update(Byte[] buf) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.AllInstances.UpdateByteArrayInt32Int32">
            <summary>设置 CRC32.Update(Byte[] buf, Int32 off, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCRC32.AllInstances.UpdateInt32">
            <summary>设置 CRC32.Update(Int32 bval) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCharacter">
            <summary>Lucene.Net.Support.Character 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCharacter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCharacter.#ctor(Lucene.Net.Support.Character)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCharacter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCharacter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCharacter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCharacter.Constructor">
            <summary>设置 Character.Character() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCharacter.ForDigitInt32Int32">
            <summary>设置 Character.ForDigit(Int32 digit, Int32 radix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCharacter.MAX_RADIXGet">
            <summary>设置 Character.get_MAX_RADIX() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCharacter.MIN_RADIXGet">
            <summary>设置 Character.get_MIN_RADIX() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCharacter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler">
            <summary>Lucene.Net.Support.CloseableThreadLocalProfiler 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.#ctor(Lucene.Net.Support.CloseableThreadLocalProfiler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.Constructor">
            <summary>设置 CloseableThreadLocalProfiler.CloseableThreadLocalProfiler() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.EnableCloseableThreadLocalProfilerGet">
            <summary>设置 CloseableThreadLocalProfiler.get_EnableCloseableThreadLocalProfiler() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.EnableCloseableThreadLocalProfilerSetBoolean">
            <summary>设置 CloseableThreadLocalProfiler.set_EnableCloseableThreadLocalProfiler(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.StaticConstructor">
            <summary>设置 CloseableThreadLocalProfiler.CloseableThreadLocalProfiler() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCloseableThreadLocalProfiler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCollectionsHelper">
            <summary>Lucene.Net.Support.CollectionsHelper 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCollectionsHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCollectionsHelper.#ctor(Lucene.Net.Support.CollectionsHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCollectionsHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCollectionsHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCollectionsHelper.CollectionToStringOf1IListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IList{``0},System.String})">
            <summary>设置 CollectionsHelper.CollectionToString(IList`1&lt;!!0&gt; c) 的 填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCollectionsHelper.SortOf1IListOfM0IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IList{``0},System.Collections.Generic.IComparer{``0}})">
            <summary>设置 CollectionsHelper.Sort(IList`1&lt;!!0&gt; list, IComparer`1&lt;!!0&gt; Comparator) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCollectionsHelper.AddAllIfNotContainsIDictionaryOfStringStringICollectionOfString">
            <summary>设置 CollectionsHelper.AddAllIfNotContains(IDictionary`2&lt;String,String&gt; hashtable, ICollection`1&lt;String&gt; items) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCollectionsHelper.AddHashtableObject">
            <summary>设置 CollectionsHelper.Add(Hashtable hashtable, Object item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCollectionsHelper.AddIfNotContainsHashtableObject">
            <summary>设置 CollectionsHelper.AddIfNotContains(Hashtable hashtable, Object item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCollectionsHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCollectionsHelper.CollectionToStringICollection">
            <summary>设置 CollectionsHelper.CollectionToString(ICollection c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCollectionsHelper.CollectionToStringIDictionaryOfStringString">
            <summary>设置 CollectionsHelper.CollectionToString(IDictionary`2&lt;String,String&gt; c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCollectionsHelper.Constructor">
            <summary>设置 CollectionsHelper.CollectionsHelper() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCollectionsHelper.EqualsArrayArray">
            <summary>设置 CollectionsHelper.Equals(Array array1, Array array2) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCollectionsHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCompare">
            <summary>Lucene.Net.Support.Compare 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCompare.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCompare.#ctor(Lucene.Net.Support.Compare)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCompare.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCompare.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCompare.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCompare.CompareTermArraysTermArrayTermArray">
            <summary>设置 Compare.CompareTermArrays(Term[] t1, Term[] t2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCompare.Constructor">
            <summary>设置 Compare.Compare() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCompare.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCryptography">
            <summary>Lucene.Net.Support.Cryptography 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCryptography.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCryptography.#ctor(Lucene.Net.Support.Cryptography)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCryptography.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimCryptography.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCryptography.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCryptography.Constructor">
            <summary>设置 Cryptography.Cryptography() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimCryptography.StaticConstructor">
            <summary>设置 Cryptography.Cryptography() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimCryptography.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimDictionary`2">
            <summary>Lucene.Net.Support.Dictionary`2 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDictionary`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDictionary`2.#ctor(Lucene.Net.Support.Dictionary{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDictionary`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDictionary`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDictionary`2.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDictionary`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDictionary`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDictionary`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AddIDictionaryOfT0T1">
            <summary>设置 Dictionary`2.Add(IDictionary`2&lt;!0,!1&gt; items) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AddKeyValuePairOfT0T1">
            <summary>设置 Dictionary`2.Add(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AddT0T1">
            <summary>设置 Dictionary`2.Add(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.Clear">
            <summary>设置 Dictionary`2.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.Constructor">
            <summary>设置 Dictionary`2.Dictionary`2() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ConstructorBoolean">
            <summary>设置 Dictionary`2.Dictionary`2(Boolean sortedDictionary) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ConstructorDictionaryOfT0T1">
            <summary>设置 Dictionary`2.Dictionary`2(Dictionary`2&lt;!0,!1&gt; dict) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ConstructorIDictionaryOfT0T1">
            <summary>设置 Dictionary`2.Dictionary`2(IDictionary`2&lt;!0,!1&gt; dict) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ConstructorInt32">
            <summary>设置 Dictionary`2.Dictionary`2(Int32 capacity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ContainsKeyT0">
            <summary>设置 Dictionary`2.ContainsKey(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ContainsKeyValuePairOfT0T1">
            <summary>设置 Dictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>设置 Dictionary`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.CountGet">
            <summary>设置 Dictionary`2.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.FirstKeyGet">
            <summary>设置 Dictionary`2.get_FirstKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.GetEnumerator">
            <summary>设置 Dictionary`2.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.IsReadOnlyGet">
            <summary>设置 Dictionary`2.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ItemGetT0">
            <summary>设置 Dictionary`2.get_Item(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ItemSetT0T1">
            <summary>设置 Dictionary`2.set_Item(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.KeysGet">
            <summary>设置 Dictionary`2.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.RemoveKeyValuePairOfT0T1">
            <summary>设置 Dictionary`2.Remove(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.RemoveT0">
            <summary>设置 Dictionary`2.Remove(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 Dictionary`2.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.TryGetValueT0T1Out">
            <summary>设置 Dictionary`2.TryGetValue(!0 key, !1&amp; value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.ValuesGet">
            <summary>设置 Dictionary`2.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.AddIDictionaryOfT0T1">
            <summary>设置 Dictionary`2.Add(IDictionary`2&lt;!0,!1&gt; items) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.AddKeyValuePairOfT0T1">
            <summary>设置 Dictionary`2.Add(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.AddT0T1">
            <summary>设置 Dictionary`2.Add(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.Clear">
            <summary>设置 Dictionary`2.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.ContainsKeyT0">
            <summary>设置 Dictionary`2.ContainsKey(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.ContainsKeyValuePairOfT0T1">
            <summary>设置 Dictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>设置 Dictionary`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.CountGet">
            <summary>设置 Dictionary`2.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.FirstKeyGet">
            <summary>设置 Dictionary`2.get_FirstKey() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.GetEnumerator">
            <summary>设置 Dictionary`2.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.IsReadOnlyGet">
            <summary>设置 Dictionary`2.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.ItemGetT0">
            <summary>设置 Dictionary`2.get_Item(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.ItemSetT0T1">
            <summary>设置 Dictionary`2.set_Item(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.KeysGet">
            <summary>设置 Dictionary`2.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.RemoveKeyValuePairOfT0T1">
            <summary>设置 Dictionary`2.Remove(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.RemoveT0">
            <summary>设置 Dictionary`2.Remove(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 Dictionary`2.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.TryGetValueT0T1Out">
            <summary>设置 Dictionary`2.TryGetValue(!0 key, !1&amp; value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDictionary`2.AllInstances.ValuesGet">
            <summary>设置 Dictionary`2.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimDouble">
            <summary>Lucene.Net.Support.Double 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDouble.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDouble.#ctor(Lucene.Net.Support.Double)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDouble.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimDouble.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDouble.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDouble.Constructor">
            <summary>设置 Double.Double() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimDouble.ParseString">
            <summary>设置 Double.Parse(String s) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimDouble.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimEquatableList`1">
            <summary>Lucene.Net.Support.EquatableList`1 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.#ctor(Lucene.Net.Support.EquatableList{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.Bind(System.IEquatable{System.Collections.Generic.IEnumerable{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimEquatableList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.AddRangeICollection">
            <summary>设置 EquatableList`1.AddRange(ICollection c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.Clone">
            <summary>设置 EquatableList`1.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.Constructor">
            <summary>设置 EquatableList`1.EquatableList`1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.ConstructorIEnumerableOfT0">
            <summary>设置 EquatableList`1.EquatableList`1(IEnumerable`1&lt;!0&gt; collection) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.ConstructorInt32">
            <summary>设置 EquatableList`1.EquatableList`1(Int32 capacity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.EnumerableCountsEqualIEnumerableOfT0IEnumerableOfT0">
            <summary>设置 EquatableList`1.EnumerableCountsEqual(IEnumerable`1&lt;!0&gt; x, IEnumerable`1&lt;!0&gt; y) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.EqualsIEnumerableOfT0">
            <summary>设置 EquatableList`1.Equals(IEnumerable`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.EqualsIEnumerableOfT0IEnumerableOfT0">
            <summary>设置 EquatableList`1.Equals(IEnumerable`1&lt;!0&gt; x, IEnumerable`1&lt;!0&gt; y) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.EqualsObject">
            <summary>设置 EquatableList`1.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.GetHashCode">
            <summary>设置 EquatableList`1.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.GetHashCodeIEnumerableOfT0">
            <summary>设置 EquatableList`1.GetHashCode(IEnumerable`1&lt;!0&gt; source) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.ToString">
            <summary>设置 EquatableList`1.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimEquatableList`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.AllInstances.AddRangeICollection">
            <summary>设置 EquatableList`1.AddRange(ICollection c) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.AllInstances.Clone">
            <summary>设置 EquatableList`1.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.AllInstances.EqualsIEnumerableOfT0">
            <summary>设置 EquatableList`1.Equals(IEnumerable`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.AllInstances.EqualsObject">
            <summary>设置 EquatableList`1.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.AllInstances.GetHashCode01">
            <summary>设置 EquatableList`1.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimEquatableList`1.AllInstances.ToString01">
            <summary>设置 EquatableList`1.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimFileSupport">
            <summary>Lucene.Net.Support.FileSupport 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimFileSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimFileSupport.#ctor(Lucene.Net.Support.FileSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimFileSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimFileSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimFileSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimFileSupport.Constructor">
            <summary>设置 FileSupport.FileSupport() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimFileSupport.GetFilesFileInfo">
            <summary>设置 FileSupport.GetFiles(FileInfo path) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimFileSupport.GetLuceneIndexFilesStringIndexFileNameFilter">
            <summary>设置 FileSupport.GetLuceneIndexFiles(String fullName, IndexFileNameFilter indexFileNameFilter) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimFileSupport.SyncFileStream">
            <summary>设置 FileSupport.Sync(FileStream fileStream) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimFileSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory">
            <summary>Lucene.Net.Support.MemoryMappedDirectory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.#ctor(Lucene.Net.Support.MemoryMappedDirectory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.ConstructorDirectoryInfo">
            <summary>设置 MemoryMappedDirectory.MemoryMappedDirectory(DirectoryInfo dInfo) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.ConstructorDirectoryInfoLockFactory">
            <summary>设置 MemoryMappedDirectory.MemoryMappedDirectory(DirectoryInfo dInfo, LockFactory lockFactory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.ConstructorString">
            <summary>设置 MemoryMappedDirectory.MemoryMappedDirectory(String dirName) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.CreateOutputString">
            <summary>设置 MemoryMappedDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.Dispose">
            <summary>设置 MemoryMappedDirectory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.OpenInputString">
            <summary>设置 MemoryMappedDirectory.OpenInput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.OpenInputStringInt32">
            <summary>设置 MemoryMappedDirectory.OpenInput(String name, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.AllInstances.CreateOutputString">
            <summary>设置 MemoryMappedDirectory.CreateOutput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.AllInstances.Dispose">
            <summary>设置 MemoryMappedDirectory.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.AllInstances.OpenInputString">
            <summary>设置 MemoryMappedDirectory.OpenInput(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimMemoryMappedDirectory.AllInstances.OpenInputStringInt32">
            <summary>设置 MemoryMappedDirectory.OpenInput(String name, Int32 bufferSize) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimNumber">
            <summary>Lucene.Net.Support.Number 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimNumber.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimNumber.#ctor(Lucene.Net.Support.Number)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimNumber.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimNumber.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.Constructor">
            <summary>设置 Number.Number() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.NextSetBitBitArrayInt32">
            <summary>设置 Number.NextSetBit(BitArray bits, Int32 fromIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.ParseStringInt32">
            <summary>设置 Number.Parse(String s, Int32 radix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.ToInt64String">
            <summary>设置 Number.ToInt64(String s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.ToStringInt64">
            <summary>设置 Number.ToString(Int64 number) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.ToStringInt64Int32">
            <summary>设置 Number.ToString(Int64 i, Int32 radix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.ToStringSingle">
            <summary>设置 Number.ToString(Single f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.URShiftInt32Int32">
            <summary>设置 Number.URShift(Int32 number, Int32 bits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimNumber.URShiftInt64Int32">
            <summary>设置 Number.URShift(Int64 number, Int32 bits) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimNumber.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimOs">
            <summary>Lucene.Net.Support.Os 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimOs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimOs.#ctor(Lucene.Net.Support.Os)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimOs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimOs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimOs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimOs.Constructor">
            <summary>设置 Os.Os() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimOs.IsUnixGet">
            <summary>设置 Os.get_IsUnix() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimOs.IsWindowsGet">
            <summary>设置 Os.get_IsWindows() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimOs.StaticConstructor">
            <summary>设置 Os.Os() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimOs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSet`1">
            <summary>Lucene.Net.Support.Set`1 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.#ctor(Lucene.Net.Support.Set{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSet`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AddIListOfT0">
            <summary>设置 Set`1.Add(IList`1&lt;!0&gt; items) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AddSetOfT0">
            <summary>设置 Set`1.Add(Set`1&lt;!0&gt; items) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AddT0">
            <summary>设置 Set`1.Add(!0 item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.Clear">
            <summary>设置 Set`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.Constructor">
            <summary>设置 Set`1.Set`1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.ContainsT0">
            <summary>设置 Set`1.Contains(!0 item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.RemoveT0">
            <summary>设置 Set`1.Remove(!0 item) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSet`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AllInstances.AddIListOfT0">
            <summary>设置 Set`1.Add(IList`1&lt;!0&gt; items) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AllInstances.AddSetOfT0">
            <summary>设置 Set`1.Add(Set`1&lt;!0&gt; items) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AllInstances.AddT0">
            <summary>设置 Set`1.Add(!0 item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AllInstances.Clear">
            <summary>设置 Set`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AllInstances.ContainsT0">
            <summary>设置 Set`1.Contains(!0 item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSet`1.AllInstances.RemoveT0">
            <summary>设置 Set`1.Remove(!0 item) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSharpZipLib">
            <summary>Lucene.Net.Support.SharpZipLib 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.#ctor(Lucene.Net.Support.SharpZipLib)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.Constructor">
            <summary>设置 SharpZipLib.SharpZipLib() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.CreateDeflater">
            <summary>设置 SharpZipLib.CreateDeflater() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.CreateInflater">
            <summary>设置 SharpZipLib.CreateInflater() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.StaticConstructor">
            <summary>设置 SharpZipLib.SharpZipLib() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSharpZipLib.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater">
            <summary>Lucene.Net.Support.SharpZipLib+Deflater 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.#ctor(Lucene.Net.Support.SharpZipLib.Deflater)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.ConstructorObject">
            <summary>设置 Deflater.Deflater(Object deflaterInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.DeflateByteArray">
            <summary>设置 Deflater.Deflate(Byte[] output) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.Finish">
            <summary>设置 Deflater.Finish() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.IsFinishedGet">
            <summary>设置 Deflater.get_IsFinished() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.SetInputByteArrayInt32Int32">
            <summary>设置 Deflater.SetInput(Byte[] input, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.SetLevelInt32">
            <summary>设置 Deflater.SetLevel(Int32 level) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.AllInstances.DeflateByteArray">
            <summary>设置 Deflater.Deflate(Byte[] output) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.AllInstances.Finish">
            <summary>设置 Deflater.Finish() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.AllInstances.IsFinishedGet">
            <summary>设置 Deflater.get_IsFinished() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.AllInstances.SetInputByteArrayInt32Int32">
            <summary>设置 Deflater.SetInput(Byte[] input, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimDeflater.AllInstances.SetLevelInt32">
            <summary>设置 Deflater.SetLevel(Int32 level) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater">
            <summary>Lucene.Net.Support.SharpZipLib+Inflater 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.#ctor(Lucene.Net.Support.SharpZipLib.Inflater)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.ConstructorObject">
            <summary>设置 Inflater.Inflater(Object inflaterInstance) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.InflateByteArray">
            <summary>设置 Inflater.Inflate(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.IsFinishedGet">
            <summary>设置 Inflater.get_IsFinished() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.SetInputByteArray">
            <summary>设置 Inflater.SetInput(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.AllInstances.InflateByteArray">
            <summary>设置 Inflater.Inflate(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.AllInstances.IsFinishedGet">
            <summary>设置 Inflater.get_IsFinished() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSharpZipLib.ShimInflater.AllInstances.SetInputByteArray">
            <summary>设置 Inflater.SetInput(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSingle">
            <summary>Lucene.Net.Support.Single 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSingle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSingle.#ctor(Lucene.Net.Support.Single)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSingle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimSingle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSingle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSingle.Constructor">
            <summary>设置 Single.Single() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSingle.ParseString">
            <summary>设置 Single.Parse(String s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSingle.ParseStringIFormatProvider">
            <summary>设置 Single.Parse(String s, IFormatProvider provider) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSingle.ToStringSingle">
            <summary>设置 Single.ToString(Single f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSingle.ToStringSingleString">
            <summary>设置 Single.ToString(Single f, String format) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimSingle.TryParseStringSingleOut">
            <summary>设置 Single.TryParse(String s, Single&amp; f) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimSingle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimTextSupport">
            <summary>Lucene.Net.Support.TextSupport 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimTextSupport.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimTextSupport.#ctor(Lucene.Net.Support.TextSupport)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimTextSupport.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimTextSupport.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimTextSupport.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimTextSupport.Constructor">
            <summary>设置 TextSupport.TextSupport() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimTextSupport.GetCharsFromStringStringInt32Int32CharArrayInt32">
            <summary>设置 TextSupport.GetCharsFromString(String sourceString, Int32 sourceStart, Int32 sourceEnd, Char[] destinationArray, Int32 destinationStart) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimTextSupport.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimThreadClass">
            <summary>Lucene.Net.Support.ThreadClass 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimThreadClass.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimThreadClass.#ctor(Lucene.Net.Support.ThreadClass)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimThreadClass.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimThreadClass.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimThreadClass.Bind(IThreadRunnable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Abort">
            <summary>设置 ThreadClass.Abort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AbortObject">
            <summary>设置 ThreadClass.Abort(Object stateInfo) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Constructor">
            <summary>设置 ThreadClass.ThreadClass() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.ConstructorString">
            <summary>设置 ThreadClass.ThreadClass(String Name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Current">
            <summary>设置 ThreadClass.Current() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.CurrentThread">
            <summary>设置 ThreadClass.CurrentThread() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.EqualityOpThreadClassObject">
            <summary>设置 ThreadClass.op_Equality(ThreadClass t1, Object t2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.EqualsObject">
            <summary>设置 ThreadClass.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.GetHashCode">
            <summary>设置 ThreadClass.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.InequalityOpThreadClassObject">
            <summary>设置 ThreadClass.op_Inequality(ThreadClass t1, Object t2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Interrupt">
            <summary>设置 ThreadClass.Interrupt() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.IsAliveGet">
            <summary>设置 ThreadClass.get_IsAlive() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.IsBackgroundGet">
            <summary>设置 ThreadClass.get_IsBackground() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.IsBackgroundSetBoolean">
            <summary>设置 ThreadClass.set_IsBackground(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Join">
            <summary>设置 ThreadClass.Join() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.JoinInt64">
            <summary>设置 ThreadClass.Join(Int64 MiliSeconds) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.JoinInt64Int32">
            <summary>设置 ThreadClass.Join(Int64 MiliSeconds, Int32 NanoSeconds) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.NameGet">
            <summary>设置 ThreadClass.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.NameSetString">
            <summary>设置 ThreadClass.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Resume">
            <summary>设置 ThreadClass.Resume() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Run">
            <summary>设置 ThreadClass.Run() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.SetDaemonBoolean">
            <summary>设置 ThreadClass.SetDaemon(Boolean isDaemon) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.SleepInt64">
            <summary>设置 ThreadClass.Sleep(Int64 ms) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Start">
            <summary>设置 ThreadClass.Start() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.StaticConstructor">
            <summary>设置 ThreadClass.ThreadClass() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.Suspend">
            <summary>设置 ThreadClass.Suspend() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.ToString">
            <summary>设置 ThreadClass.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.Abort">
            <summary>设置 ThreadClass.Abort() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.AbortObject">
            <summary>设置 ThreadClass.Abort(Object stateInfo) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.EqualsObject">
            <summary>设置 ThreadClass.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.GetHashCode01">
            <summary>设置 ThreadClass.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.Interrupt">
            <summary>设置 ThreadClass.Interrupt() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.IsAliveGet">
            <summary>设置 ThreadClass.get_IsAlive() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.IsBackgroundGet">
            <summary>设置 ThreadClass.get_IsBackground() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.IsBackgroundSetBoolean">
            <summary>设置 ThreadClass.set_IsBackground(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.Join">
            <summary>设置 ThreadClass.Join() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.JoinInt64">
            <summary>设置 ThreadClass.Join(Int64 MiliSeconds) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.JoinInt64Int32">
            <summary>设置 ThreadClass.Join(Int64 MiliSeconds, Int32 NanoSeconds) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.NameGet">
            <summary>设置 ThreadClass.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.NameSetString">
            <summary>设置 ThreadClass.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.Resume">
            <summary>设置 ThreadClass.Resume() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.Run">
            <summary>设置 ThreadClass.Run() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.SetDaemonBoolean">
            <summary>设置 ThreadClass.SetDaemon(Boolean isDaemon) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.Start">
            <summary>设置 ThreadClass.Start() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.Suspend">
            <summary>设置 ThreadClass.Suspend() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimThreadClass.AllInstances.ToString01">
            <summary>设置 ThreadClass.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimWeakDictionary`2">
            <summary>Lucene.Net.Support.WeakDictionary`2 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.#ctor(Lucene.Net.Support.WeakDictionary{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AddKeyValuePairOfT0T1">
            <summary>设置 WeakDictionary`2.Add(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AddT0T1">
            <summary>设置 WeakDictionary`2.Add(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.Clear">
            <summary>设置 WeakDictionary`2.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.Constructor">
            <summary>设置 WeakDictionary`2.WeakDictionary`2() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.ContainsKeyT0">
            <summary>设置 WeakDictionary`2.ContainsKey(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.ContainsKeyValuePairOfT0T1">
            <summary>设置 WeakDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>设置 WeakDictionary`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.CountGet">
            <summary>设置 WeakDictionary`2.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.GetEnumerator">
            <summary>设置 WeakDictionary`2.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.IsReadOnlyGet">
            <summary>设置 WeakDictionary`2.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.ItemGetT0">
            <summary>设置 WeakDictionary`2.get_Item(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.ItemSetT0T1">
            <summary>设置 WeakDictionary`2.set_Item(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.KeysGet">
            <summary>设置 WeakDictionary`2.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.RemoveKeyValuePairOfT0T1">
            <summary>设置 WeakDictionary`2.Remove(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.RemoveT0">
            <summary>设置 WeakDictionary`2.Remove(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 WeakDictionary`2.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.TryGetValueT0T1Out">
            <summary>设置 WeakDictionary`2.TryGetValue(!0 key, !1&amp; value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.ValuesGet">
            <summary>设置 WeakDictionary`2.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.AddKeyValuePairOfT0T1">
            <summary>设置 WeakDictionary`2.Add(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.AddT0T1">
            <summary>设置 WeakDictionary`2.Add(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.Clear">
            <summary>设置 WeakDictionary`2.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.ContainsKeyT0">
            <summary>设置 WeakDictionary`2.ContainsKey(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.ContainsKeyValuePairOfT0T1">
            <summary>设置 WeakDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>设置 WeakDictionary`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.CountGet">
            <summary>设置 WeakDictionary`2.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.GetEnumerator">
            <summary>设置 WeakDictionary`2.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.IsReadOnlyGet">
            <summary>设置 WeakDictionary`2.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.ItemGetT0">
            <summary>设置 WeakDictionary`2.get_Item(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.ItemSetT0T1">
            <summary>设置 WeakDictionary`2.set_Item(!0 key, !1 value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.KeysGet">
            <summary>设置 WeakDictionary`2.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.RemoveKeyValuePairOfT0T1">
            <summary>设置 WeakDictionary`2.Remove(KeyValuePair`2&lt;!0,!1&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.RemoveT0">
            <summary>设置 WeakDictionary`2.Remove(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 WeakDictionary`2.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.TryGetValueT0T1Out">
            <summary>设置 WeakDictionary`2.TryGetValue(!0 key, !1&amp; value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakDictionary`2.AllInstances.ValuesGet">
            <summary>设置 WeakDictionary`2.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimWeakHashTable">
            <summary>Lucene.Net.Support.WeakHashTable 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.#ctor(Lucene.Net.Support.WeakHashTable)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.ShimWeakHashTable.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AddObjectObject">
            <summary>设置 WeakHashTable.Add(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.Clean">
            <summary>设置 WeakHashTable.Clean() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.CleanIfNeeded">
            <summary>设置 WeakHashTable.CleanIfNeeded() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.Constructor">
            <summary>设置 WeakHashTable.WeakHashTable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.CopyToArrayInt32">
            <summary>设置 WeakHashTable.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.CountGet">
            <summary>设置 WeakHashTable.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.GetEnumerator">
            <summary>设置 WeakHashTable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.GetHashObject">
            <summary>设置 WeakHashTable.GetHash(Object key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.ItemGetObject">
            <summary>设置 WeakHashTable.get_Item(Object key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.ItemSetObjectObject">
            <summary>设置 WeakHashTable.set_Item(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.KeyEqualsObjectObject">
            <summary>设置 WeakHashTable.KeyEquals(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.KeysGet">
            <summary>设置 WeakHashTable.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 WeakHashTable.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.AddObjectObject">
            <summary>设置 WeakHashTable.Add(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.Clean">
            <summary>设置 WeakHashTable.Clean() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.CleanIfNeeded">
            <summary>设置 WeakHashTable.CleanIfNeeded() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.CopyToArrayInt32">
            <summary>设置 WeakHashTable.CopyTo(Array array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.CountGet">
            <summary>设置 WeakHashTable.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.GetEnumerator">
            <summary>设置 WeakHashTable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.GetHashObject">
            <summary>设置 WeakHashTable.GetHash(Object key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.ItemGetObject">
            <summary>设置 WeakHashTable.get_Item(Object key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.ItemSetObjectObject">
            <summary>设置 WeakHashTable.set_Item(Object key, Object value) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.KeyEqualsObjectObject">
            <summary>设置 WeakHashTable.KeyEquals(Object x, Object y) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.KeysGet">
            <summary>设置 WeakHashTable.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.ShimWeakHashTable.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 WeakHashTable.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubAppSettings">
            <summary>Lucene.Net.Support.AppSettings 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubAppSettings.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubAppSettings.InitializeStub">
            <summary>初始化 type StubAppSettings 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubAppSettings.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubAppSettings.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubAppSettings.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubBitSetSupport">
            <summary>Lucene.Net.Support.BitSetSupport 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubBitSetSupport.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubBitSetSupport.InitializeStub">
            <summary>初始化 type StubBitSetSupport 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubBitSetSupport.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubBitSetSupport.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubBitSetSupport.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubBuildType">
            <summary>Lucene.Net.Support.BuildType 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubBuildType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubBuildType.InitializeStub">
            <summary>初始化 type StubBuildType 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubBuildType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubBuildType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubBuildType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubCRC32">
            <summary>Lucene.Net.Support.CRC32 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCRC32.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCRC32.InitializeStub">
            <summary>初始化 type StubCRC32 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCRC32.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCRC32.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCRC32.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubCharacter">
            <summary>Lucene.Net.Support.Character 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCharacter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCharacter.InitializeStub">
            <summary>初始化 type StubCharacter 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCharacter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCharacter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCharacter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubChecksum">
            <summary>Lucene.Net.Support.Checksum 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubChecksum.#ctor">
            <summary>初始化 type StubChecksum 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubChecksum.GetValue">
            <summary>设置 Checksum.GetValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubChecksum.ln::Lucene#Net#Support#Checksum#GetValue">
            <summary>设置 Checksum.GetValue() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubChecksum.ln::Lucene#Net#Support#Checksum#Reset">
            <summary>设置 Checksum.Reset() 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubChecksum.ln::Lucene#Net#Support#Checksum#Update(System.Byte[])">
            <summary>设置 Checksum.Update(Byte[] b) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubChecksum.ln::Lucene#Net#Support#Checksum#Update(System.Int32)">
            <summary>设置 Checksum.Update(Int32 b) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubChecksum.ln::Lucene#Net#Support#Checksum#Update(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 Checksum.Update(Byte[] b, Int32 offset, Int32 length) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubChecksum.Reset">
            <summary>设置 Checksum.Reset() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubChecksum.UpdateByteArray">
            <summary>设置 Checksum.Update(Byte[] b) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubChecksum.UpdateByteArrayInt32Int32">
            <summary>设置 Checksum.Update(Byte[] b, Int32 offset, Int32 length) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubChecksum.UpdateInt32">
            <summary>设置 Checksum.Update(Int32 b) 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubCloseableThreadLocalProfiler">
            <summary>Lucene.Net.Support.CloseableThreadLocalProfiler 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCloseableThreadLocalProfiler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCloseableThreadLocalProfiler.InitializeStub">
            <summary>初始化 type StubCloseableThreadLocalProfiler 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCloseableThreadLocalProfiler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCloseableThreadLocalProfiler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCloseableThreadLocalProfiler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubCollectionsHelper">
            <summary>Lucene.Net.Support.CollectionsHelper 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCollectionsHelper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCollectionsHelper.InitializeStub">
            <summary>初始化 type StubCollectionsHelper 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCollectionsHelper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCollectionsHelper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCollectionsHelper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubCompare">
            <summary>Lucene.Net.Support.Compare 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCompare.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCompare.InitializeStub">
            <summary>初始化 type StubCompare 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCompare.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCompare.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCompare.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubCryptography">
            <summary>Lucene.Net.Support.Cryptography 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCryptography.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubCryptography.InitializeStub">
            <summary>初始化 type StubCryptography 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCryptography.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCryptography.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubCryptography.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubDictionary`2">
            <summary>Lucene.Net.Support.Dictionary`2 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubDictionary`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubDictionary`2.#ctor(System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubDictionary`2.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubDictionary`2.#ctor(Lucene.Net.Support.Dictionary{`0,`1})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubDictionary`2.InitializeStub">
            <summary>初始化 type StubDictionary 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubDictionary`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubDictionary`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubDictionary`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubDouble">
            <summary>Lucene.Net.Support.Double 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubDouble.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubDouble.InitializeStub">
            <summary>初始化 type StubDouble 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubDouble.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubDouble.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubDouble.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubEquatableList`1">
            <summary>Lucene.Net.Support.EquatableList`1 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubEquatableList`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubEquatableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubEquatableList`1.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubEquatableList`1.InitializeStub">
            <summary>初始化 type StubEquatableList 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubEquatableList`1.ToString">
            <summary>设置 EquatableList`1.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubEquatableList`1.ToString01">
            <summary>设置 EquatableList`1.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubEquatableList`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubEquatableList`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubEquatableList`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubFileSupport">
            <summary>Lucene.Net.Support.FileSupport 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubFileSupport.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubFileSupport.InitializeStub">
            <summary>初始化 type StubFileSupport 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubFileSupport.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubFileSupport.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubFileSupport.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubNumber">
            <summary>Lucene.Net.Support.Number 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubNumber.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubNumber.InitializeStub">
            <summary>初始化 type StubNumber 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubNumber.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubNumber.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubNumber.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubOs">
            <summary>Lucene.Net.Support.Os 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubOs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubOs.InitializeStub">
            <summary>初始化 type StubOs 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubOs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubOs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubOs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubSet`1">
            <summary>Lucene.Net.Support.Set`1 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubSet`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubSet`1.InitializeStub">
            <summary>初始化 type StubSet 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSet`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSet`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSet`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubSharpZipLib">
            <summary>Lucene.Net.Support.SharpZipLib 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubSharpZipLib.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubSharpZipLib.InitializeStub">
            <summary>初始化 type StubSharpZipLib 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSharpZipLib.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSharpZipLib.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSharpZipLib.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubSingle">
            <summary>Lucene.Net.Support.Single 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubSingle.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubSingle.InitializeStub">
            <summary>初始化 type StubSingle 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSingle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSingle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubSingle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubTextSupport">
            <summary>Lucene.Net.Support.TextSupport 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubTextSupport.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubTextSupport.InitializeStub">
            <summary>初始化 type StubTextSupport 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubTextSupport.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubTextSupport.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubTextSupport.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubThreadClass">
            <summary>Lucene.Net.Support.ThreadClass 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.#ctor(System.Threading.ThreadStart)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.#ctor(System.Threading.ThreadStart,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.Equals(System.Object)">
            <summary>设置 ThreadClass.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubThreadClass.EqualsObject">
            <summary>设置 ThreadClass.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.GetHashCode">
            <summary>设置 ThreadClass.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubThreadClass.GetHashCode01">
            <summary>设置 ThreadClass.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.InitializeStub">
            <summary>初始化 type StubThreadClass 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.Interrupt">
            <summary>设置 ThreadClass.Interrupt() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubThreadClass.Interrupt01">
            <summary>设置 ThreadClass.Interrupt() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.Run">
            <summary>设置 ThreadClass.Run() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubThreadClass.Run01">
            <summary>设置 ThreadClass.Run() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.Start">
            <summary>设置 ThreadClass.Start() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubThreadClass.Start01">
            <summary>设置 ThreadClass.Start() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubThreadClass.ToString">
            <summary>设置 ThreadClass.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubThreadClass.ToString01">
            <summary>设置 ThreadClass.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubThreadClass.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubThreadClass.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubThreadClass.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubWeakDictionary`2">
            <summary>Lucene.Net.Support.WeakDictionary`2 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakDictionary`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakDictionary`2.InitializeStub">
            <summary>初始化 type StubWeakDictionary 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakDictionary`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakDictionary`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakDictionary`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Support.Fakes.StubWeakHashTable">
            <summary>Lucene.Net.Support.WeakHashTable 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.Add(System.Object,System.Object)">
            <summary>设置 WeakHashTable.Add(Object key, Object value) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.AddObjectObject">
            <summary>设置 WeakHashTable.Add(Object key, Object value) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.Clear">
            <summary>设置 Hashtable.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.Clear01">
            <summary>设置 Hashtable.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.Clone">
            <summary>设置 Hashtable.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.Clone01">
            <summary>设置 Hashtable.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.Contains(System.Object)">
            <summary>设置 Hashtable.Contains(Object key) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.ContainsKey(System.Object)">
            <summary>设置 Hashtable.ContainsKey(Object key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.ContainsKeyObject">
            <summary>设置 Hashtable.ContainsKey(Object key) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.ContainsObject">
            <summary>设置 Hashtable.Contains(Object key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.ContainsValue(System.Object)">
            <summary>设置 Hashtable.ContainsValue(Object value) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.ContainsValueObject">
            <summary>设置 Hashtable.ContainsValue(Object value) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.CopyTo(System.Array,System.Int32)">
            <summary>设置 WeakHashTable.CopyTo(Array array, Int32 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.CopyToArrayInt32">
            <summary>设置 WeakHashTable.CopyTo(Array array, Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.CountGet">
            <summary>设置 WeakHashTable.get_Count() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.GetEnumerator">
            <summary>设置 WeakHashTable.GetEnumerator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.GetEnumerator01">
            <summary>设置 WeakHashTable.GetEnumerator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.GetHash(System.Object)">
            <summary>设置 WeakHashTable.GetHash(Object key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.GetHashObject">
            <summary>设置 WeakHashTable.GetHash(Object key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Hashtable.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Hashtable.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.InitializeStub">
            <summary>初始化 type StubWeakHashTable 的新实例</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.IsFixedSizeGet">
            <summary>设置 Hashtable.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.IsReadOnlyGet">
            <summary>设置 Hashtable.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.IsSynchronizedGet">
            <summary>设置 Hashtable.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.ItemGetObject">
            <summary>设置 WeakHashTable.get_Item(Object key) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.ItemSetObjectObject">
            <summary>设置 WeakHashTable.set_Item(Object key, Object value) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.KeyEquals(System.Object,System.Object)">
            <summary>设置 WeakHashTable.KeyEquals(Object x, Object y) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.KeyEqualsObjectObject">
            <summary>设置 WeakHashTable.KeyEquals(Object x, Object y) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.KeysGet">
            <summary>设置 WeakHashTable.get_Keys() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.OnDeserialization(System.Object)">
            <summary>设置 Hashtable.OnDeserialization(Object sender) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.OnDeserializationObject">
            <summary>设置 Hashtable.OnDeserialization(Object sender) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Support.Fakes.StubWeakHashTable.Remove(System.Object)">
            <summary>设置 Hashtable.Remove(Object key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.RemoveObject">
            <summary>设置 Hashtable.Remove(Object key) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.SyncRootGet">
            <summary>设置 Hashtable.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Support.Fakes.StubWeakHashTable.ValuesGet">
            <summary>设置 Hashtable.get_Values() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.Count">
            <summary>设置 WeakHashTable.get_Count() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.IsFixedSize">
            <summary>设置 Hashtable.get_IsFixedSize() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.IsReadOnly">
            <summary>设置 Hashtable.get_IsReadOnly() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.IsSynchronized">
            <summary>设置 Hashtable.get_IsSynchronized() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.Item(System.Object)">
            <summary>设置 WeakHashTable.get_Item(Object key) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.Keys">
            <summary>设置 WeakHashTable.get_Keys() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.SyncRoot">
            <summary>设置 Hashtable.get_SyncRoot() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Support.Fakes.StubWeakHashTable.Values">
            <summary>设置 Hashtable.get_Values() 的 stub</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.ShimCache`2">
            <summary>Lucene.Net.Util.Cache.Cache`2 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimCache`2.#ctor(Lucene.Net.Util.Cache.Cache{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimCache`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimCache`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimCache`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimCache`2.Constructor">
            <summary>设置 Cache`2.Cache`2() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimCache`2.GetSynchronizedCache">
            <summary>设置 Cache`2.GetSynchronizedCache() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimCache`2.SynchronizedCacheCacheOfT0T1">
            <summary>设置 Cache`2.SynchronizedCache(Cache`2&lt;!0,!1&gt; cache) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.ShimCache`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimCache`2.AllInstances.GetSynchronizedCache">
            <summary>设置 Cache`2.GetSynchronizedCache() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2">
            <summary>Lucene.Net.Util.Cache.SimpleLRUCache`2 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.#ctor(Lucene.Net.Util.Cache.SimpleLRUCache{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.ConstructorInt32">
            <summary>设置 SimpleLRUCache`2.SimpleLRUCache`2(Int32 Capacity) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.GetT0">
            <summary>设置 SimpleLRUCache`2.Get(!0 Key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.PutT0T1">
            <summary>设置 SimpleLRUCache`2.Put(!0 Key, !1 Value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.AllInstances.GetT0">
            <summary>设置 SimpleLRUCache`2.Get(!0 Key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleLRUCache`2.AllInstances.PutT0T1">
            <summary>设置 SimpleLRUCache`2.Put(!0 Key, !1 Value) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2">
            <summary>Lucene.Net.Util.Cache.SimpleMapCache`2 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.#ctor(Lucene.Net.Util.Cache.SimpleMapCache{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.Close">
            <summary>设置 SimpleMapCache`2.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.Constructor">
            <summary>设置 SimpleMapCache`2.SimpleMapCache`2() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.ConstructorDictionaryOfT0T1">
            <summary>设置 SimpleMapCache`2.SimpleMapCache`2(Dictionary`2&lt;!0,!1&gt; map) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.ContainsKeyT0">
            <summary>设置 SimpleMapCache`2.ContainsKey(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.GetSynchronizedCache">
            <summary>设置 SimpleMapCache`2.GetSynchronizedCache() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.GetT0">
            <summary>设置 SimpleMapCache`2.Get(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.KeySet">
            <summary>设置 SimpleMapCache`2.KeySet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.PutT0T1">
            <summary>设置 SimpleMapCache`2.Put(!0 key, !1 value_Renamed) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.AllInstances.Close">
            <summary>设置 SimpleMapCache`2.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.AllInstances.ContainsKeyT0">
            <summary>设置 SimpleMapCache`2.ContainsKey(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.AllInstances.GetSynchronizedCache">
            <summary>设置 SimpleMapCache`2.GetSynchronizedCache() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.AllInstances.GetT0">
            <summary>设置 SimpleMapCache`2.Get(!0 key) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.AllInstances.KeySet">
            <summary>设置 SimpleMapCache`2.KeySet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.ShimSimpleMapCache`2.AllInstances.PutT0T1">
            <summary>设置 SimpleMapCache`2.Put(!0 key, !1 value_Renamed) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.StubCache`2">
            <summary>Lucene.Net.Util.Cache.Cache`2 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubCache`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubCache`2.Close">
            <summary>设置 Cache`2.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubCache`2.Close01">
            <summary>设置 Cache`2.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubCache`2.ContainsKey(`0)">
            <summary>设置 Cache`2.ContainsKey(!0 key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubCache`2.ContainsKeyT0">
            <summary>设置 Cache`2.ContainsKey(!0 key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubCache`2.Get(`0)">
            <summary>设置 Cache`2.Get(!0 key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubCache`2.GetT0">
            <summary>设置 Cache`2.Get(!0 key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubCache`2.InitializeStub">
            <summary>初始化 type StubCache 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubCache`2.Put(`0,`1)">
            <summary>设置 Cache`2.Put(!0 key, !1 value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubCache`2.PutT0T1">
            <summary>设置 Cache`2.Put(!0 key, !1 value_Renamed) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubCache`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubCache`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubCache`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2">
            <summary>Lucene.Net.Util.Cache.SimpleLRUCache`2 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.Close">
            <summary>设置 SimpleMapCache`2.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.Close01">
            <summary>设置 SimpleMapCache`2.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.ContainsKey(`0)">
            <summary>设置 SimpleMapCache`2.ContainsKey(!0 key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.ContainsKeyT0">
            <summary>设置 SimpleMapCache`2.ContainsKey(!0 key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.Get(`0)">
            <summary>设置 SimpleLRUCache`2.Get(!0 Key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.GetT0">
            <summary>设置 SimpleLRUCache`2.Get(!0 Key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.InitializeStub">
            <summary>初始化 type StubSimpleLRUCache 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.KeySet">
            <summary>设置 SimpleMapCache`2.KeySet() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.KeySet01">
            <summary>设置 SimpleMapCache`2.KeySet() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.Put(`0,`1)">
            <summary>设置 SimpleLRUCache`2.Put(!0 Key, !1 Value) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.PutT0T1">
            <summary>设置 SimpleLRUCache`2.Put(!0 Key, !1 Value) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubSimpleLRUCache`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2">
            <summary>Lucene.Net.Util.Cache.SimpleMapCache`2 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.#ctor(Lucene.Net.Support.Dictionary{`0,`1})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.Close">
            <summary>设置 SimpleMapCache`2.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.Close01">
            <summary>设置 SimpleMapCache`2.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.ContainsKey(`0)">
            <summary>设置 SimpleMapCache`2.ContainsKey(!0 key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.ContainsKeyT0">
            <summary>设置 SimpleMapCache`2.ContainsKey(!0 key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.Get(`0)">
            <summary>设置 SimpleMapCache`2.Get(!0 key) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.GetT0">
            <summary>设置 SimpleMapCache`2.Get(!0 key) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.InitializeStub">
            <summary>初始化 type StubSimpleMapCache 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.KeySet">
            <summary>设置 SimpleMapCache`2.KeySet() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.KeySet01">
            <summary>设置 SimpleMapCache`2.KeySet() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.Put(`0,`1)">
            <summary>设置 SimpleMapCache`2.Put(!0 key, !1 value_Renamed) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.PutT0T1">
            <summary>设置 SimpleMapCache`2.Put(!0 key, !1 value_Renamed) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Cache.Fakes.StubSimpleMapCache`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimArrayUtil">
            <summary>Lucene.Net.Util.ArrayUtil 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimArrayUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimArrayUtil.#ctor(Lucene.Net.Util.ArrayUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimArrayUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimArrayUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.Constructor">
            <summary>设置 ArrayUtil.ArrayUtil() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.GetNextSizeInt32">
            <summary>设置 ArrayUtil.GetNextSize(Int32 targetSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.GetShrinkSizeInt32Int32">
            <summary>设置 ArrayUtil.GetShrinkSize(Int32 currentSize, Int32 targetSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.GrowByteArray">
            <summary>设置 ArrayUtil.Grow(Byte[] array) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.GrowByteArrayInt32">
            <summary>设置 ArrayUtil.Grow(Byte[] array, Int32 minSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.GrowInt32Array">
            <summary>设置 ArrayUtil.Grow(Int32[] array) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.GrowInt32ArrayInt32">
            <summary>设置 ArrayUtil.Grow(Int32[] array, Int32 minSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.GrowInt64Array">
            <summary>设置 ArrayUtil.Grow(Int64[] array) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.GrowInt64ArrayInt32">
            <summary>设置 ArrayUtil.Grow(Int64[] array, Int32 minSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.HashCodeByteArrayInt32Int32">
            <summary>设置 ArrayUtil.HashCode(Byte[] array, Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.HashCodeCharArrayInt32Int32">
            <summary>设置 ArrayUtil.HashCode(Char[] array, Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.ParseCharArrayInt32Int32Int32Boolean">
            <summary>设置 ArrayUtil.Parse(Char[] chars, Int32 offset, Int32 len, Int32 radix, Boolean negative) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.ParseIntCharArray">
            <summary>设置 ArrayUtil.ParseInt(Char[] chars) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.ParseIntCharArrayInt32Int32">
            <summary>设置 ArrayUtil.ParseInt(Char[] chars, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.ParseIntCharArrayInt32Int32Int32">
            <summary>设置 ArrayUtil.ParseInt(Char[] chars, Int32 offset, Int32 len, Int32 radix) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.ShrinkByteArrayInt32">
            <summary>设置 ArrayUtil.Shrink(Byte[] array, Int32 targetSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.ShrinkInt32ArrayInt32">
            <summary>设置 ArrayUtil.Shrink(Int32[] array, Int32 targetSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimArrayUtil.ShrinkInt64ArrayInt32">
            <summary>设置 ArrayUtil.Shrink(Int64[] array, Int32 targetSize) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimArrayUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAttributeImpl">
            <summary>Lucene.Net.Util.AttributeImpl 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeImpl.#ctor(Lucene.Net.Util.AttributeImpl)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeImpl.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeImpl.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeImpl.Bind(Lucene.Net.Util.IAttribute)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeImpl.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeImpl.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeImpl.Clone">
            <summary>设置 AttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeImpl.Constructor">
            <summary>设置 AttributeImpl.AttributeImpl() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeImpl.ToString">
            <summary>设置 AttributeImpl.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAttributeImpl.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeImpl.AllInstances.Clone">
            <summary>设置 AttributeImpl.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeImpl.AllInstances.ToString01">
            <summary>设置 AttributeImpl.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAttributeSource">
            <summary>Lucene.Net.Util.AttributeSource 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.#ctor(Lucene.Net.Util.AttributeSource)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.Constructor">
            <summary>设置 AttributeSource.AttributeSource() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ConstructorAttributeSource">
            <summary>设置 AttributeSource.AttributeSource(AttributeSource input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ConstructorAttributeSourceAttributeFactory">
            <summary>设置 AttributeSource.AttributeSource(AttributeFactory factory) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.GetCurrentState">
            <summary>设置 AttributeSource.GetCurrentState() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.StaticConstructor">
            <summary>设置 AttributeSource.AttributeSource() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ToString">
            <summary>设置 AttributeSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.GetCurrentState">
            <summary>设置 AttributeSource.GetCurrentState() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.AllInstances.ToString01">
            <summary>设置 AttributeSource.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimAttributeFactory">
            <summary>Lucene.Net.Util.AttributeSource+AttributeFactory 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimAttributeFactory.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimAttributeFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimAttributeFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimAttributeFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimAttributeFactory.Constructor">
            <summary>设置 AttributeFactory.AttributeFactory() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimAttributeFactory.StaticConstructor">
            <summary>设置 AttributeFactory.AttributeFactory() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimAttributeFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState">
            <summary>Lucene.Net.Util.AttributeSource+State 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.#ctor(Lucene.Net.Util.AttributeSource.State)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.Clone">
            <summary>设置 State.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.Constructor">
            <summary>设置 State.State() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAttributeSource.ShimState.AllInstances.Clone">
            <summary>设置 State.Clone() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel">
            <summary>Lucene.Net.Util.AverageGuessMemoryModel 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.#ctor(Lucene.Net.Util.AverageGuessMemoryModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.Constructor">
            <summary>设置 AverageGuessMemoryModel.AverageGuessMemoryModel() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.GetArraySize">
            <summary>设置 AverageGuessMemoryModel.GetArraySize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.GetClassSize">
            <summary>设置 AverageGuessMemoryModel.GetClassSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.GetPrimitiveSizeType">
            <summary>设置 AverageGuessMemoryModel.GetPrimitiveSize(Type clazz) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.GetReferenceSize">
            <summary>设置 AverageGuessMemoryModel.GetReferenceSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.InitBlock">
            <summary>设置 AverageGuessMemoryModel.InitBlock() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.AllInstances.GetArraySize">
            <summary>设置 AverageGuessMemoryModel.GetArraySize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.AllInstances.GetClassSize">
            <summary>设置 AverageGuessMemoryModel.GetClassSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.AllInstances.GetPrimitiveSizeType">
            <summary>设置 AverageGuessMemoryModel.GetPrimitiveSize(Type clazz) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.AllInstances.GetReferenceSize">
            <summary>设置 AverageGuessMemoryModel.GetReferenceSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimAverageGuessMemoryModel.AllInstances.InitBlock">
            <summary>设置 AverageGuessMemoryModel.InitBlock() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimBitUtil">
            <summary>Lucene.Net.Util.BitUtil 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitUtil.#ctor(Lucene.Net.Util.BitUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Constructor">
            <summary>设置 BitUtil.BitUtil() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.IsPowerOfTwoInt32">
            <summary>设置 BitUtil.IsPowerOfTwo(Int32 v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.IsPowerOfTwoInt64">
            <summary>设置 BitUtil.IsPowerOfTwo(Int64 v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.NextHighestPowerOfTwoInt32">
            <summary>设置 BitUtil.NextHighestPowerOfTwo(Int32 v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.NextHighestPowerOfTwoInt64">
            <summary>设置 BitUtil.NextHighestPowerOfTwo(Int64 v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Ntz2Int64">
            <summary>设置 BitUtil.Ntz2(Int64 x) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Ntz3Int64">
            <summary>设置 BitUtil.Ntz3(Int64 x) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.NtzInt32">
            <summary>设置 BitUtil.Ntz(Int32 val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.NtzInt64">
            <summary>设置 BitUtil.Ntz(Int64 val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.PopInt64">
            <summary>设置 BitUtil.Pop(Int64 x) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Pop_andnotInt64ArrayInt64ArrayInt32Int32">
            <summary>设置 BitUtil.Pop_andnot(Int64[] A, Int64[] B, Int32 wordOffset, Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Pop_arrayInt64ArrayInt32Int32">
            <summary>设置 BitUtil.Pop_array(Int64[] A, Int32 wordOffset, Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Pop_intersectInt64ArrayInt64ArrayInt32Int32">
            <summary>设置 BitUtil.Pop_intersect(Int64[] A, Int64[] B, Int32 wordOffset, Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Pop_unionInt64ArrayInt64ArrayInt32Int32">
            <summary>设置 BitUtil.Pop_union(Int64[] A, Int64[] B, Int32 wordOffset, Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.Pop_xorInt64ArrayInt64ArrayInt32Int32">
            <summary>设置 BitUtil.Pop_xor(Int64[] A, Int64[] B, Int32 wordOffset, Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitUtil.StaticConstructor">
            <summary>设置 BitUtil.BitUtil() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimBitUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimBitVector">
            <summary>Lucene.Net.Util.BitVector 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitVector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitVector.#ctor(Lucene.Net.Util.BitVector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitVector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitVector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimBitVector.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.ClearInt32">
            <summary>设置 BitVector.Clear(Int32 bit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.Clone">
            <summary>设置 BitVector.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.ConstructorByteArrayInt32">
            <summary>设置 BitVector.BitVector(Byte[] bits, Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.ConstructorDirectoryString">
            <summary>设置 BitVector.BitVector(Directory d, String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.ConstructorInt32">
            <summary>设置 BitVector.BitVector(Int32 n) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.Count">
            <summary>设置 BitVector.Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.GetAndSetInt32">
            <summary>设置 BitVector.GetAndSet(Int32 bit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.GetInt32">
            <summary>设置 BitVector.Get(Int32 bit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.GetRecomputedCount">
            <summary>设置 BitVector.GetRecomputedCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.IsSparse">
            <summary>设置 BitVector.IsSparse() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.ReadBitsIndexInput">
            <summary>设置 BitVector.ReadBits(IndexInput input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.ReadDgapsIndexInput">
            <summary>设置 BitVector.ReadDgaps(IndexInput input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.SetInt32">
            <summary>设置 BitVector.Set(Int32 bit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.Size">
            <summary>设置 BitVector.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.StaticConstructor">
            <summary>设置 BitVector.BitVector() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.SubsetInt32Int32">
            <summary>设置 BitVector.Subset(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.WriteBitsIndexOutput">
            <summary>设置 BitVector.WriteBits(IndexOutput output) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.WriteDgapsIndexOutput">
            <summary>设置 BitVector.WriteDgaps(IndexOutput output) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.WriteDirectoryString">
            <summary>设置 BitVector.Write(Directory d, String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.ClearInt32">
            <summary>设置 BitVector.Clear(Int32 bit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.Clone">
            <summary>设置 BitVector.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.Count">
            <summary>设置 BitVector.Count() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.GetAndSetInt32">
            <summary>设置 BitVector.GetAndSet(Int32 bit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.GetInt32">
            <summary>设置 BitVector.Get(Int32 bit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.GetRecomputedCount">
            <summary>设置 BitVector.GetRecomputedCount() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.IsSparse">
            <summary>设置 BitVector.IsSparse() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.ReadBitsIndexInput">
            <summary>设置 BitVector.ReadBits(IndexInput input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.ReadDgapsIndexInput">
            <summary>设置 BitVector.ReadDgaps(IndexInput input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.SetInt32">
            <summary>设置 BitVector.Set(Int32 bit) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.Size">
            <summary>设置 BitVector.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.SubsetInt32Int32">
            <summary>设置 BitVector.Subset(Int32 start, Int32 end) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.WriteBitsIndexOutput">
            <summary>设置 BitVector.WriteBits(IndexOutput output) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.WriteDgapsIndexOutput">
            <summary>设置 BitVector.WriteDgaps(IndexOutput output) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimBitVector.AllInstances.WriteDirectoryString">
            <summary>设置 BitVector.Write(Directory d, String name) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1">
            <summary>Lucene.Net.Util.CloseableThreadLocal`1 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.#ctor(Lucene.Net.Util.CloseableThreadLocal{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.Close">
            <summary>设置 CloseableThreadLocal`1.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.Constructor">
            <summary>设置 CloseableThreadLocal`1.CloseableThreadLocal`1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.Get">
            <summary>设置 CloseableThreadLocal`1.Get() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.InitialValue">
            <summary>设置 CloseableThreadLocal`1.InitialValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.SetT0">
            <summary>设置 CloseableThreadLocal`1.Set(!0 object) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.AllInstances.Close">
            <summary>设置 CloseableThreadLocal`1.Close() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.AllInstances.Get">
            <summary>设置 CloseableThreadLocal`1.Get() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.AllInstances.InitialValue">
            <summary>设置 CloseableThreadLocal`1.InitialValue() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimCloseableThreadLocal`1.AllInstances.SetT0">
            <summary>设置 CloseableThreadLocal`1.Set(!0 object) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimConstants">
            <summary>Lucene.Net.Util.Constants 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimConstants.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimConstants.#ctor(Lucene.Net.Util.Constants)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimConstants.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimConstants.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimConstants.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimConstants.Constructor">
            <summary>设置 Constants.Constants() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimConstants.GetEnvironmentVariableStringString">
            <summary>设置 Constants.GetEnvironmentVariable(String variable, String defaultValueOnSecurityException) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimConstants.IdentString">
            <summary>设置 Constants.Ident(String s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimConstants.StaticConstructor">
            <summary>设置 Constants.Constants() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimConstants.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimDocIdBitSet">
            <summary>Lucene.Net.Util.DocIdBitSet 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimDocIdBitSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimDocIdBitSet.#ctor(Lucene.Net.Util.DocIdBitSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimDocIdBitSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimDocIdBitSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimDocIdBitSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimDocIdBitSet.ConstructorBitArray">
            <summary>设置 DocIdBitSet.DocIdBitSet(BitArray bitSet) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimDocIdBitSet.GetBitSet">
            <summary>设置 DocIdBitSet.GetBitSet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimDocIdBitSet.IsCacheable">
            <summary>设置 DocIdBitSet.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimDocIdBitSet.Iterator">
            <summary>设置 DocIdBitSet.Iterator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimDocIdBitSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimDocIdBitSet.AllInstances.GetBitSet">
            <summary>设置 DocIdBitSet.GetBitSet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimDocIdBitSet.AllInstances.IsCacheable">
            <summary>设置 DocIdBitSet.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimDocIdBitSet.AllInstances.Iterator">
            <summary>设置 DocIdBitSet.Iterator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker">
            <summary>Lucene.Net.Util.FieldCacheSanityChecker 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.#ctor(Lucene.Net.Util.FieldCacheSanityChecker)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.CheckCacheEntryArray">
            <summary>设置 FieldCacheSanityChecker.Check(CacheEntry[] cacheEntries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.CheckSanityCacheEntryArray">
            <summary>设置 FieldCacheSanityChecker.CheckSanity(CacheEntry[] cacheEntries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.CheckSanityFieldCache">
            <summary>设置 FieldCacheSanityChecker.CheckSanity(FieldCache cache) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.Constructor">
            <summary>设置 FieldCacheSanityChecker.FieldCacheSanityChecker() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.GetAllDecendentReaderKeysObject">
            <summary>设置 FieldCacheSanityChecker.GetAllDecendentReaderKeys(Object seed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.SetRamUsageEstimatorRamUsageEstimator">
            <summary>设置 FieldCacheSanityChecker.SetRamUsageEstimator(RamUsageEstimator r) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.AllInstances.CheckCacheEntryArray">
            <summary>设置 FieldCacheSanityChecker.Check(CacheEntry[] cacheEntries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.AllInstances.GetAllDecendentReaderKeysObject">
            <summary>设置 FieldCacheSanityChecker.GetAllDecendentReaderKeys(Object seed) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.AllInstances.SetRamUsageEstimatorRamUsageEstimator">
            <summary>设置 FieldCacheSanityChecker.SetRamUsageEstimator(RamUsageEstimator r) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity">
            <summary>Lucene.Net.Util.FieldCacheSanityChecker+Insanity 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.#ctor(Lucene.Net.Util.FieldCacheSanityChecker.Insanity)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.ConstructorFieldCacheSanityCheckerInsanityTypeStringCacheEntryArray">
            <summary>设置 Insanity.Insanity(InsanityType type, String msg, CacheEntry[] entries) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.GetCacheEntries">
            <summary>设置 Insanity.GetCacheEntries() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.GetMsg">
            <summary>设置 Insanity.GetMsg() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.GetType">
            <summary>设置 Insanity.GetType() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.ToString">
            <summary>设置 Insanity.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.AllInstances.GetCacheEntries">
            <summary>设置 Insanity.GetCacheEntries() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.AllInstances.GetMsg">
            <summary>设置 Insanity.GetMsg() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.AllInstances.GetType01">
            <summary>设置 Insanity.GetType() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanity.AllInstances.ToString01">
            <summary>设置 Insanity.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType">
            <summary>Lucene.Net.Util.FieldCacheSanityChecker+InsanityType 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.#ctor(Lucene.Net.Util.FieldCacheSanityChecker.InsanityType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.ConstructorString">
            <summary>设置 InsanityType.InsanityType(String label) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.StaticConstructor">
            <summary>设置 InsanityType.InsanityType() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.ToString">
            <summary>设置 InsanityType.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimFieldCacheSanityChecker.ShimInsanityType.AllInstances.ToString01">
            <summary>设置 InsanityType.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools">
            <summary>Lucene.Net.Util.IndexableBinaryStringTools 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.#ctor(Lucene.Net.Util.IndexableBinaryStringTools)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.Constructor">
            <summary>设置 IndexableBinaryStringTools.IndexableBinaryStringTools() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.DecodeListOfChar">
            <summary>设置 IndexableBinaryStringTools.Decode(List`1&lt;Char&gt; input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.DecodeListOfCharListOfByte">
            <summary>设置 IndexableBinaryStringTools.Decode(List`1&lt;Char&gt; input, List`1&lt;Byte&gt; output) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.EncodeListOfByte">
            <summary>设置 IndexableBinaryStringTools.Encode(List`1&lt;Byte&gt; input) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.EncodeListOfByteListOfChar">
            <summary>设置 IndexableBinaryStringTools.Encode(List`1&lt;Byte&gt; input, List`1&lt;Char&gt; output) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.GetDecodedLengthListOfChar">
            <summary>设置 IndexableBinaryStringTools.GetDecodedLength(List`1&lt;Char&gt; encoded) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.GetEncodedLengthListOfByte">
            <summary>设置 IndexableBinaryStringTools.GetEncodedLength(List`1&lt;Byte&gt; original) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.StaticConstructor">
            <summary>设置 IndexableBinaryStringTools.IndexableBinaryStringTools() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimIndexableBinaryStringTools.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimMapOfSets`2">
            <summary>Lucene.Net.Util.MapOfSets`2 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimMapOfSets`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimMapOfSets`2.#ctor(Lucene.Net.Util.MapOfSets{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimMapOfSets`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimMapOfSets`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMapOfSets`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMapOfSets`2.ConstructorIDictionaryOfT0DictionaryOfT1T1">
            <summary>设置 MapOfSets`2.MapOfSets`2(IDictionary`2&lt;!0,Dictionary`2&lt;!1,!1&gt;&gt; m) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMapOfSets`2.GetMap">
            <summary>设置 MapOfSets`2.GetMap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMapOfSets`2.PutAllT0DictionaryOfT1T1">
            <summary>设置 MapOfSets`2.PutAll(!0 key, Dictionary`2&lt;!1,!1&gt; vals) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMapOfSets`2.PutT0T1">
            <summary>设置 MapOfSets`2.Put(!0 key, !1 val) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimMapOfSets`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMapOfSets`2.AllInstances.GetMap">
            <summary>设置 MapOfSets`2.GetMap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMapOfSets`2.AllInstances.PutAllT0DictionaryOfT1T1">
            <summary>设置 MapOfSets`2.PutAll(!0 key, Dictionary`2&lt;!1,!1&gt; vals) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMapOfSets`2.AllInstances.PutT0T1">
            <summary>设置 MapOfSets`2.Put(!0 key, !1 val) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimMemoryModel">
            <summary>Lucene.Net.Util.MemoryModel 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimMemoryModel.#ctor(Lucene.Net.Util.MemoryModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimMemoryModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimMemoryModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMemoryModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimMemoryModel.Constructor">
            <summary>设置 MemoryModel.MemoryModel() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimMemoryModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimNumericUtils">
            <summary>Lucene.Net.Util.NumericUtils 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.#ctor(Lucene.Net.Util.NumericUtils)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.AddRangeObjectInt32Int64Int64Int32">
            <summary>设置 NumericUtils.AddRange(Object builder, Int32 valSize, Int64 minBound, Int64 maxBound, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.Constructor">
            <summary>设置 NumericUtils.NumericUtils() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.DoubleToPrefixCodedDouble">
            <summary>设置 NumericUtils.DoubleToPrefixCoded(Double val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.DoubleToSortableLongDouble">
            <summary>设置 NumericUtils.DoubleToSortableLong(Double val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.FloatToPrefixCodedSingle">
            <summary>设置 NumericUtils.FloatToPrefixCoded(Single val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.FloatToSortableIntSingle">
            <summary>设置 NumericUtils.FloatToSortableInt(Single val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.IntToPrefixCodedInt32">
            <summary>设置 NumericUtils.IntToPrefixCoded(Int32 val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.IntToPrefixCodedInt32Int32">
            <summary>设置 NumericUtils.IntToPrefixCoded(Int32 val, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.IntToPrefixCodedInt32Int32CharArray">
            <summary>设置 NumericUtils.IntToPrefixCoded(Int32 val, Int32 shift, Char[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.LongToPrefixCodedInt64">
            <summary>设置 NumericUtils.LongToPrefixCoded(Int64 val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.LongToPrefixCodedInt64Int32">
            <summary>设置 NumericUtils.LongToPrefixCoded(Int64 val, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.LongToPrefixCodedInt64Int32CharArray">
            <summary>设置 NumericUtils.LongToPrefixCoded(Int64 val, Int32 shift, Char[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.PrefixCodedToDoubleString">
            <summary>设置 NumericUtils.PrefixCodedToDouble(String val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.PrefixCodedToFloatString">
            <summary>设置 NumericUtils.PrefixCodedToFloat(String val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.PrefixCodedToIntString">
            <summary>设置 NumericUtils.PrefixCodedToInt(String prefixCoded) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.PrefixCodedToLongString">
            <summary>设置 NumericUtils.PrefixCodedToLong(String prefixCoded) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.SortableIntToFloatInt32">
            <summary>设置 NumericUtils.SortableIntToFloat(Int32 val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.SortableLongToDoubleInt64">
            <summary>设置 NumericUtils.SortableLongToDouble(Int64 val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.SplitIntRangeNumericUtilsIntRangeBuilderInt32Int32Int32">
            <summary>设置 NumericUtils.SplitIntRange(IntRangeBuilder builder, Int32 precisionStep, Int32 minBound, Int32 maxBound) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.SplitLongRangeNumericUtilsLongRangeBuilderInt32Int64Int64">
            <summary>设置 NumericUtils.SplitLongRange(LongRangeBuilder builder, Int32 precisionStep, Int64 minBound, Int64 maxBound) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.SplitRangeObjectInt32Int32Int64Int64">
            <summary>设置 NumericUtils.SplitRange(Object builder, Int32 valSize, Int32 precisionStep, Int64 minBound, Int64 maxBound) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.StaticConstructor">
            <summary>设置 NumericUtils.NumericUtils() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimNumericUtils.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder">
            <summary>Lucene.Net.Util.NumericUtils+IntRangeBuilder 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.#ctor(Lucene.Net.Util.NumericUtils.IntRangeBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.AddRangeInt32Int32Int32">
            <summary>设置 IntRangeBuilder.AddRange(Int32 min, Int32 max, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.AddRangeStringString">
            <summary>设置 IntRangeBuilder.AddRange(String minPrefixCoded, String maxPrefixCoded) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.Constructor">
            <summary>设置 IntRangeBuilder.IntRangeBuilder() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.AllInstances.AddRangeInt32Int32Int32">
            <summary>设置 IntRangeBuilder.AddRange(Int32 min, Int32 max, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimIntRangeBuilder.AllInstances.AddRangeStringString">
            <summary>设置 IntRangeBuilder.AddRange(String minPrefixCoded, String maxPrefixCoded) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder">
            <summary>Lucene.Net.Util.NumericUtils+LongRangeBuilder 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.#ctor(Lucene.Net.Util.NumericUtils.LongRangeBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.AddRangeInt64Int64Int32">
            <summary>设置 LongRangeBuilder.AddRange(Int64 min, Int64 max, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.AddRangeStringString">
            <summary>设置 LongRangeBuilder.AddRange(String minPrefixCoded, String maxPrefixCoded) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.Constructor">
            <summary>设置 LongRangeBuilder.LongRangeBuilder() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.AllInstances.AddRangeInt64Int64Int32">
            <summary>设置 LongRangeBuilder.AddRange(Int64 min, Int64 max, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimNumericUtils.ShimLongRangeBuilder.AllInstances.AddRangeStringString">
            <summary>设置 LongRangeBuilder.AddRange(String minPrefixCoded, String maxPrefixCoded) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimOpenBitSet">
            <summary>Lucene.Net.Util.OpenBitSet 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSet.#ctor(Lucene.Net.Util.OpenBitSet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSet.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AndNotCountOpenBitSetOpenBitSet">
            <summary>设置 OpenBitSet.AndNotCount(OpenBitSet a, OpenBitSet b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AndNotOpenBitSet">
            <summary>设置 OpenBitSet.AndNot(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AndOpenBitSet">
            <summary>设置 OpenBitSet.And(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.Bits2wordsInt64">
            <summary>设置 OpenBitSet.Bits2words(Int64 numBits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.Capacity">
            <summary>设置 OpenBitSet.Capacity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.Cardinality">
            <summary>设置 OpenBitSet.Cardinality() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.ClearInt32Int32">
            <summary>设置 OpenBitSet.Clear(Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.ClearInt64">
            <summary>设置 OpenBitSet.Clear(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.ClearInt64Int64">
            <summary>设置 OpenBitSet.Clear(Int64 startIndex, Int64 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.Clone">
            <summary>设置 OpenBitSet.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.Constructor">
            <summary>设置 OpenBitSet.OpenBitSet() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.ConstructorInt64">
            <summary>设置 OpenBitSet.OpenBitSet(Int64 numBits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.ConstructorInt64ArrayInt32">
            <summary>设置 OpenBitSet.OpenBitSet(Int64[] bits, Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.EnsureCapacityInt64">
            <summary>设置 OpenBitSet.EnsureCapacity(Int64 numBits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.EnsureCapacityWordsInt32">
            <summary>设置 OpenBitSet.EnsureCapacityWords(Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.EqualsObject">
            <summary>设置 OpenBitSet.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.ExpandingWordNumInt64">
            <summary>设置 OpenBitSet.ExpandingWordNum(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FastClearInt32">
            <summary>设置 OpenBitSet.FastClear(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FastClearInt64">
            <summary>设置 OpenBitSet.FastClear(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FastFlipInt32">
            <summary>设置 OpenBitSet.FastFlip(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FastFlipInt64">
            <summary>设置 OpenBitSet.FastFlip(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FastGetInt32">
            <summary>设置 OpenBitSet.FastGet(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FastGetInt64">
            <summary>设置 OpenBitSet.FastGet(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FastSetInt32">
            <summary>设置 OpenBitSet.FastSet(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FastSetInt64">
            <summary>设置 OpenBitSet.FastSet(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FlipAndGetInt32">
            <summary>设置 OpenBitSet.FlipAndGet(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FlipAndGetInt64">
            <summary>设置 OpenBitSet.FlipAndGet(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FlipInt64">
            <summary>设置 OpenBitSet.Flip(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.FlipInt64Int64">
            <summary>设置 OpenBitSet.Flip(Int64 startIndex, Int64 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.GetAndSetInt32">
            <summary>设置 OpenBitSet.GetAndSet(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.GetAndSetInt64">
            <summary>设置 OpenBitSet.GetAndSet(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.GetBitInt32">
            <summary>设置 OpenBitSet.GetBit(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.GetBits">
            <summary>设置 OpenBitSet.GetBits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.GetHashCode">
            <summary>设置 OpenBitSet.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.GetInt32">
            <summary>设置 OpenBitSet.Get(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.GetInt64">
            <summary>设置 OpenBitSet.Get(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.GetNumWords">
            <summary>设置 OpenBitSet.GetNumWords() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.IntersectOpenBitSet">
            <summary>设置 OpenBitSet.Intersect(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.IntersectionCountOpenBitSetOpenBitSet">
            <summary>设置 OpenBitSet.IntersectionCount(OpenBitSet a, OpenBitSet b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.IntersectsOpenBitSet">
            <summary>设置 OpenBitSet.Intersects(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.IsCacheable">
            <summary>设置 OpenBitSet.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.IsEmpty">
            <summary>设置 OpenBitSet.IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.Iterator">
            <summary>设置 OpenBitSet.Iterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.NextSetBitInt32">
            <summary>设置 OpenBitSet.NextSetBit(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.NextSetBitInt64">
            <summary>设置 OpenBitSet.NextSetBit(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.OrOpenBitSet">
            <summary>设置 OpenBitSet.Or(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.RemoveOpenBitSet">
            <summary>设置 OpenBitSet.Remove(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.SetBitsInt64Array">
            <summary>设置 OpenBitSet.SetBits(Int64[] bits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.SetInt64">
            <summary>设置 OpenBitSet.Set(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.SetInt64Int64">
            <summary>设置 OpenBitSet.Set(Int64 startIndex, Int64 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.SetNumWordsInt32">
            <summary>设置 OpenBitSet.SetNumWords(Int32 nWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.Size">
            <summary>设置 OpenBitSet.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.TrimTrailingZeros">
            <summary>设置 OpenBitSet.TrimTrailingZeros() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.UnionCountOpenBitSetOpenBitSet">
            <summary>设置 OpenBitSet.UnionCount(OpenBitSet a, OpenBitSet b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.UnionOpenBitSet">
            <summary>设置 OpenBitSet.Union(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.XorCountOpenBitSetOpenBitSet">
            <summary>设置 OpenBitSet.XorCount(OpenBitSet a, OpenBitSet b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.XorOpenBitSet">
            <summary>设置 OpenBitSet.Xor(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.AndNotOpenBitSet">
            <summary>设置 OpenBitSet.AndNot(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.AndOpenBitSet">
            <summary>设置 OpenBitSet.And(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.Capacity">
            <summary>设置 OpenBitSet.Capacity() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.Cardinality">
            <summary>设置 OpenBitSet.Cardinality() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.ClearInt32Int32">
            <summary>设置 OpenBitSet.Clear(Int32 startIndex, Int32 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.ClearInt64">
            <summary>设置 OpenBitSet.Clear(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.ClearInt64Int64">
            <summary>设置 OpenBitSet.Clear(Int64 startIndex, Int64 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.Clone">
            <summary>设置 OpenBitSet.Clone() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.EnsureCapacityInt64">
            <summary>设置 OpenBitSet.EnsureCapacity(Int64 numBits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.EnsureCapacityWordsInt32">
            <summary>设置 OpenBitSet.EnsureCapacityWords(Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.EqualsObject">
            <summary>设置 OpenBitSet.Equals(Object o) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.ExpandingWordNumInt64">
            <summary>设置 OpenBitSet.ExpandingWordNum(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FastClearInt32">
            <summary>设置 OpenBitSet.FastClear(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FastClearInt64">
            <summary>设置 OpenBitSet.FastClear(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FastFlipInt32">
            <summary>设置 OpenBitSet.FastFlip(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FastFlipInt64">
            <summary>设置 OpenBitSet.FastFlip(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FastGetInt32">
            <summary>设置 OpenBitSet.FastGet(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FastGetInt64">
            <summary>设置 OpenBitSet.FastGet(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FastSetInt32">
            <summary>设置 OpenBitSet.FastSet(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FastSetInt64">
            <summary>设置 OpenBitSet.FastSet(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FlipAndGetInt32">
            <summary>设置 OpenBitSet.FlipAndGet(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FlipAndGetInt64">
            <summary>设置 OpenBitSet.FlipAndGet(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FlipInt64">
            <summary>设置 OpenBitSet.Flip(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.FlipInt64Int64">
            <summary>设置 OpenBitSet.Flip(Int64 startIndex, Int64 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.GetAndSetInt32">
            <summary>设置 OpenBitSet.GetAndSet(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.GetAndSetInt64">
            <summary>设置 OpenBitSet.GetAndSet(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.GetBitInt32">
            <summary>设置 OpenBitSet.GetBit(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.GetBits">
            <summary>设置 OpenBitSet.GetBits() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.GetHashCode01">
            <summary>设置 OpenBitSet.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.GetInt32">
            <summary>设置 OpenBitSet.Get(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.GetInt64">
            <summary>设置 OpenBitSet.Get(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.GetNumWords">
            <summary>设置 OpenBitSet.GetNumWords() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.IntersectOpenBitSet">
            <summary>设置 OpenBitSet.Intersect(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.IntersectsOpenBitSet">
            <summary>设置 OpenBitSet.Intersects(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.IsCacheable">
            <summary>设置 OpenBitSet.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.IsEmpty">
            <summary>设置 OpenBitSet.IsEmpty() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.Iterator">
            <summary>设置 OpenBitSet.Iterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.NextSetBitInt32">
            <summary>设置 OpenBitSet.NextSetBit(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.NextSetBitInt64">
            <summary>设置 OpenBitSet.NextSetBit(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.OrOpenBitSet">
            <summary>设置 OpenBitSet.Or(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.RemoveOpenBitSet">
            <summary>设置 OpenBitSet.Remove(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.SetBitsInt64Array">
            <summary>设置 OpenBitSet.SetBits(Int64[] bits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.SetInt64">
            <summary>设置 OpenBitSet.Set(Int64 index) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.SetInt64Int64">
            <summary>设置 OpenBitSet.Set(Int64 startIndex, Int64 endIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.SetNumWordsInt32">
            <summary>设置 OpenBitSet.SetNumWords(Int32 nWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.Size">
            <summary>设置 OpenBitSet.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.TrimTrailingZeros">
            <summary>设置 OpenBitSet.TrimTrailingZeros() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.UnionOpenBitSet">
            <summary>设置 OpenBitSet.Union(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSet.AllInstances.XorOpenBitSet">
            <summary>设置 OpenBitSet.Xor(OpenBitSet other) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI">
            <summary>Lucene.Net.Util.OpenBitSetDISI 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.#ctor(Lucene.Net.Util.OpenBitSetDISI)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.ConstructorDocIdSetIteratorInt32">
            <summary>设置 OpenBitSetDISI.OpenBitSetDISI(DocIdSetIterator disi, Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.ConstructorInt32">
            <summary>设置 OpenBitSetDISI.OpenBitSetDISI(Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.InPlaceAndDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceAnd(DocIdSetIterator disi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.InPlaceNotDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceNot(DocIdSetIterator disi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.InPlaceOrDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceOr(DocIdSetIterator disi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.InPlaceXorDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceXor(DocIdSetIterator disi) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.AllInstances.InPlaceAndDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceAnd(DocIdSetIterator disi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.AllInstances.InPlaceNotDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceNot(DocIdSetIterator disi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.AllInstances.InPlaceOrDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceOr(DocIdSetIterator disi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetDISI.AllInstances.InPlaceXorDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceXor(DocIdSetIterator disi) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator">
            <summary>Lucene.Net.Util.OpenBitSetIterator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.#ctor(Lucene.Net.Util.OpenBitSetIterator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AdvanceInt32">
            <summary>设置 OpenBitSetIterator.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.ConstructorInt64ArrayInt32">
            <summary>设置 OpenBitSetIterator.OpenBitSetIterator(Int64[] bits, Int32 numWords) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.ConstructorOpenBitSet">
            <summary>设置 OpenBitSetIterator.OpenBitSetIterator(OpenBitSet obs) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.Doc">
            <summary>设置 OpenBitSetIterator.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.DocID">
            <summary>设置 OpenBitSetIterator.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.Next">
            <summary>设置 OpenBitSetIterator.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.NextDoc">
            <summary>设置 OpenBitSetIterator.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.Shift">
            <summary>设置 OpenBitSetIterator.Shift() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.SkipToInt32">
            <summary>设置 OpenBitSetIterator.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.StaticConstructor">
            <summary>设置 OpenBitSetIterator.OpenBitSetIterator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AllInstances.AdvanceInt32">
            <summary>设置 OpenBitSetIterator.Advance(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AllInstances.Doc">
            <summary>设置 OpenBitSetIterator.Doc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AllInstances.DocID">
            <summary>设置 OpenBitSetIterator.DocID() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AllInstances.Next">
            <summary>设置 OpenBitSetIterator.Next() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AllInstances.NextDoc">
            <summary>设置 OpenBitSetIterator.NextDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AllInstances.Shift">
            <summary>设置 OpenBitSetIterator.Shift() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimOpenBitSetIterator.AllInstances.SkipToInt32">
            <summary>设置 OpenBitSetIterator.SkipTo(Int32 target) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimParameter">
            <summary>Lucene.Net.Util.Parameter 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimParameter.#ctor(Lucene.Net.Util.Parameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.Constructor">
            <summary>设置 Parameter.Parameter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.ConstructorString">
            <summary>设置 Parameter.Parameter(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.EqualityOpParameterParameter">
            <summary>设置 Parameter.op_Equality(Parameter p1, Parameter p2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.EqualsObject">
            <summary>设置 Parameter.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.InequalityOpParameterParameter">
            <summary>设置 Parameter.op_Inequality(Parameter p1, Parameter p2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.MakeKeyString">
            <summary>设置 Parameter.MakeKey(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.StaticConstructor">
            <summary>设置 Parameter.Parameter() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.ToString">
            <summary>设置 Parameter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.AllInstances.EqualsObject">
            <summary>设置 Parameter.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.AllInstances.MakeKeyString">
            <summary>设置 Parameter.MakeKey(String name) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimParameter.AllInstances.ToString01">
            <summary>设置 Parameter.ToString() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimPriorityQueue`1">
            <summary>Lucene.Net.Util.PriorityQueue`1 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.#ctor(Lucene.Net.Util.PriorityQueue{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AddT0">
            <summary>设置 PriorityQueue`1.Add(!0 element) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AdjustTop">
            <summary>设置 PriorityQueue`1.AdjustTop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.Clear">
            <summary>设置 PriorityQueue`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.Constructor">
            <summary>设置 PriorityQueue`1.PriorityQueue`1() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.DownHeap">
            <summary>设置 PriorityQueue`1.DownHeap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.GetSentinelObject">
            <summary>设置 PriorityQueue`1.GetSentinelObject() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.InitializeInt32">
            <summary>设置 PriorityQueue`1.Initialize(Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.InsertT0">
            <summary>设置 PriorityQueue`1.Insert(!0 element) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.InsertWithOverflowT0">
            <summary>设置 PriorityQueue`1.InsertWithOverflow(!0 element) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.Pop">
            <summary>设置 PriorityQueue`1.Pop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.PutT0">
            <summary>设置 PriorityQueue`1.Put(!0 element) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.Size">
            <summary>设置 PriorityQueue`1.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.Top">
            <summary>设置 PriorityQueue`1.Top() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.UpHeap">
            <summary>设置 PriorityQueue`1.UpHeap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.UpdateTop">
            <summary>设置 PriorityQueue`1.UpdateTop() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.AddT0">
            <summary>设置 PriorityQueue`1.Add(!0 element) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.AdjustTop">
            <summary>设置 PriorityQueue`1.AdjustTop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.Clear">
            <summary>设置 PriorityQueue`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.DownHeap">
            <summary>设置 PriorityQueue`1.DownHeap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.GetSentinelObject">
            <summary>设置 PriorityQueue`1.GetSentinelObject() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.InitializeInt32">
            <summary>设置 PriorityQueue`1.Initialize(Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.InsertT0">
            <summary>设置 PriorityQueue`1.Insert(!0 element) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.InsertWithOverflowT0">
            <summary>设置 PriorityQueue`1.InsertWithOverflow(!0 element) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.Pop">
            <summary>设置 PriorityQueue`1.Pop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.PutT0">
            <summary>设置 PriorityQueue`1.Put(!0 element) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.Size">
            <summary>设置 PriorityQueue`1.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.Top">
            <summary>设置 PriorityQueue`1.Top() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.UpHeap">
            <summary>设置 PriorityQueue`1.UpHeap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimPriorityQueue`1.AllInstances.UpdateTop">
            <summary>设置 PriorityQueue`1.UpdateTop() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimRamUsageEstimator">
            <summary>Lucene.Net.Util.RamUsageEstimator 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.#ctor(Lucene.Net.Util.RamUsageEstimator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.Constructor">
            <summary>设置 RamUsageEstimator.RamUsageEstimator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.ConstructorBoolean">
            <summary>设置 RamUsageEstimator.RamUsageEstimator(Boolean checkInterned) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.ConstructorMemoryModel">
            <summary>设置 RamUsageEstimator.RamUsageEstimator(MemoryModel memoryModel) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.ConstructorMemoryModelBoolean">
            <summary>设置 RamUsageEstimator.RamUsageEstimator(MemoryModel memoryModel, Boolean checkInterned) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.EstimateRamUsageObject">
            <summary>设置 RamUsageEstimator.EstimateRamUsage(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.HumanReadableUnitsInt64IFormatProvider">
            <summary>设置 RamUsageEstimator.HumanReadableUnits(Int64 bytes, IFormatProvider df) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.SizeObject">
            <summary>设置 RamUsageEstimator.Size(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.SizeOfArrayObject">
            <summary>设置 RamUsageEstimator.SizeOfArray(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.StaticConstructor">
            <summary>设置 RamUsageEstimator.RamUsageEstimator() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.AllInstances.EstimateRamUsageObject">
            <summary>设置 RamUsageEstimator.EstimateRamUsage(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.AllInstances.SizeObject">
            <summary>设置 RamUsageEstimator.Size(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimRamUsageEstimator.AllInstances.SizeOfArrayObject">
            <summary>设置 RamUsageEstimator.SizeOfArray(Object obj) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimReaderUtil">
            <summary>Lucene.Net.Util.ReaderUtil 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimReaderUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimReaderUtil.#ctor(Lucene.Net.Util.ReaderUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimReaderUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimReaderUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimReaderUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimReaderUtil.Constructor">
            <summary>设置 ReaderUtil.ReaderUtil() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimReaderUtil.GatherSubReadersIListOfIndexReaderIndexReader">
            <summary>设置 ReaderUtil.GatherSubReaders(IList`1&lt;IndexReader&gt; allSubReaders, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimReaderUtil.SubIndexInt32Int32Array">
            <summary>设置 ReaderUtil.SubIndex(Int32 n, Int32[] docStarts) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimReaderUtil.SubReaderIndexReaderInt32">
            <summary>设置 ReaderUtil.SubReader(IndexReader reader, Int32 subIndex) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimReaderUtil.SubReaderInt32IndexReader">
            <summary>设置 ReaderUtil.SubReader(Int32 doc, IndexReader reader) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimReaderUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimScorerDocQueue">
            <summary>Lucene.Net.Util.ScorerDocQueue 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimScorerDocQueue.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimScorerDocQueue.#ctor(Lucene.Net.Util.ScorerDocQueue)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimScorerDocQueue.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimScorerDocQueue.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AdjustTop">
            <summary>设置 ScorerDocQueue.AdjustTop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.CheckAdjustElsePopBoolean">
            <summary>设置 ScorerDocQueue.CheckAdjustElsePop(Boolean cond) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.Clear">
            <summary>设置 ScorerDocQueue.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.ConstructorInt32">
            <summary>设置 ScorerDocQueue.ScorerDocQueue(Int32 maxSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.DownHeap">
            <summary>设置 ScorerDocQueue.DownHeap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.InsertScorer">
            <summary>设置 ScorerDocQueue.Insert(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.Pop">
            <summary>设置 ScorerDocQueue.Pop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.PopNoResult">
            <summary>设置 ScorerDocQueue.PopNoResult() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.PutScorer">
            <summary>设置 ScorerDocQueue.Put(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.Size">
            <summary>设置 ScorerDocQueue.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.Top">
            <summary>设置 ScorerDocQueue.Top() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.TopDoc">
            <summary>设置 ScorerDocQueue.TopDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.TopNextAndAdjustElsePop">
            <summary>设置 ScorerDocQueue.TopNextAndAdjustElsePop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.TopScore">
            <summary>设置 ScorerDocQueue.TopScore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.TopSkipToAndAdjustElsePopInt32">
            <summary>设置 ScorerDocQueue.TopSkipToAndAdjustElsePop(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.UpHeap">
            <summary>设置 ScorerDocQueue.UpHeap() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.AdjustTop">
            <summary>设置 ScorerDocQueue.AdjustTop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.CheckAdjustElsePopBoolean">
            <summary>设置 ScorerDocQueue.CheckAdjustElsePop(Boolean cond) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.Clear">
            <summary>设置 ScorerDocQueue.Clear() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.DownHeap">
            <summary>设置 ScorerDocQueue.DownHeap() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.InsertScorer">
            <summary>设置 ScorerDocQueue.Insert(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.Pop">
            <summary>设置 ScorerDocQueue.Pop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.PopNoResult">
            <summary>设置 ScorerDocQueue.PopNoResult() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.PutScorer">
            <summary>设置 ScorerDocQueue.Put(Scorer scorer) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.Size">
            <summary>设置 ScorerDocQueue.Size() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.Top">
            <summary>设置 ScorerDocQueue.Top() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.TopDoc">
            <summary>设置 ScorerDocQueue.TopDoc() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.TopNextAndAdjustElsePop">
            <summary>设置 ScorerDocQueue.TopNextAndAdjustElsePop() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.TopScore">
            <summary>设置 ScorerDocQueue.TopScore() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.TopSkipToAndAdjustElsePopInt32">
            <summary>设置 ScorerDocQueue.TopSkipToAndAdjustElsePop(Int32 target) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimScorerDocQueue.AllInstances.UpHeap">
            <summary>设置 ScorerDocQueue.UpHeap() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimSimpleStringInterner">
            <summary>Lucene.Net.Util.SimpleStringInterner 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.#ctor(Lucene.Net.Util.SimpleStringInterner)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.ConstructorInt32Int32">
            <summary>设置 SimpleStringInterner.SimpleStringInterner(Int32 tableSize, Int32 maxChainLength) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.InternString">
            <summary>设置 SimpleStringInterner.Intern(String s) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSimpleStringInterner.AllInstances.InternString">
            <summary>设置 SimpleStringInterner.Intern(String s) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimSmallFloat">
            <summary>Lucene.Net.Util.SmallFloat 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSmallFloat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSmallFloat.#ctor(Lucene.Net.Util.SmallFloat)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSmallFloat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSmallFloat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSmallFloat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSmallFloat.Byte315ToFloatByte">
            <summary>设置 SmallFloat.Byte315ToFloat(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSmallFloat.Byte52ToFloatByte">
            <summary>设置 SmallFloat.Byte52ToFloat(Byte b) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSmallFloat.ByteToFloatByteInt32Int32">
            <summary>设置 SmallFloat.ByteToFloat(Byte b, Int32 numMantissaBits, Int32 zeroExp) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSmallFloat.Constructor">
            <summary>设置 SmallFloat.SmallFloat() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSmallFloat.FloatToByte315Single">
            <summary>设置 SmallFloat.FloatToByte315(Single f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSmallFloat.FloatToByte52Single">
            <summary>设置 SmallFloat.FloatToByte52(Single f) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSmallFloat.FloatToByteSingleInt32Int32">
            <summary>设置 SmallFloat.FloatToByte(Single f, Int32 numMantissaBits, Int32 zeroExp) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimSmallFloat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimSortedVIntList">
            <summary>Lucene.Net.Util.SortedVIntList 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSortedVIntList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSortedVIntList.#ctor(Lucene.Net.Util.SortedVIntList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSortedVIntList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSortedVIntList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.ConstructorBitArray">
            <summary>设置 SortedVIntList.SortedVIntList(BitArray bits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.ConstructorDocIdSetIterator">
            <summary>设置 SortedVIntList.SortedVIntList(DocIdSetIterator docIdSetIterator) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.ConstructorInt32Array">
            <summary>设置 SortedVIntList.SortedVIntList(Int32[] sortedInts) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.ConstructorInt32ArrayInt32">
            <summary>设置 SortedVIntList.SortedVIntList(Int32[] sortedInts, Int32 inputSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.ConstructorOpenBitSet">
            <summary>设置 SortedVIntList.SortedVIntList(OpenBitSet bits) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.GetByteSize">
            <summary>设置 SortedVIntList.GetByteSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.InitBytes">
            <summary>设置 SortedVIntList.InitBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.IsCacheable">
            <summary>设置 SortedVIntList.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.Iterator">
            <summary>设置 SortedVIntList.Iterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.ResizeBytesInt32">
            <summary>设置 SortedVIntList.ResizeBytes(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.Size">
            <summary>设置 SortedVIntList.Size() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimSortedVIntList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.AllInstances.GetByteSize">
            <summary>设置 SortedVIntList.GetByteSize() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.AllInstances.InitBytes">
            <summary>设置 SortedVIntList.InitBytes() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.AllInstances.IsCacheable">
            <summary>设置 SortedVIntList.IsCacheable() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.AllInstances.Iterator">
            <summary>设置 SortedVIntList.Iterator() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.AllInstances.ResizeBytesInt32">
            <summary>设置 SortedVIntList.ResizeBytes(Int32 newSize) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSortedVIntList.AllInstances.Size">
            <summary>设置 SortedVIntList.Size() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimSorterTemplate">
            <summary>Lucene.Net.Util.SorterTemplate 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSorterTemplate.#ctor(Lucene.Net.Util.SorterTemplate)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSorterTemplate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimSorterTemplate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.Constructor">
            <summary>设置 SorterTemplate.SorterTemplate() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.InsertionSortInt32Int32">
            <summary>设置 SorterTemplate.InsertionSort(Int32 lo, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.LowerInt32Int32Int32">
            <summary>设置 SorterTemplate.Lower(Int32 lo, Int32 hi, Int32 val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.MergeInt32Int32Int32Int32Int32">
            <summary>设置 SorterTemplate.Merge(Int32 lo, Int32 pivot, Int32 hi, Int32 len1, Int32 len2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.MergeSortInt32Int32">
            <summary>设置 SorterTemplate.MergeSort(Int32 lo, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.QuickSortHelperInt32Int32">
            <summary>设置 SorterTemplate.QuickSortHelper(Int32 lo, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.QuickSortInt32Int32">
            <summary>设置 SorterTemplate.QuickSort(Int32 lo, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.RotateInt32Int32Int32">
            <summary>设置 SorterTemplate.Rotate(Int32 lo, Int32 mid, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.UpperInt32Int32Int32">
            <summary>设置 SorterTemplate.Upper(Int32 lo, Int32 hi, Int32 val) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances.InsertionSortInt32Int32">
            <summary>设置 SorterTemplate.InsertionSort(Int32 lo, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances.LowerInt32Int32Int32">
            <summary>设置 SorterTemplate.Lower(Int32 lo, Int32 hi, Int32 val) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances.MergeInt32Int32Int32Int32Int32">
            <summary>设置 SorterTemplate.Merge(Int32 lo, Int32 pivot, Int32 hi, Int32 len1, Int32 len2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances.MergeSortInt32Int32">
            <summary>设置 SorterTemplate.MergeSort(Int32 lo, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances.QuickSortHelperInt32Int32">
            <summary>设置 SorterTemplate.QuickSortHelper(Int32 lo, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances.QuickSortInt32Int32">
            <summary>设置 SorterTemplate.QuickSort(Int32 lo, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances.RotateInt32Int32Int32">
            <summary>设置 SorterTemplate.Rotate(Int32 lo, Int32 mid, Int32 hi) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimSorterTemplate.AllInstances.UpperInt32Int32Int32">
            <summary>设置 SorterTemplate.Upper(Int32 lo, Int32 hi, Int32 val) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimStringHelper">
            <summary>Lucene.Net.Util.StringHelper 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimStringHelper.#ctor(Lucene.Net.Util.StringHelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimStringHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimStringHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringHelper.BytesDifferenceByteArrayInt32ByteArrayInt32">
            <summary>设置 StringHelper.BytesDifference(Byte[] bytes1, Int32 len1, Byte[] bytes2, Int32 len2) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringHelper.Constructor">
            <summary>设置 StringHelper.StringHelper() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringHelper.InternString">
            <summary>设置 StringHelper.Intern(String s) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringHelper.StaticConstructor">
            <summary>设置 StringHelper.StringHelper() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringHelper.StringDifferenceStringString">
            <summary>设置 StringHelper.StringDifference(String s1, String s2) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimStringHelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimStringInterner">
            <summary>Lucene.Net.Util.StringInterner 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimStringInterner.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimStringInterner.#ctor(Lucene.Net.Util.StringInterner)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimStringInterner.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimStringInterner.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringInterner.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringInterner.Constructor">
            <summary>设置 StringInterner.StringInterner() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringInterner.InternCharArrayInt32Int32">
            <summary>设置 StringInterner.Intern(Char[] arr, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringInterner.InternString">
            <summary>设置 StringInterner.Intern(String s) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimStringInterner.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringInterner.AllInstances.InternCharArrayInt32Int32">
            <summary>设置 StringInterner.Intern(Char[] arr, Int32 offset, Int32 len) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimStringInterner.AllInstances.InternString">
            <summary>设置 StringInterner.Intern(String s) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimToStringUtils">
            <summary>Lucene.Net.Util.ToStringUtils 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimToStringUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimToStringUtils.#ctor(Lucene.Net.Util.ToStringUtils)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimToStringUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimToStringUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimToStringUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimToStringUtils.BoostSingle">
            <summary>设置 ToStringUtils.Boost(Single boost) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimToStringUtils.Constructor">
            <summary>设置 ToStringUtils.ToStringUtils() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimToStringUtils.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimUnicodeUtil">
            <summary>Lucene.Net.Util.UnicodeUtil 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.#ctor(Lucene.Net.Util.UnicodeUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.Constructor">
            <summary>设置 UnicodeUtil.UnicodeUtil() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.UTF16toUTF8CharArrayInt32Int32UnicodeUtilUTF8Result">
            <summary>设置 UnicodeUtil.UTF16toUTF8(Char[] source, Int32 offset, Int32 length, UTF8Result result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.UTF16toUTF8CharArrayInt32UnicodeUtilUTF8Result">
            <summary>设置 UnicodeUtil.UTF16toUTF8(Char[] source, Int32 offset, UTF8Result result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.UTF16toUTF8StringInt32Int32UnicodeUtilUTF8Result">
            <summary>设置 UnicodeUtil.UTF16toUTF8(String s, Int32 offset, Int32 length, UTF8Result result) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.UTF8toUTF16ByteArrayInt32Int32UnicodeUtilUTF16Result">
            <summary>设置 UnicodeUtil.UTF8toUTF16(Byte[] utf8, Int32 offset, Int32 length, UTF16Result result) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimUnicodeUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result">
            <summary>Lucene.Net.Util.UnicodeUtil+UTF16Result 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.#ctor(Lucene.Net.Util.UnicodeUtil.UTF16Result)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.Constructor">
            <summary>设置 UTF16Result.UTF16Result() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.CopyTextUnicodeUtilUTF16Result">
            <summary>设置 UTF16Result.CopyText(UTF16Result other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.SetLengthInt32">
            <summary>设置 UTF16Result.SetLength(Int32 newLength) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.AllInstances.CopyTextUnicodeUtilUTF16Result">
            <summary>设置 UTF16Result.CopyText(UTF16Result other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF16Result.AllInstances.SetLengthInt32">
            <summary>设置 UTF16Result.SetLength(Int32 newLength) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result">
            <summary>Lucene.Net.Util.UnicodeUtil+UTF8Result 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.#ctor(Lucene.Net.Util.UnicodeUtil.UTF8Result)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.Constructor">
            <summary>设置 UTF8Result.UTF8Result() 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.SetLengthInt32">
            <summary>设置 UTF8Result.SetLength(Int32 newLength) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimUnicodeUtil.ShimUTF8Result.AllInstances.SetLengthInt32">
            <summary>设置 UTF8Result.SetLength(Int32 newLength) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimVersion">
            <summary>Lucene.Net.Util.Version 的填充码类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimVersion.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimVersion.#ctor(Lucene.Net.Util.Version)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimVersion.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.ShimVersion.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimVersion.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimVersion.ConstructorStringInt32">
            <summary>设置 Version.Version(String name, Int32 v) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimVersion.OnOrAfterVersion">
            <summary>设置 Version.OnOrAfter(Version other) 的 填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimVersion.StaticConstructor">
            <summary>设置 Version.Version() 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.ShimVersion.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.ShimVersion.AllInstances.OnOrAfterVersion">
            <summary>设置 Version.OnOrAfter(Version other) 的 填充码</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubAttributeImpl">
            <summary>Lucene.Net.Util.AttributeImpl 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeImpl.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeImpl.Clear">
            <summary>设置 AttributeImpl.Clear() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeImpl.Clear01">
            <summary>设置 AttributeImpl.Clear() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeImpl.Clone">
            <summary>设置 AttributeImpl.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeImpl.Clone01">
            <summary>设置 AttributeImpl.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeImpl.CopyTo(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeImpl.CopyTo(AttributeImpl target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeImpl.CopyToAttributeImpl">
            <summary>设置 AttributeImpl.CopyTo(AttributeImpl target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeImpl.Equals(System.Object)">
            <summary>设置 AttributeImpl.Equals(Object other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeImpl.EqualsObject">
            <summary>设置 AttributeImpl.Equals(Object other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeImpl.GetHashCode">
            <summary>设置 AttributeImpl.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeImpl.GetHashCode01">
            <summary>设置 AttributeImpl.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeImpl.InitializeStub">
            <summary>初始化 type StubAttributeImpl 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeImpl.ToString">
            <summary>设置 AttributeImpl.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeImpl.ToString01">
            <summary>设置 AttributeImpl.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAttributeImpl.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAttributeImpl.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAttributeImpl.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubAttributeSource">
            <summary>Lucene.Net.Util.AttributeSource 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.#ctor(Lucene.Net.Util.AttributeSource)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.#ctor(Lucene.Net.Util.AttributeSource.AttributeFactory)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.AddAttribute(System.Type)">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.AddAttributeImpl(Lucene.Net.Util.AttributeImpl)">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.AddAttributeImplAttributeImpl">
            <summary>设置 AttributeSource.AddAttributeImpl(AttributeImpl att) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.AddAttributeType">
            <summary>设置 AttributeSource.AddAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.CaptureState">
            <summary>设置 AttributeSource.CaptureState() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.CaptureState01">
            <summary>设置 AttributeSource.CaptureState() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.ClearAttributes">
            <summary>设置 AttributeSource.ClearAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.ClearAttributes01">
            <summary>设置 AttributeSource.ClearAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.CloneAttributes">
            <summary>设置 AttributeSource.CloneAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.CloneAttributes01">
            <summary>设置 AttributeSource.CloneAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.Equals(System.Object)">
            <summary>设置 AttributeSource.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.EqualsObject">
            <summary>设置 AttributeSource.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.GetAttribute(System.Type)">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.GetAttributeClassesIterator">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.GetAttributeClassesIterator01">
            <summary>设置 AttributeSource.GetAttributeClassesIterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.GetAttributeFactory">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.GetAttributeFactory01">
            <summary>设置 AttributeSource.GetAttributeFactory() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.GetAttributeImplsIterator">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.GetAttributeImplsIterator01">
            <summary>设置 AttributeSource.GetAttributeImplsIterator() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.GetAttributeType">
            <summary>设置 AttributeSource.GetAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.GetHashCode">
            <summary>设置 AttributeSource.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.GetHashCode01">
            <summary>设置 AttributeSource.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.HasAttribute(System.Type)">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.HasAttributeType">
            <summary>设置 AttributeSource.HasAttribute(Type attClass) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.HasAttributes">
            <summary>设置 AttributeSource.HasAttributes() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.HasAttributes01">
            <summary>设置 AttributeSource.HasAttributes() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.InitializeStub">
            <summary>初始化 type StubAttributeSource 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.RestoreState(Lucene.Net.Util.AttributeSource.State)">
            <summary>设置 AttributeSource.RestoreState(State state) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.RestoreStateAttributeSourceState">
            <summary>设置 AttributeSource.RestoreState(State state) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAttributeSource.ToString">
            <summary>设置 AttributeSource.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAttributeSource.ToString01">
            <summary>设置 AttributeSource.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAttributeSource.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAttributeSource.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAttributeSource.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel">
            <summary>Lucene.Net.Util.AverageGuessMemoryModel 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.GetArraySize">
            <summary>设置 AverageGuessMemoryModel.GetArraySize() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.GetArraySize01">
            <summary>设置 AverageGuessMemoryModel.GetArraySize() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.GetClassSize">
            <summary>设置 AverageGuessMemoryModel.GetClassSize() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.GetClassSize01">
            <summary>设置 AverageGuessMemoryModel.GetClassSize() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.GetPrimitiveSize(System.Type)">
            <summary>设置 AverageGuessMemoryModel.GetPrimitiveSize(Type clazz) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.GetPrimitiveSizeType">
            <summary>设置 AverageGuessMemoryModel.GetPrimitiveSize(Type clazz) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.GetReferenceSize">
            <summary>设置 AverageGuessMemoryModel.GetReferenceSize() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.GetReferenceSize01">
            <summary>设置 AverageGuessMemoryModel.GetReferenceSize() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.InitializeStub">
            <summary>初始化 type StubAverageGuessMemoryModel 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubAverageGuessMemoryModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubBitUtil">
            <summary>Lucene.Net.Util.BitUtil 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubBitUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubBitUtil.InitializeStub">
            <summary>初始化 type StubBitUtil 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubBitUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubBitUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubBitUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1">
            <summary>Lucene.Net.Util.CloseableThreadLocal`1 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.Close">
            <summary>设置 CloseableThreadLocal`1.Close() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.Close01">
            <summary>设置 CloseableThreadLocal`1.Close() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.Get">
            <summary>设置 CloseableThreadLocal`1.Get() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.Get01">
            <summary>设置 CloseableThreadLocal`1.Get() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.InitialValue">
            <summary>设置 CloseableThreadLocal`1.InitialValue() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.InitialValue01">
            <summary>设置 CloseableThreadLocal`1.InitialValue() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.InitializeStub">
            <summary>初始化 type StubCloseableThreadLocal 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.Set(`0)">
            <summary>设置 CloseableThreadLocal`1.Set(!0 object) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.SetT0">
            <summary>设置 CloseableThreadLocal`1.Set(!0 object) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubCloseableThreadLocal`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubDocIdBitSet">
            <summary>Lucene.Net.Util.DocIdBitSet 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubDocIdBitSet.#ctor(System.Collections.BitArray)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubDocIdBitSet.GetBitSet">
            <summary>设置 DocIdBitSet.GetBitSet() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubDocIdBitSet.GetBitSet01">
            <summary>设置 DocIdBitSet.GetBitSet() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubDocIdBitSet.InitializeStub">
            <summary>初始化 type StubDocIdBitSet 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubDocIdBitSet.IsCacheable">
            <summary>设置 DocIdBitSet.IsCacheable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubDocIdBitSet.IsCacheable01">
            <summary>设置 DocIdBitSet.IsCacheable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubDocIdBitSet.Iterator">
            <summary>设置 DocIdBitSet.Iterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubDocIdBitSet.Iterator01">
            <summary>设置 DocIdBitSet.Iterator() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubDocIdBitSet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubDocIdBitSet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubDocIdBitSet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubIAttribute">
            <summary>Lucene.Net.Util.IAttribute 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubIAttribute.#ctor">
            <summary>初始化 type StubIAttribute 的新实例</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubMapOfSets`2">
            <summary>Lucene.Net.Util.MapOfSets`2 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMapOfSets`2.#ctor(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.Dictionary{`1,`1}})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMapOfSets`2.GetMap">
            <summary>设置 MapOfSets`2.GetMap() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubMapOfSets`2.GetMap01">
            <summary>设置 MapOfSets`2.GetMap() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMapOfSets`2.InitializeStub">
            <summary>初始化 type StubMapOfSets 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMapOfSets`2.Put(`0,`1)">
            <summary>设置 MapOfSets`2.Put(!0 key, !1 val) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMapOfSets`2.PutAll(`0,System.Collections.Generic.Dictionary{`1,`1})">
            <summary>设置 MapOfSets`2.PutAll(!0 key, Dictionary`2&lt;!1,!1&gt; vals) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubMapOfSets`2.PutAllT0DictionaryOfT1T1">
            <summary>设置 MapOfSets`2.PutAll(!0 key, Dictionary`2&lt;!1,!1&gt; vals) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubMapOfSets`2.PutT0T1">
            <summary>设置 MapOfSets`2.Put(!0 key, !1 val) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubMapOfSets`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubMapOfSets`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubMapOfSets`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubMemoryModel">
            <summary>Lucene.Net.Util.MemoryModel 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMemoryModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMemoryModel.GetArraySize">
            <summary>设置 MemoryModel.GetArraySize() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubMemoryModel.GetArraySize01">
            <summary>设置 MemoryModel.GetArraySize() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMemoryModel.GetClassSize">
            <summary>设置 MemoryModel.GetClassSize() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubMemoryModel.GetClassSize01">
            <summary>设置 MemoryModel.GetClassSize() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMemoryModel.GetPrimitiveSize(System.Type)">
            <summary>设置 MemoryModel.GetPrimitiveSize(Type clazz) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubMemoryModel.GetPrimitiveSizeType">
            <summary>设置 MemoryModel.GetPrimitiveSize(Type clazz) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMemoryModel.GetReferenceSize">
            <summary>设置 MemoryModel.GetReferenceSize() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubMemoryModel.GetReferenceSize01">
            <summary>设置 MemoryModel.GetReferenceSize() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubMemoryModel.InitializeStub">
            <summary>初始化 type StubMemoryModel 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubMemoryModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubMemoryModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubMemoryModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubOpenBitSet">
            <summary>Lucene.Net.Util.OpenBitSet 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.#ctor(System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.#ctor(System.Int64[],System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.And(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.And(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.AndNot(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.AndNot(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.AndNotOpenBitSet">
            <summary>设置 OpenBitSet.AndNot(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.AndOpenBitSet">
            <summary>设置 OpenBitSet.And(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Capacity">
            <summary>设置 OpenBitSet.Capacity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.Capacity01">
            <summary>设置 OpenBitSet.Capacity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Cardinality">
            <summary>设置 OpenBitSet.Cardinality() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.Cardinality01">
            <summary>设置 OpenBitSet.Cardinality() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Clear(System.Int64)">
            <summary>设置 OpenBitSet.Clear(Int64 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Clear(System.Int32,System.Int32)">
            <summary>设置 OpenBitSet.Clear(Int32 startIndex, Int32 endIndex) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Clear(System.Int64,System.Int64)">
            <summary>设置 OpenBitSet.Clear(Int64 startIndex, Int64 endIndex) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.ClearInt32Int32">
            <summary>设置 OpenBitSet.Clear(Int32 startIndex, Int32 endIndex) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.ClearInt64">
            <summary>设置 OpenBitSet.Clear(Int64 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.ClearInt64Int64">
            <summary>设置 OpenBitSet.Clear(Int64 startIndex, Int64 endIndex) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Clone">
            <summary>设置 OpenBitSet.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.Clone01">
            <summary>设置 OpenBitSet.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.EnsureCapacity(System.Int64)">
            <summary>设置 OpenBitSet.EnsureCapacity(Int64 numBits) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.EnsureCapacityInt64">
            <summary>设置 OpenBitSet.EnsureCapacity(Int64 numBits) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.EnsureCapacityWords(System.Int32)">
            <summary>设置 OpenBitSet.EnsureCapacityWords(Int32 numWords) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.EnsureCapacityWordsInt32">
            <summary>设置 OpenBitSet.EnsureCapacityWords(Int32 numWords) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Equals(System.Object)">
            <summary>设置 OpenBitSet.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.EqualsObject">
            <summary>设置 OpenBitSet.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.ExpandingWordNum(System.Int64)">
            <summary>设置 OpenBitSet.ExpandingWordNum(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.ExpandingWordNumInt64">
            <summary>设置 OpenBitSet.ExpandingWordNum(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FastClear(System.Int32)">
            <summary>设置 OpenBitSet.FastClear(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FastClear(System.Int64)">
            <summary>设置 OpenBitSet.FastClear(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FastClearInt32">
            <summary>设置 OpenBitSet.FastClear(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FastClearInt64">
            <summary>设置 OpenBitSet.FastClear(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FastFlip(System.Int32)">
            <summary>设置 OpenBitSet.FastFlip(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FastFlip(System.Int64)">
            <summary>设置 OpenBitSet.FastFlip(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FastFlipInt32">
            <summary>设置 OpenBitSet.FastFlip(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FastFlipInt64">
            <summary>设置 OpenBitSet.FastFlip(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FastGet(System.Int32)">
            <summary>设置 OpenBitSet.FastGet(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FastGet(System.Int64)">
            <summary>设置 OpenBitSet.FastGet(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FastGetInt32">
            <summary>设置 OpenBitSet.FastGet(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FastGetInt64">
            <summary>设置 OpenBitSet.FastGet(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FastSet(System.Int32)">
            <summary>设置 OpenBitSet.FastSet(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FastSet(System.Int64)">
            <summary>设置 OpenBitSet.FastSet(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FastSetInt32">
            <summary>设置 OpenBitSet.FastSet(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FastSetInt64">
            <summary>设置 OpenBitSet.FastSet(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Flip(System.Int64)">
            <summary>设置 OpenBitSet.Flip(Int64 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Flip(System.Int64,System.Int64)">
            <summary>设置 OpenBitSet.Flip(Int64 startIndex, Int64 endIndex) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FlipAndGet(System.Int32)">
            <summary>设置 OpenBitSet.FlipAndGet(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.FlipAndGet(System.Int64)">
            <summary>设置 OpenBitSet.FlipAndGet(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FlipAndGetInt32">
            <summary>设置 OpenBitSet.FlipAndGet(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FlipAndGetInt64">
            <summary>设置 OpenBitSet.FlipAndGet(Int64 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FlipInt64">
            <summary>设置 OpenBitSet.Flip(Int64 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.FlipInt64Int64">
            <summary>设置 OpenBitSet.Flip(Int64 startIndex, Int64 endIndex) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Get(System.Int32)">
            <summary>设置 OpenBitSet.Get(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Get(System.Int64)">
            <summary>设置 OpenBitSet.Get(Int64 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.GetAndSet(System.Int32)">
            <summary>设置 OpenBitSet.GetAndSet(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.GetAndSet(System.Int64)">
            <summary>设置 OpenBitSet.GetAndSet(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.GetAndSetInt32">
            <summary>设置 OpenBitSet.GetAndSet(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.GetAndSetInt64">
            <summary>设置 OpenBitSet.GetAndSet(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.GetBit(System.Int32)">
            <summary>设置 OpenBitSet.GetBit(Int32 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.GetBitInt32">
            <summary>设置 OpenBitSet.GetBit(Int32 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.GetBits">
            <summary>设置 OpenBitSet.GetBits() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.GetBits01">
            <summary>设置 OpenBitSet.GetBits() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.GetHashCode">
            <summary>设置 OpenBitSet.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.GetHashCode01">
            <summary>设置 OpenBitSet.GetHashCode() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.GetInt32">
            <summary>设置 OpenBitSet.Get(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.GetInt64">
            <summary>设置 OpenBitSet.Get(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.GetNumWords">
            <summary>设置 OpenBitSet.GetNumWords() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.GetNumWords01">
            <summary>设置 OpenBitSet.GetNumWords() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.InitializeStub">
            <summary>初始化 type StubOpenBitSet 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Intersect(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Intersect(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.IntersectOpenBitSet">
            <summary>设置 OpenBitSet.Intersect(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Intersects(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Intersects(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.IntersectsOpenBitSet">
            <summary>设置 OpenBitSet.Intersects(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.IsCacheable">
            <summary>设置 OpenBitSet.IsCacheable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.IsCacheable01">
            <summary>设置 OpenBitSet.IsCacheable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.IsEmpty">
            <summary>设置 OpenBitSet.IsEmpty() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.IsEmpty01">
            <summary>设置 OpenBitSet.IsEmpty() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Iterator">
            <summary>设置 OpenBitSet.Iterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.Iterator01">
            <summary>设置 OpenBitSet.Iterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.NextSetBit(System.Int32)">
            <summary>设置 OpenBitSet.NextSetBit(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.NextSetBit(System.Int64)">
            <summary>设置 OpenBitSet.NextSetBit(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.NextSetBitInt32">
            <summary>设置 OpenBitSet.NextSetBit(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.NextSetBitInt64">
            <summary>设置 OpenBitSet.NextSetBit(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Or(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Or(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.OrOpenBitSet">
            <summary>设置 OpenBitSet.Or(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Remove(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Remove(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.RemoveOpenBitSet">
            <summary>设置 OpenBitSet.Remove(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Set(System.Int64)">
            <summary>设置 OpenBitSet.Set(Int64 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Set(System.Int64,System.Int64)">
            <summary>设置 OpenBitSet.Set(Int64 startIndex, Int64 endIndex) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.SetBits(System.Int64[])">
            <summary>设置 OpenBitSet.SetBits(Int64[] bits) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.SetBitsInt64Array">
            <summary>设置 OpenBitSet.SetBits(Int64[] bits) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.SetInt64">
            <summary>设置 OpenBitSet.Set(Int64 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.SetInt64Int64">
            <summary>设置 OpenBitSet.Set(Int64 startIndex, Int64 endIndex) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.SetNumWords(System.Int32)">
            <summary>设置 OpenBitSet.SetNumWords(Int32 nWords) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.SetNumWordsInt32">
            <summary>设置 OpenBitSet.SetNumWords(Int32 nWords) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Size">
            <summary>设置 OpenBitSet.Size() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.Size01">
            <summary>设置 OpenBitSet.Size() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.TrimTrailingZeros">
            <summary>设置 OpenBitSet.TrimTrailingZeros() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.TrimTrailingZeros01">
            <summary>设置 OpenBitSet.TrimTrailingZeros() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Union(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Union(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.UnionOpenBitSet">
            <summary>设置 OpenBitSet.Union(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSet.Xor(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Xor(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSet.XorOpenBitSet">
            <summary>设置 OpenBitSet.Xor(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubOpenBitSetDISI">
            <summary>Lucene.Net.Util.OpenBitSetDISI 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.#ctor(Lucene.Net.Search.DocIdSetIterator,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.And(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.And(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.AndNot(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.AndNot(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.AndNotOpenBitSet">
            <summary>设置 OpenBitSet.AndNot(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.AndOpenBitSet">
            <summary>设置 OpenBitSet.And(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Capacity">
            <summary>设置 OpenBitSet.Capacity() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Capacity01">
            <summary>设置 OpenBitSet.Capacity() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Cardinality">
            <summary>设置 OpenBitSet.Cardinality() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Cardinality01">
            <summary>设置 OpenBitSet.Cardinality() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Clear(System.Int64)">
            <summary>设置 OpenBitSet.Clear(Int64 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Clear(System.Int32,System.Int32)">
            <summary>设置 OpenBitSet.Clear(Int32 startIndex, Int32 endIndex) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Clear(System.Int64,System.Int64)">
            <summary>设置 OpenBitSet.Clear(Int64 startIndex, Int64 endIndex) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.ClearInt32Int32">
            <summary>设置 OpenBitSet.Clear(Int32 startIndex, Int32 endIndex) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.ClearInt64">
            <summary>设置 OpenBitSet.Clear(Int64 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.ClearInt64Int64">
            <summary>设置 OpenBitSet.Clear(Int64 startIndex, Int64 endIndex) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Clone">
            <summary>设置 OpenBitSet.Clone() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Clone01">
            <summary>设置 OpenBitSet.Clone() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.EnsureCapacity(System.Int64)">
            <summary>设置 OpenBitSet.EnsureCapacity(Int64 numBits) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.EnsureCapacityInt64">
            <summary>设置 OpenBitSet.EnsureCapacity(Int64 numBits) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.EnsureCapacityWords(System.Int32)">
            <summary>设置 OpenBitSet.EnsureCapacityWords(Int32 numWords) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.EnsureCapacityWordsInt32">
            <summary>设置 OpenBitSet.EnsureCapacityWords(Int32 numWords) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Equals(System.Object)">
            <summary>设置 OpenBitSet.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.EqualsObject">
            <summary>设置 OpenBitSet.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.ExpandingWordNum(System.Int64)">
            <summary>设置 OpenBitSet.ExpandingWordNum(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.ExpandingWordNumInt64">
            <summary>设置 OpenBitSet.ExpandingWordNum(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastClear(System.Int32)">
            <summary>设置 OpenBitSet.FastClear(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastClear(System.Int64)">
            <summary>设置 OpenBitSet.FastClear(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastClearInt32">
            <summary>设置 OpenBitSet.FastClear(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastClearInt64">
            <summary>设置 OpenBitSet.FastClear(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastFlip(System.Int32)">
            <summary>设置 OpenBitSet.FastFlip(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastFlip(System.Int64)">
            <summary>设置 OpenBitSet.FastFlip(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastFlipInt32">
            <summary>设置 OpenBitSet.FastFlip(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastFlipInt64">
            <summary>设置 OpenBitSet.FastFlip(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastGet(System.Int32)">
            <summary>设置 OpenBitSet.FastGet(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastGet(System.Int64)">
            <summary>设置 OpenBitSet.FastGet(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastGetInt32">
            <summary>设置 OpenBitSet.FastGet(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastGetInt64">
            <summary>设置 OpenBitSet.FastGet(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastSet(System.Int32)">
            <summary>设置 OpenBitSet.FastSet(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastSet(System.Int64)">
            <summary>设置 OpenBitSet.FastSet(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastSetInt32">
            <summary>设置 OpenBitSet.FastSet(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FastSetInt64">
            <summary>设置 OpenBitSet.FastSet(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Flip(System.Int64)">
            <summary>设置 OpenBitSet.Flip(Int64 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Flip(System.Int64,System.Int64)">
            <summary>设置 OpenBitSet.Flip(Int64 startIndex, Int64 endIndex) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FlipAndGet(System.Int32)">
            <summary>设置 OpenBitSet.FlipAndGet(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FlipAndGet(System.Int64)">
            <summary>设置 OpenBitSet.FlipAndGet(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FlipAndGetInt32">
            <summary>设置 OpenBitSet.FlipAndGet(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FlipAndGetInt64">
            <summary>设置 OpenBitSet.FlipAndGet(Int64 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FlipInt64">
            <summary>设置 OpenBitSet.Flip(Int64 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.FlipInt64Int64">
            <summary>设置 OpenBitSet.Flip(Int64 startIndex, Int64 endIndex) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Get(System.Int32)">
            <summary>设置 OpenBitSet.Get(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Get(System.Int64)">
            <summary>设置 OpenBitSet.Get(Int64 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetAndSet(System.Int32)">
            <summary>设置 OpenBitSet.GetAndSet(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetAndSet(System.Int64)">
            <summary>设置 OpenBitSet.GetAndSet(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetAndSetInt32">
            <summary>设置 OpenBitSet.GetAndSet(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetAndSetInt64">
            <summary>设置 OpenBitSet.GetAndSet(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetBit(System.Int32)">
            <summary>设置 OpenBitSet.GetBit(Int32 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetBitInt32">
            <summary>设置 OpenBitSet.GetBit(Int32 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetBits">
            <summary>设置 OpenBitSet.GetBits() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetBits01">
            <summary>设置 OpenBitSet.GetBits() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetHashCode">
            <summary>设置 OpenBitSet.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetHashCode01">
            <summary>设置 OpenBitSet.GetHashCode() 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetInt32">
            <summary>设置 OpenBitSet.Get(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetInt64">
            <summary>设置 OpenBitSet.Get(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetNumWords">
            <summary>设置 OpenBitSet.GetNumWords() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.GetNumWords01">
            <summary>设置 OpenBitSet.GetNumWords() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InPlaceAnd(Lucene.Net.Search.DocIdSetIterator)">
            <summary>设置 OpenBitSetDISI.InPlaceAnd(DocIdSetIterator disi) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InPlaceAndDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceAnd(DocIdSetIterator disi) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InPlaceNot(Lucene.Net.Search.DocIdSetIterator)">
            <summary>设置 OpenBitSetDISI.InPlaceNot(DocIdSetIterator disi) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InPlaceNotDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceNot(DocIdSetIterator disi) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InPlaceOr(Lucene.Net.Search.DocIdSetIterator)">
            <summary>设置 OpenBitSetDISI.InPlaceOr(DocIdSetIterator disi) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InPlaceOrDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceOr(DocIdSetIterator disi) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InPlaceXor(Lucene.Net.Search.DocIdSetIterator)">
            <summary>设置 OpenBitSetDISI.InPlaceXor(DocIdSetIterator disi) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InPlaceXorDocIdSetIterator">
            <summary>设置 OpenBitSetDISI.InPlaceXor(DocIdSetIterator disi) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InitializeStub">
            <summary>初始化 type StubOpenBitSetDISI 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Intersect(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Intersect(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.IntersectOpenBitSet">
            <summary>设置 OpenBitSet.Intersect(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Intersects(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Intersects(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.IntersectsOpenBitSet">
            <summary>设置 OpenBitSet.Intersects(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.IsCacheable">
            <summary>设置 OpenBitSet.IsCacheable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.IsCacheable01">
            <summary>设置 OpenBitSet.IsCacheable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.IsEmpty">
            <summary>设置 OpenBitSet.IsEmpty() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.IsEmpty01">
            <summary>设置 OpenBitSet.IsEmpty() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Iterator">
            <summary>设置 OpenBitSet.Iterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Iterator01">
            <summary>设置 OpenBitSet.Iterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.NextSetBit(System.Int32)">
            <summary>设置 OpenBitSet.NextSetBit(Int32 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.NextSetBit(System.Int64)">
            <summary>设置 OpenBitSet.NextSetBit(Int64 index) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.NextSetBitInt32">
            <summary>设置 OpenBitSet.NextSetBit(Int32 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.NextSetBitInt64">
            <summary>设置 OpenBitSet.NextSetBit(Int64 index) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Or(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Or(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.OrOpenBitSet">
            <summary>设置 OpenBitSet.Or(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Remove(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Remove(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.RemoveOpenBitSet">
            <summary>设置 OpenBitSet.Remove(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Set(System.Int64)">
            <summary>设置 OpenBitSet.Set(Int64 index) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Set(System.Int64,System.Int64)">
            <summary>设置 OpenBitSet.Set(Int64 startIndex, Int64 endIndex) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.SetBits(System.Int64[])">
            <summary>设置 OpenBitSet.SetBits(Int64[] bits) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.SetBitsInt64Array">
            <summary>设置 OpenBitSet.SetBits(Int64[] bits) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.SetInt64">
            <summary>设置 OpenBitSet.Set(Int64 index) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.SetInt64Int64">
            <summary>设置 OpenBitSet.Set(Int64 startIndex, Int64 endIndex) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.SetNumWords(System.Int32)">
            <summary>设置 OpenBitSet.SetNumWords(Int32 nWords) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.SetNumWordsInt32">
            <summary>设置 OpenBitSet.SetNumWords(Int32 nWords) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Size">
            <summary>设置 OpenBitSet.Size() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Size01">
            <summary>设置 OpenBitSet.Size() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.TrimTrailingZeros">
            <summary>设置 OpenBitSet.TrimTrailingZeros() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.TrimTrailingZeros01">
            <summary>设置 OpenBitSet.TrimTrailingZeros() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Union(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Union(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.UnionOpenBitSet">
            <summary>设置 OpenBitSet.Union(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.Xor(Lucene.Net.Util.OpenBitSet)">
            <summary>设置 OpenBitSet.Xor(OpenBitSet other) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.XorOpenBitSet">
            <summary>设置 OpenBitSet.Xor(OpenBitSet other) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSetDISI.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubOpenBitSetIterator">
            <summary>Lucene.Net.Util.OpenBitSetIterator 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.#ctor(Lucene.Net.Util.OpenBitSet)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.#ctor(System.Int64[],System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.Advance(System.Int32)">
            <summary>设置 OpenBitSetIterator.Advance(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.AdvanceInt32">
            <summary>设置 OpenBitSetIterator.Advance(Int32 target) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.Doc">
            <summary>设置 OpenBitSetIterator.Doc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.Doc01">
            <summary>设置 OpenBitSetIterator.Doc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.DocID">
            <summary>设置 OpenBitSetIterator.DocID() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.DocID01">
            <summary>设置 OpenBitSetIterator.DocID() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.InitializeStub">
            <summary>初始化 type StubOpenBitSetIterator 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.Next">
            <summary>设置 OpenBitSetIterator.Next() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.Next01">
            <summary>设置 OpenBitSetIterator.Next() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.NextDoc">
            <summary>设置 OpenBitSetIterator.NextDoc() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.NextDoc01">
            <summary>设置 OpenBitSetIterator.NextDoc() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.SkipTo(System.Int32)">
            <summary>设置 OpenBitSetIterator.SkipTo(Int32 target) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.SkipToInt32">
            <summary>设置 OpenBitSetIterator.SkipTo(Int32 target) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubOpenBitSetIterator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubParameter">
            <summary>Lucene.Net.Util.Parameter 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubParameter.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubParameter.Equals(System.Object)">
            <summary>设置 Parameter.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubParameter.EqualsObject">
            <summary>设置 Parameter.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubParameter.InitializeStub">
            <summary>初始化 type StubParameter 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubParameter.ToString">
            <summary>设置 Parameter.ToString() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubParameter.ToString01">
            <summary>设置 Parameter.ToString() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubParameter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubParameter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubParameter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubPriorityQueue`1">
            <summary>Lucene.Net.Util.PriorityQueue`1 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubPriorityQueue`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubPriorityQueue`1.GetSentinelObject">
            <summary>设置 PriorityQueue`1.GetSentinelObject() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubPriorityQueue`1.GetSentinelObject01">
            <summary>设置 PriorityQueue`1.GetSentinelObject() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubPriorityQueue`1.InitializeStub">
            <summary>初始化 type StubPriorityQueue 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubPriorityQueue`1.Insert(`0)">
            <summary>设置 PriorityQueue`1.Insert(!0 element) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubPriorityQueue`1.InsertT0">
            <summary>设置 PriorityQueue`1.Insert(!0 element) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubPriorityQueue`1.InsertWithOverflow(`0)">
            <summary>设置 PriorityQueue`1.InsertWithOverflow(!0 element) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubPriorityQueue`1.InsertWithOverflowT0">
            <summary>设置 PriorityQueue`1.InsertWithOverflow(!0 element) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubPriorityQueue`1.LessThan(`0,`0)">
            <summary>设置 PriorityQueue`1.LessThan(!0 a, !0 b) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubPriorityQueue`1.LessThanT0T0">
            <summary>设置 PriorityQueue`1.LessThan(!0 a, !0 b) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubPriorityQueue`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubPriorityQueue`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubPriorityQueue`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubReaderUtil">
            <summary>Lucene.Net.Util.ReaderUtil 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubReaderUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubReaderUtil.InitializeStub">
            <summary>初始化 type StubReaderUtil 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubReaderUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubReaderUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubReaderUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubScorerDocQueue">
            <summary>Lucene.Net.Util.ScorerDocQueue 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubScorerDocQueue.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubScorerDocQueue.InitializeStub">
            <summary>初始化 type StubScorerDocQueue 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubScorerDocQueue.Insert(Lucene.Net.Search.Scorer)">
            <summary>设置 ScorerDocQueue.Insert(Scorer scorer) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubScorerDocQueue.InsertScorer">
            <summary>设置 ScorerDocQueue.Insert(Scorer scorer) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubScorerDocQueue.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubScorerDocQueue.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubScorerDocQueue.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubSimpleStringInterner">
            <summary>Lucene.Net.Util.SimpleStringInterner 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSimpleStringInterner.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSimpleStringInterner.InitializeStub">
            <summary>初始化 type StubSimpleStringInterner 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSimpleStringInterner.Intern(System.String)">
            <summary>设置 SimpleStringInterner.Intern(String s) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSimpleStringInterner.Intern(System.Char[],System.Int32,System.Int32)">
            <summary>设置 StringInterner.Intern(Char[] arr, Int32 offset, Int32 len) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSimpleStringInterner.InternCharArrayInt32Int32">
            <summary>设置 StringInterner.Intern(Char[] arr, Int32 offset, Int32 len) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSimpleStringInterner.InternString">
            <summary>设置 SimpleStringInterner.Intern(String s) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSimpleStringInterner.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSimpleStringInterner.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSimpleStringInterner.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubSmallFloat">
            <summary>Lucene.Net.Util.SmallFloat 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSmallFloat.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSmallFloat.InitializeStub">
            <summary>初始化 type StubSmallFloat 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSmallFloat.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSmallFloat.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSmallFloat.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubSortedVIntList">
            <summary>Lucene.Net.Util.SortedVIntList 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.#ctor(System.Int32[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.#ctor(Lucene.Net.Search.DocIdSetIterator)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.#ctor(Lucene.Net.Util.OpenBitSet)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.#ctor(System.Collections.BitArray)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.#ctor(System.Int32[],System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.GetByteSize">
            <summary>设置 SortedVIntList.GetByteSize() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSortedVIntList.GetByteSize01">
            <summary>设置 SortedVIntList.GetByteSize() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.InitializeStub">
            <summary>初始化 type StubSortedVIntList 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.IsCacheable">
            <summary>设置 SortedVIntList.IsCacheable() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSortedVIntList.IsCacheable01">
            <summary>设置 SortedVIntList.IsCacheable() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.Iterator">
            <summary>设置 SortedVIntList.Iterator() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSortedVIntList.Iterator01">
            <summary>设置 SortedVIntList.Iterator() 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSortedVIntList.Size">
            <summary>设置 SortedVIntList.Size() 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSortedVIntList.Size01">
            <summary>设置 SortedVIntList.Size() 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSortedVIntList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSortedVIntList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSortedVIntList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubSorterTemplate">
            <summary>Lucene.Net.Util.SorterTemplate 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSorterTemplate.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSorterTemplate.Compare(System.Int32,System.Int32)">
            <summary>设置 SorterTemplate.Compare(Int32 i, Int32 j) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSorterTemplate.CompareInt32Int32">
            <summary>设置 SorterTemplate.Compare(Int32 i, Int32 j) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSorterTemplate.InitializeStub">
            <summary>初始化 type StubSorterTemplate 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSorterTemplate.MergeSort(System.Int32,System.Int32)">
            <summary>设置 SorterTemplate.MergeSort(Int32 lo, Int32 hi) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSorterTemplate.MergeSortInt32Int32">
            <summary>设置 SorterTemplate.MergeSort(Int32 lo, Int32 hi) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSorterTemplate.QuickSort(System.Int32,System.Int32)">
            <summary>设置 SorterTemplate.QuickSort(Int32 lo, Int32 hi) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSorterTemplate.QuickSortInt32Int32">
            <summary>设置 SorterTemplate.QuickSort(Int32 lo, Int32 hi) 的 stub</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubSorterTemplate.Swap(System.Int32,System.Int32)">
            <summary>设置 SorterTemplate.Swap(Int32 i, Int32 j) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubSorterTemplate.SwapInt32Int32">
            <summary>设置 SorterTemplate.Swap(Int32 i, Int32 j) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSorterTemplate.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSorterTemplate.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubSorterTemplate.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubStringInterner">
            <summary>Lucene.Net.Util.StringInterner 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubStringInterner.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubStringInterner.InitializeStub">
            <summary>初始化 type StubStringInterner 的新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubStringInterner.Intern(System.String)">
            <summary>设置 StringInterner.Intern(String s) 的 存根</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubStringInterner.Intern(System.Char[],System.Int32,System.Int32)">
            <summary>设置 StringInterner.Intern(Char[] arr, Int32 offset, Int32 len) 的 存根</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubStringInterner.InternCharArrayInt32Int32">
            <summary>设置 StringInterner.Intern(Char[] arr, Int32 offset, Int32 len) 的 stub</summary>
        </member>
        <member name="F:Lucene.Net.Util.Fakes.StubStringInterner.InternString">
            <summary>设置 StringInterner.Intern(String s) 的 stub</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubStringInterner.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubStringInterner.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubStringInterner.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Lucene.Net.Util.Fakes.StubToStringUtils">
            <summary>Lucene.Net.Util.ToStringUtils 的存根类型</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubToStringUtils.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Lucene.Net.Util.Fakes.StubToStringUtils.InitializeStub">
            <summary>初始化 type StubToStringUtils 的新实例</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubToStringUtils.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubToStringUtils.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Lucene.Net.Util.Fakes.StubToStringUtils.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:System.Fakes.StubICloneable`1">
            <summary>System.ICloneable`1 的存根类型</summary>
        </member>
        <member name="M:System.Fakes.StubICloneable`1.#ctor">
            <summary>初始化 type StubICloneable 的新实例</summary>
        </member>
        <member name="F:System.Fakes.StubICloneable`1.Clone">
            <summary>设置 ICloneable`1.Clone() 的 stub</summary>
        </member>
        <member name="M:System.Fakes.StubICloneable`1.ln::System#ICloneable{T}#Clone">
            <summary>设置 ICloneable`1.Clone() 的 存根</summary>
        </member>
    </members>
</doc>
