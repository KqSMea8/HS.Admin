<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pisen.Framework.Utility</name>
    </assembly>
    <members>
        <member name="T:Pisen.Framework.Utility.CHS2PinYin">
            <summary> 
            汉字转拼音工具 
            </summary> 
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="F:Pisen.Framework.Utility.CHS2PinYin.pv">
            <summary> 
            包含字符ASC 码的整形数组。 
            </summary> 
        </member>
        <member name="F:Pisen.Framework.Utility.CHS2PinYin.ps">
            <summary> 
            包含汉字拼音的字符串数组。 
            </summary> 
        </member>
        <member name="F:Pisen.Framework.Utility.CHS2PinYin.bd">
            <summary> 
            包含要排除处理的字符的字符串数组。 
            </summary> 
        </member>
        <member name="M:Pisen.Framework.Utility.CHS2PinYin.Convert(System.String,System.String,System.Boolean)">
            <summary> 
            将指定中文字符串转换为拼音形式。 
            </summary> 
            <param name="chs">要转换的中文字符串。</param> 
            <param name="separator">连接拼音之间的分隔符。</param> 
            <param name="initialCap">指定是否将首字母大写。</param> 
            <returns>包含中文字符串的拼音的字符串。</returns> 
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CHS2PinYin.Convert(System.String,System.String)">
            <summary> 
            将指定中文字符串转换为拼音形式。 
            </summary> 
            <param name="chs">要转换的中文字符串。</param> 
            <param name="separator">连接拼音之间的分隔符。</param> 
            <returns>包含中文字符串的拼音的字符串。</returns> 
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CHS2PinYin.Convert(System.String,System.Boolean)">
            <summary> 
            将指定中文字符串转换为拼音形式。 
            </summary> 
            <param name="chs">要转换的中文字符串。</param> 
            <param name="initialCap">指定是否将首字母大写。</param> 
            <returns>包含中文字符串的拼音的字符串。</returns> 
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CHS2PinYin.Convert(System.String)">
            <summary> 
            将指定中文字符串转换为拼音形式。 
            </summary> 
            <param name="chs">要转换的中文字符串。</param> 
            <returns>包含中文字符串的拼音的字符串。</returns> 
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CHS2PinYin.TransCapital(System.String)">
            <summary> 
            转换为汉字拼音首字母 
            </summary> 
            <param name="chs">字符串</param> 
            <returns>汉字拼音首字母 </returns> 
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.CHS2PinYin.Phrase">
            <summary> 
            设置或获取包含列外词组读音的键/值对的组合。 
            </summary> 
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.CookieUtil">
            <summary>
            Cookie工具类
            </summary>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CookieUtil.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            保存Cookie
            </summary>
            <param name="key">Cookie名称</param>
            <param name="value">Cookie值</param>
            <param name="expires">过期时间</param>
            <returns></returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CookieUtil.SetCookie(System.String,System.String)">
            <summary>
            保存Cookie
            </summary>
            <param name="key">Cookie名称</param>
            <param name="value">Cookie值</param>
            <returns></returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CookieUtil.Get(System.String)">
            <summary>
            获取Cookie
            </summary>
            <param name="key">Cookie名称</param>
            <returns>cookie字符串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CookieUtil.GetCookie(System.String)">
            <summary>
            返回指定名称的Cookie实例
            </summary>
            <param name="name">Cookie名称</param>
            <returns>Cookie对象</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CookieUtil.Get``1(System.String)">
            <summary>
            返回将指定名称的Cookie的值反序列化的对象
            </summary>
            <typeparam name="T">返回的对象类型</typeparam>
            <param name="name">Cookie名称</param>
            <returns>Cookie字符串反序列化后后对象</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.CookieUtil.Set(System.Web.HttpCookie)">
            <summary>
            将指定的Cookie对象写入Response
            </summary>
            <param name="cookie">Cookie对象</param>
            <returns></returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.DataUtil">
            <summary>
            数据工具类
            </summary>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.DataUtil.HasRow(System.Data.DataSet)">
            <summary>
            检查DataSet中是否有数据行
            </summary>
            <param name="ds">待检查的DataSet</param>
            <returns>
            <c>true:存在</c>
            <c>false:不存在</c>
            </returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.DataUtil.GetDataReader``1(System.Object)">
            <summary>
            将DataReader值转换为其它数据类型
            </summary>
            <typeparam name="T">目标数据类型</typeparam>
            <param name="value">要转换的数据</param>
            <returns>转换后的数据</returns>
            <remarks>
            创建 by 杨文兵 2013-03-06
            修改 2013-03-29 杨文兵 如果T为日期并且为空 默认值改为sql server中的最小日期1753-1-1 12:00:00
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.DataUtil.GetDataReader(System.Object)">
            <summary>
            将DataReader值转换为字符串
            </summary>
            <param name="value">要转换的数据</param>
            <returns>转换后的字符串</returns>
            <remarks>
            创建 by 杨文兵 2013-03-06
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.DataUtil.ObjectSize(System.Object)">
            <summary>
            返回对象大小(为估算)
            </summary>
            <param name="obj">对象</param>
            <returns>字节B</returns>
            <remarks>2013-8-9 yangheyu Add</remarks>
            <remarks>2013-8-21 黄志勇 修改</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.DateUtil">
            <summary>
            日期工具类
            </summary>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.DateUtil.GetMonday(System.DateTime)">
            <summary>
            计算周一
            </summary>
            <param name="date">日期</param>
            <returns>周一</returns>
            <remarks>2013-12-10 黄志勇 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.DateUtil.GetSunday(System.DateTime)">
            <summary>
            计算周日
            </summary>
            <param name="date">日期</param>
            <returns>周日</returns>
            <remarks>2013-12-10 黄志勇 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.DateUtil.GetMonthFirst(System.DateTime)">
            <summary>
            计算月初
            </summary>
            <param name="date">日期</param>
            <returns>月初</returns>
            <remarks>2013-12-10 黄志勇 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.DateUtil.GetMonthLast(System.DateTime)">
            <summary>
            计算月末
            </summary>
            <param name="date">日期</param>
            <returns>月末</returns>
            <remarks>2013-12-10 黄志勇 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.EmailTemplate">
            <summary>
            email 模板处理类
            </summary>
            <remarks>何方 创建 20130304</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EmailTemplate.GetContent(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取邮件内容
            </summary>
            <param name="templatePath">模板路径</param>
            <param name="beginTag">替换内容开始标志</param>
            <param name="endTag">替换内容结束标志</param>
            <param name="values">用来替换的数据</param>
            <returns>邮件模板</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EmailTemplate.GetContent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获取邮件内容
            </summary>
            <param name="templatePath">模板路径</param>
            <param name="values">用来替换的数据</param>
            <returns>邮件模板</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.EncryptionUtil">
            <summary>
            加密解密工具
            </summary>
            <remarks>2013－06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EncryptionUtil.EncryptWithMd5(System.String)">
            <summary>
            对字符串进行MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>加密后的小写字符串</returns>
            <remarks>2013－06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EncryptionUtil.EncryptWithMd5AndSalt(System.String)">
            <summary>
            对字符串附加随机字符进行MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>加密后的小写字符串</returns>
            <remarks>2013－06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EncryptionUtil.VerifyCiphetrextWithMd5AndSalt(System.String,System.String)">
            <summary>
            对加密字符串（字符串附加随机字符进行MD5加密后的字符串）进行验证
            </summary>
            <param name="unencrypted">明文</param>
            <param name="encrypted">密文</param>
            <returns>验证结果</returns>
            <remarks>2013－06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EncryptionUtil.MD5Encrypt(System.String)">
            <summary>  
            给一个字符串进行MD5加密  
            </summary>  
            <param name="strText">待加密字符串</param>  
            <returns>加密后的字符串</returns>
            <remarks>2013－06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EncryptionUtil.EncryptDES(System.String,System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EncryptionUtil.DecryptDES(System.String,System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串，失败返源串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.EnumUtil">
            <summary>
            枚举工具
            </summary>
            <remarks>2013-6-18 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EnumUtil.ToDictionary(System.Type)">
            <summary>
            枚举转换成字典
            </summary>
            <param name="enumType">枚举类型</param>
            <returns>字典</returns>
            <remarks>2013-6-18 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EnumUtil.GetDescription(System.Enum)">
            <summary>
            获取枚举类型Description(没有缓存)
            </summary>
            <param name="e">枚举类型</param>
            <returns>Description</returns>
            <remarks>2013-6-18 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EnumUtil.GetDescription(System.Type,System.Int32)">
            <summary>
            获取枚举值对应的显示名称(取缓存)
            </summary>
            <param name="enumType">枚举类型</param>
            <param name="intValue">枚举项对应的int值</param>
            <returns>枚举名称</returns>
            <remarks>2013-6-18 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EnumUtil.GetDescription(System.Type,System.Object)">
            <summary>
            返回指定枚举类型的指定名称或值的描述
            </summary>
            <param name="type">枚举类型</param>
            <param name="value">枚举名称或值</param>
            <returns>枚举的描述</returns>
            <remarks>2013-08-14 黄志勇 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EnumUtil.ToListItem``1">
            <summary>
            转换Enum到SelectListItem
            </summary>
            <typeparam name="T">T</typeparam>
            <returns>Text:Description Value:Name</returns>
            <remarks>2013-08-14 黄志勇 创建</remarks>
        </member>
        <!-- 对于成员“M:Pisen.Framework.Utility.EnumUtil.Apply``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:Pisen.Framework.Utility.EnumUtil.ApplyParallel``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})”忽略有格式错误的 XML 注释 -->
        <member name="M:Pisen.Framework.Utility.EnumUtil.ToListItem``1(System.Collections.Generic.List{System.Web.Mvc.SelectListItem}@)">
            <summary>
            转换Enum到SelectListItem
            </summary>
            <typeparam name="T">T</typeparam>
            <returns>返回List SelectListItem </returns>
            <remarks>2013-06-14 周唐炬 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.EnumUtil.ToJson(System.Type)">
            <summary>
            将枚举转换成Json数据
            </summary>
            <param name="enumType">枚举类型</param>
            <returns>返回object类型的动态类 </returns>
            <remarks>2013-6-18 杨合余 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.ExcelUtil">
            <summary>
            Excel导入导出工具类
            </summary>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.ExcelUtil.Export``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            导出到Excel(web版)
            </summary>
            <param name="sourceData">源数据</param>
            <param name="headerList">列名</param>
            <param name="fileName">文件名</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.ExcelUtil.ExportFromTemplate``1(System.Collections.Generic.IList{``0},System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            模板导出Excel
            </summary>
            <param name="sourceData">源数据</param>
            <param name="filePath">模板文件路径(\Templates\Excel\xxx.xls)</param>
            <param name="startRowNum">数据开始行数(从0开始)</param>
            <param name="fileName">文件名</param>
            <param name="dateFormat">日期格式</param>
            <param name="isInsertName">是否在表格中插入文件名(默认为true)</param>
            <returns>空</returns>
            <remarks>
            黄伟 2013-12-17 创建
            2013-12-25 周唐炬 修改日期数据格式
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.ExcelUtil.ImportExcel(System.IO.Stream,System.String[])">
            <summary>
            excel import
            </summary>
            <param name="stream">Stream instance</param>
            <param name="cols">the cols to import from</param>
            <returns>datatable(null indicate at least one of the cols specified cannot be found )</returns>
            <remarks>2013-10-11 huangwei created</remarks>
            <remarks>2014-03-27 黄志勇 修改</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Extension.EnumerableExtension">
            <summary>
            扩展集合方法
            </summary>
            <remarks> 2013-6-26 杨合余 添加 </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            遍历执行迭代器中的每一项
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="items">集合项</param>
            <param name="action">委托方法</param>
            <returns></returns>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.Join``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            用指定分隔符拼接集合
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="items">集合对象</param>
            <param name="delimeter">分隔符</param>
            <returns>拼接后的字符串</returns>
            <remarks> 2013-6-26 杨合余 添加 </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.JoinDelimited``1(System.Collections.Generic.IList{``0},System.String,System.Func{``0,System.String})">
            <summary>
            用指定分隔符拼接集合项
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="items">对象</param>
            <param name="delimeter">分隔符</param>
            <param name="appender">使用指定方法处理</param>
            <returns>拼接后的字符串</returns>
            <remarks> 2013-6-26 杨合余 添加 </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.JoinDelimitedWithNewLine``1(System.Collections.Generic.IList{``0},System.String,System.Int32,System.String,System.Func{``0,System.String})">
            <summary>
            用指定分隔符拼接集合项
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="items">对象</param>
            <param name="delimeter">分隔符</param>
            <param name="newLineAfterCount">指定行插入指定字符</param>
            <param name="newLineText">指定字符</param>
            <param name="appender">代理方法</param>
            <returns>拼接后的字符串</returns>
            <remarks> 2013-6-26 杨合余 添加 </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.AsDelimited``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            转换可枚举集合到一个分隔的字符串
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="items">对象</param>
            <param name="delimeter">分隔符</param>
            <returns>拼接后的字符串</returns>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether the specified enumerable collection is empty.
            Note: This method has the side effect of moving the position of
            the enumerator back to the starting position. Normally, this
            shouldn't effect anything unless you have a non-standard IEnumerable
            implementation.
            See also <a href="http://stackoverflow.com/questions/41319/checking-if-a-list-is-empty-with-linq"></a>.
            </summary>
            <typeparam name="T">Type of items to use.</typeparam>
            <param name="items">Enumerable to test</param>
            <returns>
            	<c>true</c> if the specified collection is empty; otherwise, <c>false</c>.
            </returns>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether the specified enumerable collection is empty.
            Note: This method has the side effect of moving the position of
            the enumerator back to the starting position.
            </summary>
            <typeparam name="T">Type of items to use.</typeparam>
            <param name="items">Enumerable to test</param>
            <returns>
            	<c>true</c> if the specified collection is empty; otherwise, <c>false</c>.
            </returns>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.HasAnyNulls``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Check for any nulls.
            </summary>
            <typeparam name="T">Type of items to use.</typeparam>
            <param name="items">List of items.</param>
            <returns>True if a null is present in the list.</returns>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.IsTrueForAny``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Check if any of the items in the collection satisfied by the condition.
            </summary>
            <typeparam name="T">Type of items to use.</typeparam>
            <param name="items">List of items to use.</param>
            <param name="executor">Function to call for each item.</param>
            <returns>True if the executor returned True for at least one item.</returns>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.IsTrueForAll``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Check if all of the items in the collection satisfied by the condition.
            </summary>
            <typeparam name="T">Type of items to use.</typeparam>
            <param name="items">List of items.</param>
            <param name="executor">Function to call for each item.</param>
            <returns>True if the executor returned true for all items.</returns>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Extension.EnumerableExtension.ToDictionary``1(System.Collections.Generic.IList{``0})">
            <summary>
            将Ilist类型转换为IDictionary类型
            </summary>
            <typeparam name="T">Type of items to use.</typeparam>
            <param name="items">List of items.</param>
            <returns>Converted list as dictionary.</returns>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.FileUtil">
            <summary>
            文件工具类
            </summary>
            <remarks>2013-08-13 唐永勤 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.FileUtil.ReadFile(System.String)">
            <summary>
            读取文件内容
            </summary>
            <param name="path">文件全路径</param>
            <returns>文件内容</returns>
            <remarks>2013-08-13 唐永勤 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.FileUtil.HasFile(System.String)">
            <summary>
            文件是否存在
            </summary>
            <param name="filePath">文件路径</param>
            <returns>存在:true  不存在:false</returns>
            <remarks>2013-12-30 黄波 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.ForeVerifyCodeUtil">
            <summary>
            生成验证码（前台）
            </summary>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.#ctor">
            <summary>
            生成验证码
            </summary>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.#ctor(System.String)">
            <summary>
            生成验证码
            </summary>
            <param name="code">验证码字符串</param>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.#ctor(System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="code">验证码长度</param>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="code">验证码字符串</param>
            <param name="fontSize">字体大小</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
            <param name="padding">图片内边距</param>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="length">验证码长度</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
            <param name="padding">图片内边距</param>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="fontSize">字体大小</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
            <param name="padding">图片内边距</param>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="fontSize">字体大小</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.CreateImageCode">
            <summary>
            生成校验码图片
            校验码保存在Session["ImgGen"]中
            </summary>
            <returns>Bitmap</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.ForeVerifyCodeUtil.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片（Edit By 51aspx.com）
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns></returns>
        </member>
        <member name="P:Pisen.Framework.Utility.ForeVerifyCodeUtil.Code">
            <summary>
            验证码字符串
            </summary>
        </member>
        <member name="T:Pisen.Framework.Utility.FormatUtil">
            <summary>
            格式化工具类
            </summary>
            <remarks>2013-10-16 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.FormatUtil.PhoneFormat(System.String)">
            <summary>
            格式化手机号码
            </summary>
            <param name="phone">手机号码</param>
            <returns>XXX****XXXX</returns>
            <remarks>2013-10-16 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.FormatUtil.GetUnicodeSubString(System.String,System.Int32,System.String)">
            <summary>
            格式化字串长度(汉字一个算两个)
            </summary>
            <param name="str">要检测的字串</param>
            <param name="len">指定检测长度</param>
            <param name="p_TailString">用于替代被截掉字符的字串</param>
            <returns>格式化后的字串</returns>
            <remarks>2013-03-19 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.FormatUtil.IListToString(System.Collections.Generic.IList{System.Int32},System.String)">
            <summary>
            将 “IList”转换为用separator分开的字符串
            </summary>
            <param name="intList">The int list.</param>
            <param name="separator">The separator.</param>
            <returns>字符串</returns>
            <remarks>
            2013-03-12 杨文兵 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.FormatUtil.IEnumerableToString``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            将 “IList”转换为用separator分开的字符串
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="list">要连接的对象</param>
            <param name="separator">分隔符</param>
            <returns></returns>
            <remarks>2013-10-16 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.FormatUtil.FormatCurrency(System.Object,System.Byte,System.String)">
            <summary>
            货币格式化
            </summary>
            <param name="number">输入数字</param>
            <param name="reserve">小数保留位数</param>
            <param name="symbol">货币符号</param>
            <returns>格式化数据</returns>
            <remarks>2013-07-01 朱家宏 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.FormatUtil.FormatByteCount(System.Int64)">
            <summary>
            字节格式化成友好大小
            </summary>
            <param name="bytes">字节</param>
            <returns>格式化数据</returns>
            <remarks>2013-08-13 黄志勇 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Net.FtpUtil">
            <summary>
            FTP工具类
            </summary>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.#ctor(System.String,System.String,System.String)">
            <summary>
            FTP工具
            </summary>
            <param name="uri">FTP地址</param>
            <param name="name">用户名</param>
            <param name="password">密码</param>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.Conn(System.String)">
            <summary>
            连接类
            </summary>
            <param name="uri">ftp地址</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.DeleteFileName(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="fileName">文件名</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.UploadFile(System.String,System.String,System.Byte[],System.String@)">
            <summary>
            上传文件，使用FTPWebRequest、FTPWebResponse实例
            </summary>
            <param name="uri">ftp地址</param>
            <param name="fileName">文件名</param>
            <param name="fileData">文件内容</param>
            <param name="msg">传出参数，返回传输结果</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.UploadFileByWebClient(System.String,System.String,System.Byte[],System.String@)">
            <summary>
            上传文件，使用WebClient类
            </summary>
            <param name="uri">ftp地址</param>
            <param name="fileName">文件名</param>
            <param name="fileData">文件内容</param>
            <param name="msg">传出参数，输出传输结果</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.DownloadFile(System.String,System.String,System.String@)">
            <summary>
            下载文件，使用FTPWebRequest、FTPWebResponse实例
            </summary>
            <param name="uri">ftp地址</param>
            <param name="destinationDir">目标文件存放地址</param>
            <param name="msg">传出参数，返回传输结果</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.DownloadFileByWebClient(System.String,System.String)">
            <summary>
            文件下载，使用WebClient类
            </summary>
            <param name="uri">ftp服务地址</param>
            <param name="destinationDir">存放目录</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.FileStream(System.String,System.String@)">
            <summary>
            获取文件流 
            </summary>
            <param name="uri">FTP文件地址</param>
            <param name="msg">消息</param>
            <returns>文件流</returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.GetListDirectoryDetails">
            <summary>
            遍历文件
            </summary>
            <returns>文件列表数组</returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.Upload(System.IO.MemoryStream,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="mstr">文件流</param>
            <param name="ftpUri">上传到的完整路径</param>
            <returns>上传结果</returns>
            <remarks>2013-7-25 黄波  修改</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.Upload(System.Byte[],System.String)">
            <summary>
            上传文件
            </summary>
            <param name="mstr">文件字节数组</param>
            <param name="ftpUri">FTP存放位置</param>
            <returns>上传结果</returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.RenameFileName(System.String,System.String)">
            <summary>
            重命名文件
            </summary>
            <param name="fileName">文件名</param>
            <param name="reNameFileName">新文件名</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="fileName">文件名</param>
            <returns>删除结果</returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.CheckMakeDir(System.String)">
            <summary>
            检查Ftp文件夹是否存在，不存在则创建
            </summary>
            <param name="ftpDirectoryPath">Ftp目录地址(eg:ftp://222.222.222.222:21/2013/08/05/ )</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.FtpDirectoryExists(System.String)">
            <summary>
            检查FTP文件夹是否存在
            </summary>
            <param name="directoryPath">FTP文件路径</param>
            <returns>true:存在 false:不存在</returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Net.FtpUtil.MakeDir(System.String)">
            <summary>
            创建FTP目录
            </summary>
            <param name="dirName">目录名称</param>
            <returns></returns>
            <remarks>2013-7-3 杨合余 添加</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.ImageUtil">
            <summary>
            图片工具类
            </summary>
            <remarks>2013-03-14 罗雄伟 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.ImageUtil.CreateThumbnail(System.IO.Stream,System.Int32,System.Int32,Pisen.Framework.Utility.ImageUtil.ThumbnailMode)">
            <summary>
            创建高清缩略图
            </summary>
            <param name="imgStream">原图路径</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <param name="mode">尺寸模式</param>
            <returns>图片流</returns>
            <remarks>
            2013-03-14 罗雄伟 创建
            2013-04-09 吴文强 修改
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.ImageUtil.ConvertToJpg(System.IO.Stream)">
            <summary>
            将图片转换为jpg格式
            </summary>
            <param name="imgStream">文件流</param>
            <returns>转换后的文件</returns>
            <remarks>2013-7-30 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.ImageUtil.StreamConvertToBytes(System.IO.Stream)">
            <summary>
            流转换为Bytes
            </summary>
            <param name="stream">数据流</param>
            <returns>图片字节数组</returns>
            <remarks>2013-03-14 罗雄伟 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.ImageUtil.ThumbnailMode">
            <summary>
            略缩图类型
            </summary>
            <remarks>2013-03-14 罗雄伟 创建</remarks>
        </member>
        <member name="F:Pisen.Framework.Utility.ImageUtil.ThumbnailMode.Width">
            <summary>
            固定宽度，高度做相应计算
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.ImageUtil.ThumbnailMode.Height">
            <summary>
            固定高度，宽度做相应计算
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.ImageUtil.ThumbnailMode.WidthHeighLimitted">
            <summary>
            固定宽度和高度
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.ImageUtil.ThumbnailMode.Cut">
            <summary>
            指定高宽裁减（不变形） yhy
            </summary>
        </member>
        <member name="T:Pisen.Framework.Utility.Log.ILog">
            <summary>
            日志接口
            </summary>
            <remarks>2013-3-21 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.ILog.WriteLog(System.Exception,Pisen.Framework.Utility.Log.Level)">
            <summary>
            在默认位置记录异常日志
            </summary>
            <param name="ex">异常</param>
            <param name="level">日志等级 level.</param>
            <returns>
            返回日志ID
            </returns>
            <remarks>
            2014-01-03 何方 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.ILog.WriteLog(System.String,System.Exception,Pisen.Framework.Utility.Log.Level)">
            <summary>
            在指定位置记录异常日志
            </summary>
            <param name="filepath">日志路径</param>
            <param name="ex">异常</param>
            <param name="level">日志等级 level.</param>
            <returns></returns>
            <remarks>
            2013-04-03 何方 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.ILog.WriteLog(System.String,Pisen.Framework.Utility.Log.Level)">
            <summary>
            在默认位置写日志
            </summary>
            <param name="message">日志内容</param>
            <param name="level">日志等级 level.</param>
            <returns>
            返回日志ID
            </returns>
            <remarks>
            2014-01-03 何方 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.ILog.WriteLog(System.String,System.String,Pisen.Framework.Utility.Log.Level)">
            <summary>
            在指定位置写日志
            </summary>
            <param name="filepath">日志路径</param>
            <param name="message">日志内容</param>
            <param name="level">日志等级 level.</param>
            <returns></returns>
            <remarks>
            2013-04-03 何方 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.ILog.WriteLog(System.String,System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="fileName">文件名</param>
            <param name="content">内容</param>
            <remarks>
            2013-12-25 黄志 创建
            </remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Log.Level">
            <summary>
            日志类型
            </summary>
            <remarks>2014-1-21 杨合余 创建</remarks>
        </member>
        <member name="F:Pisen.Framework.Utility.Log.Level.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Log.Level.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Log.Level.Debug">
            <summary>
            错误记录
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Log.Level.Error">
            <summary>
            异常
            </summary>
        </member>
        <member name="T:Pisen.Framework.Utility.Log.LogFile">
            <summary>
            日志Helper    
            </summary>
            <remarks>2013-3-21 添加 杨合余</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.LogFile.WriteLog(System.Exception,Pisen.Framework.Utility.Log.Level)">
            <summary>
            在默认位置记录异常日志
            </summary>
            <param name="ex">异常</param>
            <param name="level">日志等级.</param>
            <returns></returns>
            <remarks>
            2014-01-03 何方 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.LogFile.WriteLog(System.String,System.Exception,Pisen.Framework.Utility.Log.Level)">
            <summary>
            在默认位置记录异常日志
            </summary>
            <param name="filepath">The filepath.</param>
            <param name="ex">异常</param>
            <param name="level">日志等级 level.</param>
            <returns></returns>
            <remarks>
            2013-04-03 何方 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.LogFile.WriteLog(System.String,Pisen.Framework.Utility.Log.Level)">
            <summary>
            在指定位置写日志
            </summary>
            <param name="message">日志内容</param>
            <param name="level">日志等级 level.</param>
            <returns></returns>
            <remarks>
            2014-01-03 何方 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.LogFile.WriteLog(System.String,System.String,Pisen.Framework.Utility.Log.Level)">
            <summary>
            记录log日志
            </summary>
            <param name="filepath">文件路径，硬盘地址</param>
            <param name="str">要写入的内容</param>
            <param name="level">日志等级 level.</param>
            <returns></returns>
            <remarks>
            2014-01-03 何方 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.LogFile.WriteLog(System.String,System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="filePath">文件路径</param>
            <param name="fileName">文件名</param>
            <param name="content">内容</param>
            <remarks>
            2013-12-25 黄志 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Log.LogFile.getErrMsg(System.Exception)">
            <summary>
            获取错误详细信息。
            </summary>
            <param name="ex">The ex.</param>
            <returns></returns>
            <remarks>
            2014-01-03 何方 创建
            </remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Log.LogManager">
            <summary>
            日志记录
            </summary>
            <remarks>2013-3-21 杨合余 添加</remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.Log.LogManager.Instance">
            <summary>
            日志记录实例
            </summary>
        </member>
        <member name="T:Pisen.Framework.Utility.MapUtil">
            <summary>
            地图计算
            </summary>
            <remarks>
            2013-09-11 郑荣华 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.MapUtil.Rad(System.Double)">
            <summary>
            计算经纬度
            </summary>
            <param name="d">纬度</param>
            <returns></returns>
            <remarks>2013-09-11 郑荣华 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.MapUtil.GetDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            计算两个坐标间距离
            </summary>
            <param name="lat1">1纬度</param>
            <param name="lng1">1经度</param>
            <param name="lat2">2纬度</param>
            <param name="lng2">2经度</param>
            <returns>坐标间距离（km）</returns>
            <remarks>2013-09-11 郑荣华 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.NetUtil">
            <summary>
            网络工具类
            </summary>
            <remarks>2013-12-1 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.NetUtil.GetHttpRequest(System.String)">
            <summary>
            获取请求地址的返回值
            </summary>
            <param name="httpUrl">请求的HTTP地址</param>
            <returns>服务器返回内容</returns>
            <remarks>2013-12-1 黄波 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.RandomString">
            <summary>
            随机数工具类
            </summary>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.GetNewSeed">
            <summary>
            获取随机基数
            </summary>
            <returns>基数</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.BuildRndCodeAll(System.Int32)">
            <summary>
            生成随机字符
            </summary>
            <param name="strLen">字符长度</param>
            <returns>随机字符</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.GetRndStrOfAll">
            <summary>
            获取随机字符
            </summary>
            <returns>随机字符</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.GetRndStrOfAll(System.Int32)">
            <summary>
            获取随机字符
            </summary>
            <param name="LenOf">字符长度</param>
            <returns>随机字符</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.BuildRndCodeOnly(System.String,System.Int32)">
            <summary>
            生成随机字串
            </summary>
            <param name="StrOf">随机字串来源</param>
            <param name="strLen">随机字串长度</param>
            <returns>随机字串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.GetRndStrOnlyFor">
            <summary>
            获取随机字串
            </summary>
            <returns>随机字串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.GetRndStrOnlyFor(System.Int32)">
            <summary>
            获取随机字串
            </summary>
            <param name="LenOf">随机字串长度</param>
            <returns>随机字串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.GetRndStrOnlyFor(System.Boolean,System.Boolean)">
            <summary>
            获取默认长度的随机字串
            </summary>
            <param name="bUseUpper">是否包含大写字母</param>
            <param name="bUseNumber">是否包含数字</param>
            <returns>默认长度的随机字串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.GetRndStrOnlyFor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            获取指定长度的随机字串
            </summary>
            <param name="LenOf">随机字串长度</param>
            <param name="bUseUpper">是否包含大写字母</param>
            <param name="bUseNumber">是否包含数字</param>
            <returns>指定长度的随机字串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.RandomString.GetRndStrOnlyFor(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            获取指定长度的随机字串
            </summary>
            <param name="LenOf">随机字串长度</param>
            <param name="bCharLow">是否包含小写字母</param>
            <param name="bUseUpper">是否包含大写字母</param>
            <param name="bUseNumber">是否包含数字</param>
            <returns>默认长度的随机字串</returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Reflection.AssemblyUtils">
            <summary>
            Assembly related reflection utils.
            </summary>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.AssemblyUtils.GetInternalFileContent(System.String,System.String)">
            <summary>
            Get the internal template content from the commonlibrary assembly.
            </summary>
            <param name="assemblyFolderPath">"CommonLibrary.Notifications.Templates."</param>
            <param name="fileName">"welcome.html"</param>
            <returns>String with internal template content.</returns>
        </member>
        <member name="T:Pisen.Framework.Utility.Reflection.AttributeHelper">
            <summary>
            Reflection utility class for attributes.
            </summary>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.AttributeHelper.GetAssemblyInfoDescription(System.Type,System.String)">
            <summary>
            获取给定类型的描述信息
            </summary>
            <param name="type">The type who's assembly's description should be obtained.</param>
            <param name="defaultVal">Default value to use if description is not available.</param>
            <returns>String with assembly information description.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.AttributeHelper.GetClassAttributes``1(System.Object)">
            <summary>
            Gets the attributes of the specified type applied to the class.
            </summary>
            <typeparam name="T">Type of attributes to look for.</typeparam>
            <param name="obj">The obj.</param>
            <returns>List with class custom attributes.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.AttributeHelper.GetClassAttributesFromAssembly``1(System.String,System.Action{System.Collections.Generic.KeyValuePair{System.Type,``0}})">
            <summary>
            Loads widgets from the assembly name supplied.
            </summary>
            <typeparam name="T">Type of attributes to look for.</typeparam>
            <param name="assemblyName">The name of the assembly to load widgets from.</param>
            <param name="action">A callback for the datatype and widgetattribute.</param>
            <returns>List with key/value pair with attributes.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.AttributeHelper.GetPropsWithAttributes``1(System.Object)">
            <summary>
            Get a list of property info's that have the supplied attribute applied to it.
            </summary>
            <typeparam name="T">Type of attributes to look for.</typeparam>
            <param name="obj">Object to look into.</param>
            <returns>Pair of key/value items with properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.AttributeHelper.GetPropsOnlyWithAttributes``1(System.Object)">
            <summary>
            Get a list of property info's that have the supplied attribute applied to it.
            </summary>
            <typeparam name="T">Type of attributes to look for.</typeparam>
            <param name="obj">Object to look into.</param>
            <returns>List of properties found.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.AttributeHelper.GetPropsWithAttributesList``1(System.Object)">
            <summary>
            Get a list of property info's that have the supplied attribute applied to it.
            </summary>
            <typeparam name="T">Type of attribute to look for.</typeparam>
            <param name="obj">Object to look into.</param>
            <returns>List with key/value pairs with property info.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.AttributeHelper.GetPropertiesWithAttributesOnTypes``1(System.Collections.Generic.IList{System.Type},System.Action{System.Type,System.Collections.Generic.KeyValuePair{System.Reflection.PropertyInfo,``0}})">
            <summary>
            Gets all the properties associated with the supplied types that have the attribute applied to them.
            </summary>
            <typeparam name="TPropAttrib">The type of the attribute that properties should have</typeparam>
            <param name="types">The list of types to search properties for.</param>
            <param name="action">Callback</param>
            <returns>List with key/value pairs with property info.</returns>
        </member>
        <member name="T:Pisen.Framework.Utility.Reflection.ReflectionTypeChecker">
            <summary>
            Various reflection based utility methods.
            </summary>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionTypeChecker.CanConvertTo``1(System.String)">
            <summary>
            Checks whether or not the supplied text can be converted
            to a specific type.
            </summary>
            <typeparam name="T">Type to convert to.</typeparam>
            <param name="val">The value to test for conversion to the type
            associated with the property</param>
            <returns>True if </returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionTypeChecker.CanConvertTo(System.Type,System.String)">
            <summary>
            Checks whether or not the supplied text can be converted
            to a specific type.
            </summary>
            <param name="type">The type to convert val to</param>
            <param name="val">The value to test for conversion to the type
            associated with the property</param>
            <returns>True if the conversion can be performed.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionTypeChecker.CanConvertToCorrectType(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Check to see if can convert to appropriate type.
            </summary>
            <param name="propInfo">Property to check.</param>
            <param name="val">Instance of object with property.</param>
            <returns>True if the conversion can be performed.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionTypeChecker.CanConvertToCorrectType(System.Reflection.PropertyInfo,System.String)">
            <summary>
            Checks whether or not the supplied string can be converted
            to the type designated by the supplied property.
            </summary>
            <param name="propInfo">The property representing the type to convert 
            val to</param>
            <param name="val">The value to test for conversion to the type
            associated with the property</param>
            <returns>True if the conversion can be performed.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionTypeChecker.ConvertToSameType(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Convert the val from string type to the same time as the property.
            </summary>
            <param name="propInfo">Property representing the type to convert to</param>
            <param name="val">val to convert</param>
            <returns>converted value with the same time as the property</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionTypeChecker.IsSameType(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Determine if the type of the property and the val are the same
            </summary>
            <param name="propInfo">Property whose type is to be compared.</param>
            <param name="val">Object whose type is to be compared.</param>
            <returns>True if the property and the object are of the same type.</returns>
        </member>
        <member name="T:Pisen.Framework.Utility.Reflection.ReflectionUtils">
            <summary>
            Various reflection based utility methods.
            </summary>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.SetProperties``1(``0,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Set object properties on T using the properties collection supplied.
            The properties collection is the collection of "property" to value.
            </summary>
            <typeparam name="T">A class type.</typeparam>
            <param name="obj">Object whose properties will be set.</param>
            <param name="properties">List of key/value pairs with property names and values.</param>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.SetProperty``1(System.Object,System.String,System.Object)">
            <summary>
            Set the object properties using the prop name and value.
            </summary>
            <typeparam name="T">A class type.</typeparam>
            <param name="obj">Object whose property will be set.</param>
            <param name="propName">Property name to set.</param>
            <param name="propVal">Property value to set.</param>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            Set the object properties using the prop name and value.
            </summary>
            <param name="obj">Object whose property will be set.</param>
            <param name="propName">Property name to set.</param>
            <param name="propVal">Property value to set.</param>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.SetProperty(System.Object,System.Reflection.PropertyInfo,System.Object,System.Boolean)">
            <summary>
            Set the object properties using the prop name and value.
            </summary>
            <param name="obj">Object whose property will be set.</param>
            <param name="prop">Property information.</param>
            <param name="propVal">Property value to set.</param>
            <param name="catchException">Try to catch any exception and
            not throw it to the caller.</param>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.SetProperty(System.Object,System.Reflection.PropertyInfo,System.String)">
            <summary>
            Set the property value using the string value.
            </summary>
            <param name="obj">Object whose property will be set.</param>
            <param name="prop">Property information.</param>
            <param name="propVal">Property value to set.</param>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetPropertyValue(System.Object,System.String)">
            <summary>
            Get the property value.
            </summary>
            <param name="obj">Object whose property will be retrieved.</param>
            <param name="propName">Name of property to retrieve.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetPropertyValues(System.Object,System.Collections.Generic.IList{System.String})">
            <summary>
            Get all the property values.
            </summary>
            <param name="obj">Object whose properties will be retrieved.</param>
            <param name="properties">List of properties to retrieve.</param>
            <returns>List with property values.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetProperties(System.Object,System.String)">
            <summary>
            Get all the properties.
            </summary>
            <param name="obj">Object whose properties will be retrieved.</param>
            <param name="propsDelimited">Delimited list with properties to retrieve.</param>
            <returns>List of property values.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetProperties(System.Type,System.String[])">
            <summary>
            Get property information for a type.
            </summary>
            <param name="type">Type whose property names to retrieve.</param>
            <param name="props">Array with property names to look for.</param>
            <returns>List with property information of found properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetProperties(System.Type,System.String[],System.Reflection.BindingFlags)">
            <summary>
            Get all the properties.
            </summary>
            <param name="type">Type whose property names to retrieve.</param>
            <param name="props">Array with property names to look for.</param>
            <param name="flags">Flags to use when searching for properties.</param>
            <returns>List with property information of found properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetPropertyValueSafely(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Gets the property value safely, without throwing an exception.
            If an exception is caught, null is returned.
            </summary>
            <param name="obj">Object to look into.</param>
            <param name="propInfo">Information of property to retrieve.</param>
            <returns>Retrieved property value.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetAllProperties(System.Object,System.Predicate{System.Reflection.PropertyInfo})">
            <summary>
            Gets all the properties of an object.
            </summary>
            <param name="obj">Object to look into.</param>
            <param name="criteria">Matching criteria.</param>
            <returns>List with information of matched properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetProperties(System.Type,System.Predicate{System.Reflection.PropertyInfo})">
            <summary>
            Get the properties of a type.
            </summary>
            <param name="type">Type to look into.</param>
            <param name="criteria">Matching criteria.</param>
            <returns>List of information of matched properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetWritableProperties(System.Object,System.Collections.Specialized.StringDictionary)">
            <summary>
            Gets all the writable properties of an object.
            </summary>
            <param name="obj">Object to look into.</param>
            <param name="propsToExclude">Dictionary with properties to exclude.</param>
            <returns>List with information of matched properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetProperties(System.Collections.Specialized.StringDictionary,System.Type)">
            <summary>
            Gets all the properties of a type.
            </summary>
            <param name="propsToExclude">Dictionary with properties to exclude.</param>
            <param name="typ">Type to look into.</param>
            <returns>List with information of matched properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetPropertiesAsMap(System.Object,System.Predicate{System.Reflection.PropertyInfo})">
            <summary>
            Gets all the properties of the object as dictionary of property names to propertyInfo.
            </summary>
            <param name="obj">Object to look into.</param>
            <param name="criteria">Matching criteria.</param>
            <returns>Dictionary with property name and information of matched properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetPropertiesAsMap(System.Type,System.Reflection.BindingFlags,System.Boolean)">
            <summary>
            Get all the properties.
            </summary>
            <param name="type">Type to look into.</param>
            <param name="flags">Flags to use when looking for properties.</param>
            <param name="isCaseSensitive">True to use the property name in the
            dictionary with its lower-cased value.</param>
            <returns>Dictionary with property name and information of found properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetPropertiesAsMap``1(System.Reflection.BindingFlags,System.Boolean)">
            <summary>
            Get all the properties.
            </summary>
            <typeparam name="T">Type to look into.</typeparam>
            <param name="flags">Flags to use when looking for properties.</param>
            <param name="isCaseSensitive">True to use the property name in the
            dictionary with its lower-cased value.</param>
            <returns>Dictionary with property name and information of found properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetProperty(System.Type,System.String)">
            <summary>
            Get the propertyInfo of the specified property name.
            </summary>
            <param name="type">Type to look into.</param>
            <param name="propertyName">Name of property.</param>
            <returns>Information of property.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.GetWritableProperties(System.Type,System.Predicate{System.Reflection.PropertyInfo})">
            <summary>
            Gets a list of all the writable properties of the class associated with the object.
            </summary>
            <param name="type">Type to look into.</param>
            <param name="criteria">Matching criteria.</param>
            <remarks>This method does not take into account, security, generics, etc.
            It only checks whether or not the property can be written to.</remarks>
            <returns>List with information of matching properties.</returns>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            Invokes the method on the object provided.
            </summary>
            <param name="obj">The object containing the method to invoke</param>
            <param name="methodName">arguments to the method.</param>
            <param name="parameters">Parameters to pass when invoking the method.</param>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.CopyPropertyValue(System.Object,System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Copies the property value from the source to destination.
            </summary>
            <param name="source">Source object.</param>
            <param name="destination">Destination object.</param>
            <param name="prop">Information of property whose value
            is to be copied from the source to the target object.</param>
        </member>
        <member name="M:Pisen.Framework.Utility.Reflection.ReflectionUtils.MapTo(System.Object,System.Object)">
            <summary>
            复制源对象到目标对象
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
            <remarks>2013-9-5 黄志勇 创建</remarks>
        </member>
        <member name="F:Pisen.Framework.Utility.Security.EncryptDESProvider.CONST_ENCRYPT_KEY">
            <summary>
            加密密钥
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Security.EncryptDESProvider.Keys">
            <summary>
            默认密钥向量
            </summary>
        </member>
        <member name="M:Pisen.Framework.Utility.Security.EncryptDESProvider.EncryptDES(System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <returns>加密成功返回加密后的字符串，失败返回源串</returns>
            <remarks>
            2013-04-28 吴文强 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Security.EncryptDESProvider.DecryptDES(System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <returns>解密成功返回解密后的字符串，失败返源串</returns>
            <remarks>
            2013-04-28 吴文强 创建
            </remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Security.MD5Provider">
            <summary>
            使用加密服务提供程序 (CSP) 提供的实现
            </summary>
            <remarks>2013-06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Security.MD5Provider.EncryptWithMd5(System.String)">
            <summary>
            对字符串进行MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>加密后的小写字符串</returns>
            <remarks>2013-06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Security.MD5Provider.EncryptWithMd5AndSalt(System.String)">
            <summary>
            对字符串附加随机字符进行MD5加密
            </summary>
            <param name="str">要加密的字符串</param>
            <returns>加密后的小写字符串</returns>
            <remarks>2013-06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Security.MD5Provider.VerifyCiphetrextWithMd5AndSalt(System.String,System.String)">
            <summary>
            对加密字符串（字符串附加随机字符进行MD5加密后的字符串）进行验证
            </summary>
            <param name="unencrypted">明文</param>
            <param name="encrypted">密文</param>
            <returns>验证结果</returns>
            <remarks>2013-06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Security.MD5Provider.MD5Encrypt(System.String)">
            <summary>  
            给一个字符串进行MD5加密  
            </summary>  
            <param name="strText">待加密字符串</param>  
            <returns>加密后的字符串</returns>
            <remarks>2013-06-08 罗雄伟 重构</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Serialization.JsonUtil">
            <summary>
            Json序列化工具类    
            </summary>
            <remarks>
            2013-02-22 罗雄伟 创建
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.JsonUtil.ToJson(System.Object,System.Int32)">
            <summary>
            对象序列化为Json字符串
            优先尝试使用效率高的DataContractJsonSerializer类转换,
            失败后使用JavaScriptSerializerToJson类转换
            </summary>
            <param name="obj">要序列化的对象</param>
            <param name="recursionDepth">序列化深度，可不传值</param>
            <returns>Json字符串</returns>
            <remarks>
            2013-02-22 罗雄伟 创建
            2013-10-08 黄波 修改  增加DataContractJsonSerializer序列化方式
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.JsonUtil.ToJson2(System.Object,System.Int32)">
            <summary>
            任意类型转换为Json(上面的方法被修改后影响到我编辑器上传文件了，特意再写个方法)
            </summary>
            <param name="obj">任意数据类型</param>
            <param name="recursionDepth">序列化深度</param>
            <returns>json字符串</returns>
            <remarks>2013-10-17 杨晗 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.JsonUtil.ToObject``1(System.String,System.Int32)">
            <summary>
            把Json字符串反序列化为对象
            优先尝试使用效率高的DataContractJsonSerializer类转换,
            失败后使用JavaScriptSerializerToJson类转换
            </summary>        
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">Json字符串</param>
            <param name="recursionDepth">反序列化深度，可不传值</param>
            <returns>反序列化得到的对象</returns>
            <remarks>
            2013-02-22 罗雄伟 创建
            2013-10-08 黄波 修改  增加DataContractJsonSerializer序列化方式
            </remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Serialization.SerializationUtil">
            <summary>
            对象的Xml序列化与反序列化
            </summary>
            <remarks>杨合余 2014-1-21 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.SerializationUtil.XmlSerialize``1(``0)">
            <summary>
            将一个对象序列化成xml字符串
            </summary>
            <typeparam name="T">序列化的类型</typeparam>
            <param name="item">序列化的对象</param>
            <returns>返回序列化后的xml形式字符串</returns>
            <remarks>杨合余 2014-1-21 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.SerializationUtil.XmlSerialize(System.Object)">
            <summary>
            将一个对象序列化成xml字符串
            </summary>
            <param name="item">序列化的对象</param>
            <returns>返回序列化后的xml形式字符串</returns>
            <remarks>杨合余 2014-1-21 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.SerializationUtil.XmlDeserialize``1(System.String)">
            <summary>
            从xml反序列化到适当的类型的对象
            </summary>
            <typeparam name="T">反序列化的类型对象.</typeparam>
            <param name="xmlData">对象的Xml字符串.</param>
            <returns>反序列化后的对象</returns>
            <remarks>杨合余 2014-1-21 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.SerializationUtil.XmlDeserialize``1(System.String,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
            <returns></returns>
            <remarks>杨合余 2014-1-21 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.SerializationUtil.Save(System.Object,System.String)">
            <summary>
            保存序列化对象
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
            <returns></returns>
            <remarks>杨合余 2014-1-21 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Serialization.SerializationUtil.GetStrForXmlDoc(System.String,System.String)">
            <summary>
            返回 XML字符串 节点value
            </summary>
            <param name="xmlDoc">XML格式 数据</param>
            <param name="xmlNode">节点</param>
            <returns>节点value</returns>
            <remarks>杨合余 2014-1-21 添加</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.IRule">
            <summary>
            验证规则
            </summary>
            <remarks>
            2013-3-1 杨文兵 创建
            所有验证规则类以 “Rule_”开头，配合VS的自动提示功能方便书写代码
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.IRule.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.IRule.False(System.Action)">
            <summary>
            当Valid()结果为false时执行
            </summary>
            <param name="action">无返回值的方法</param>
            <returns></returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.IRule.OnFalse">
            <summary>
            Called when [false].
            </summary>
            <param></param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.Validator.Rule.IRule.Message">
            <summary>
            验证失败的提示消息
            </summary>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_CartAction">
            <summary>
            购物车动作检查
            </summary>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_CartAction.#ctor(System.String,System.String)">
            <summary>
            验证购物车动作
            </summary>
            <param name="action">动作代码</param>
            <param name="message">错误消息</param>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_CartAction.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>
            <c>true:有效</c>
            <c>false:无效</c>
            </returns>
            <remarks>2014-1-21 黄波 创建</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Chinese">
            <summary>
            验证中文规则
            </summary>
            <remarks>2013-06-09 黄志勇 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Chinese.#ctor(System.String,System.String)">
            <summary>
            验证规则 中文格式的字符串
            </summary>
            <param name="chinese">中文字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks></remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Chinese.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_DateTime">
            <summary>
            验证字符串是否为日期
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_DateTime.#ctor(System.String,System.String)">
            <summary>
            验证字符串是否为日期
            </summary>
            <param name="datetime">日期字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_DateTime.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Decimal">
            <summary>
            验证字符串是否Decimal类型
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Decimal.#ctor(System.String,System.String)">
            <summary>
            验证字符串是否Decimal类型
            </summary>
            <param name="s">Decimal类型的字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Decimal.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Email">
            <summary>
            验证规则 email格式的字符串
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Email.#ctor(System.String,System.String)">
            <summary>
            验证规则 email格式的字符串
            </summary>
            <param name="email">email字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Email.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns></returns>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Equals`1">
            <summary>
            相等 规则
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Equals`1.#ctor(`0,`0,System.String)">
            <summary>
            相等判断
            </summary>
            <param name="t1">泛型1</param>
            <param name="t2">泛型2</param>
            <param name="message">错误提示</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Equals`1.Valid">
            <summary>
            泛型相等验证
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_EqualsNull`1">
            <summary>
            验证规则 T类型为空
            </summary>
            <typeparam name="T"></typeparam>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_EqualsNull`1.#ctor(`0,System.String)">
            <summary>
            验证规则 T类型允许为空
            </summary>
            <param name="obj">要验证的对象.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_EqualsNull`1.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_EqualsNull">
            <summary>
            验证规则 字符串必需为 null、空或者由空白字符组成
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_EqualsNull.#ctor(System.String,System.String)">
            <summary>
            验证规则 字符串必需为 null、空或者由空白字符组成
            </summary>
            <param name="text">要验证的字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_EqualsNull.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_IDCard">
            <summary>
            验证规则 身份证
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_IDCard.#ctor(System.String,System.String)">
            <summary>
            验证规则 身份证
            </summary>
            <param name="idCard">身份证</param>
            <param name="message">验证失败的提示消息</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_IDCard.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns></returns>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_IPAddress">
            <summary>
            验证规则 IP地址
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_IPAddress.#ctor(System.String,System.String)">
            <summary>
            验证规则 IP地址
            </summary>
            <param name="ip">IP地址.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_IPAddress.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Letter">
            <summary>
            验证字母规则
            </summary>
            <remarks>2013－06-09 黄志勇 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Letter.#ctor(System.String,System.String)">
            <summary>
            验证规则 字母格式的字符串
            </summary>
            <param name="letter">字母字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Letter.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Mobile">
            <summary>
            验证规则 手机号码
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Mobile.#ctor(System.String,System.String)">
            <summary>
            验证规则 手机号码
            </summary>
            <param name="mobile">手机号码.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Mobile.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Not">
            <summary>
            Not 验证规则
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Not.#ctor(Pisen.Framework.Utility.Validator.Rule.IRule,System.String)">
            <summary>
            Not 验证规则
            </summary>
            <param name="rule">验证规则</param>
            <param name="message">验证失败的提示消息</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Not.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_NotAllowNull`1">
            <summary>
            验证规则 T类型不允许为空
            </summary>
            <typeparam name="T">泛型</typeparam>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_NotAllowNull`1.#ctor(`0,System.String)">
            <summary>
            验证规则 T类型不允许为空
            </summary>
            <param name="obj">要验证的对象.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_NotAllowNull`1.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>
            <c>true:有效</c>
            <c>false:无效</c>
            </returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_NotAllowNull">
            <summary>
            验证规则 字符串不允许是 null、空还是仅由空白字符组成
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_NotAllowNull.#ctor(System.String,System.String)">
            <summary>
            验证规则 字符串不允许是 null、空还是仅由空白字符组成
            </summary>
            <param name="text">要验证的字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_NotAllowNull.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Number">
            <summary>
            验证数字
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Number.#ctor(System.String,System.String)">
            <summary>
            验证规则 email格式的字符串
            </summary>
            <param name="number">数字</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Number.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>是否有效</returns>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Or">
            <summary>
            OR 验证规则 
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Or.#ctor(Pisen.Framework.Utility.Validator.Rule.IRule,Pisen.Framework.Utility.Validator.Rule.IRule,System.String)">
            <summary>
            OR 验证规则
            </summary>
            <param name="rule1">验证规则A</param>
            <param name="rule2">验证规则B</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Or.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns></returns>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Post">
            <summary>
            邮政编码
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Post.#ctor(System.String,System.String)">
            <summary>
            验证规则 邮编格式的字符串
            </summary>
            <param name="post">邮编字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Post.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_QQ">
            <summary>
            验证QQ规则
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_QQ.#ctor(System.String,System.String)">
            <summary>
            验证规则 qq格式的字符串
            </summary>
            <param name="qq">qq字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_QQ.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Range`1">
            <summary>
            验证规则 数据范围  <![CDATA[begin <= number <= end]]>
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Range`1.#ctor(`0,`0,`0,System.String)">
            <summary>
            验证规则 数据范围  <![CDATA[min <= number <= max]]>
            </summary>
            <param name="number">数字.</param>
            <param name="min">最小值.</param>
            <param name="max">最大值.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Range`1.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_StringLenth">
            <summary>
            验证规则 字符串长度
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_StringLenth.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            验证规则 字符串长度
            </summary>
            <param name="str">字符串</param>
            <param name="min">最小长度</param>
            <param name="max">最大长度</param>
            <param name="message">验证失败的提示消息</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_StringLenth.Valid">
            <summary>
            验证是否有效
            </summary>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.Rule.Rule_Telephone">
            <summary>
            验证规则 电话号码(包括验证国内区号,国际区号,分机号)
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Telephone.#ctor(System.String,System.String)">
            <summary>
            验证规则 电话号码(包括验证国内区号,国际区号,分机号)
            </summary>
            <param name="tel">电话号码字符串.</param>
            <param name="message">验证失败的提示消息.</param>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.Rule.Rule_Telephone.Valid">
            <summary>
            验证是否有效
            </summary>
            <param></param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.VType">
            <summary>
            验证类型
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="F:Pisen.Framework.Utility.Validator.VType.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Validator.VType.CardNO">
            <summary>
            身份证号码
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Validator.VType.Mobile">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Validator.VType.Telephone">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Validator.VType.QQ">
            <summary>
            QQ号码
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Validator.VType.IP">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Validator.VType.Postcode">
            <summary>
            邮政号码
            </summary>
        </member>
        <member name="F:Pisen.Framework.Utility.Validator.VType.Account">
            <summary>
            帐号
            </summary>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.VHelper">
            <summary>
            验证规则帮助类
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.Do(System.String,Pisen.Framework.Utility.Validator.VType)">
            <summary>
            公共验证方法
            </summary>
            <param name="m">字符串</param>
            <param name="v">验证类型</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.IsEmail(System.String)">
            <summary>
            验证Email的有效性
            </summary>
            <param name="m_email">email</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.IsMobile(System.String)">
            <summary>
            验证手机
            </summary>
            <param name="m_mobile">手机号</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.IsCardNO(System.String)">
            <summary>
            验证身份证
            </summary>
            <param name="cardNo">身份证号</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.IsTelephone(System.String)">
            <summary>
            验证座机
            </summary>
            <param name="m_telephone">座机号</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.IsQQ(System.String)">
            <summary>
            验证QQ
            </summary>
            <param name="m_qq">qq</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.IsIP(System.String)">
            <summary>
            验证IP
            </summary>
            <param name="m_ip">IP</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.IsPostcode(System.String)">
            <summary>
            验证邮编
            </summary>
            <param name="m_postcode">邮编</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.IsAccount(System.String)">
            <summary>
            验证输入的用户账号，是否是以字母开头
            </summary>
            <param name="m_account">用户帐号</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.ValidatorRule(Pisen.Framework.Utility.Validator.Rule.IRule[])">
            <summary>
            使用验证规则进行验证
            </summary>
            <param name="rules">验证规则</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.ValidatorRule(System.Boolean,Pisen.Framework.Utility.Validator.Rule.IRule[])">
            <summary>
            使用验证规则进行验证
            </summary>
            <param name="one">true：遇到false则中断。false:遇到false继续。默认为true</param>
            <param name="rules">验证规则</param>
            <returns>验证结果</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.ValidatorRule(System.Collections.Generic.IList{Pisen.Framework.Utility.Validator.Rule.IRule})">
            <summary>
            使用验证规则进行验证
            </summary>
            <param name="rules">验证规则</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VHelper.ValidatorRule(System.Boolean,System.Collections.Generic.IList{Pisen.Framework.Utility.Validator.Rule.IRule})">
            <summary>
            使用验证规则进行验证
            </summary>
            <param name="one">true：遇到false则中断。false:遇到false继续。默认为true</param>
            <param name="rules">验证规则</param>
            <returns>有效：true 无效：false</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.Validator.VResult">
            <summary>
            验证结果
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.#ctor">
            <summary>
            验证结果
            </summary>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj">对象</param>
            <returns>true:真 false:假</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns>HashCode</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.op_LogicalNot(Pisen.Framework.Utility.Validator.VResult)">
            <summary>
            !
            </summary>
            <param name="result">验证结果</param>
            <returns>true:真 false:假</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.op_True(Pisen.Framework.Utility.Validator.VResult)">
            <summary>
            true
            </summary>
            <param name="result">验证结果</param>
            <returns>true:真 false:假</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.op_False(Pisen.Framework.Utility.Validator.VResult)">
            <summary>
            false
            </summary>
            <param name="result">验证结果</param>
            <returns>true:真 false:假</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.op_Equality(Pisen.Framework.Utility.Validator.VResult,System.Boolean)">
            <summary>
            ==
            </summary>
            <param name="result">验证结果</param>
            <param name="b"></param>
            <returns>true:真 false:假</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.op_Equality(System.Boolean,Pisen.Framework.Utility.Validator.VResult)">
            <summary>
            ==
            </summary>
            <param name="b"></param>
            <param name="result">验证结果</param>
            <returns>true:真 false:假</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.op_Inequality(Pisen.Framework.Utility.Validator.VResult,System.Boolean)">
            <summary>
            !=
            </summary>
            <param name="result">验证结果</param>
            <param name="b"></param>
            <returns>true:真 false:假</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.Validator.VResult.op_Inequality(System.Boolean,Pisen.Framework.Utility.Validator.VResult)">
            <summary>
            !=
            </summary>
            <param name="b"></param>
            <param name="result">!=</param>
            <returns>true:真 false:假</returns>
            <remarks>2013-12-30 黄志勇 注释</remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.Validator.VResult.Message">
            <summary>
            验证错误消息
            </summary>
        </member>
        <member name="P:Pisen.Framework.Utility.Validator.VResult.IsPass">
            <summary>
            验证是否通过
            </summary>
        </member>
        <member name="T:Pisen.Framework.Utility.VerificationCodeUtil">
            <summary>
            生成验证码
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf 2013-06-07 杨晗 修改
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.#ctor">
            <summary>
            生成验证码
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.#ctor(System.String)">
            <summary>
            生成验证码
            </summary>
            <param name="code">验证码字符串</param>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.#ctor(System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="length">验证码长度</param>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="code">验证码字符串</param>
            <param name="fontSize">字体大小</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
            <param name="padding">图片内边距</param>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="length">验证码长度</param>
            <param name="fontSize">字体大小</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
            <param name="padding">图片内边距</param>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="length">验证码长度</param>
            <param name="fontSize">字体大小</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
            <param name="padding">图片内边距</param>
            <param name="channelType">渠道类型</param>
            <remarks>
            2013-06-07 由杨晗移植于hf 2013-06-07 杨晗 修改
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="fontSize">字体大小</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
            <param name="padding">图片内边距</param>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="fontSize">字体大小</param>
            <param name="imageWidth">图片宽度</param>
            <param name="imageHeight">图片高度</param>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.CreateImageCode">
            <summary>
            生成校验码图片
            校验码保存在Session["ImgGen"]中
            </summary>
            <returns>Bitmap</returns>
            <remarks>
            2013-06-07 移植于hf 2013-06-07杨晗 修改
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片（Edit By 51aspx.com）
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高，一般为3</param>
            <param name="dPhase">波形的起始相位，取值区间[0-2*PI)</param>
            <returns>生成的图片</returns>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.CreateVerifyCode(System.Int32)">
            <summary>
            生成随机字符串
            </summary>
            <param name="codeLen">字符长度</param>
            <returns>生成的字符串</returns>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.VerificationCodeUtil.CreateVerifyCode">
            <summary>
            生成4个长度的字符串
            </summary>
            <returns>4个长度的字符串</returns>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.ChannelType">
            <summary>
            使用渠道类型(0前台,1后台) 
            </summary>
            <remarks>
            2013-06-07 杨晗 添加
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.Code">
            <summary>
            验证码字符串
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.Length">
            <summary>
            验证码长度
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.FontSize">
            <summary>
            验证码字体大小
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.Padding">
            <summary>
            边框补
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.Chaos">
            <summary>
            是否燥点
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.ChaosColor">
            <summary>
            燥点颜色
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.BackgroundColor">
            <summary>
            自定义背景色
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.Colors">
            <summary>
            自定义随机颜色数组
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.Fonts">
            <summary>
            自定义自提数组
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="P:Pisen.Framework.Utility.VerificationCodeUtil.CodeSerial">
            <summary>
            自定义随机码字符串序列
            </summary>
            <remarks>
            2013-06-07 由杨晗移植于hf
            </remarks>
        </member>
        <member name="T:Pisen.Framework.Utility.WebUtil">
            <summary>
            Web工具
            </summary>
            <remarks>2013-03-13 杨合余 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.GetMapPath(System.String)">
            <summary>
            获得当前绝对路径
            </summary>
            <param name="path">指定的路径</param>
            <returns>绝对路径</returns>
            <remarks>2013-03-13 杨合余 创建</remarks>
            <remarks>2013-06-08 罗雄伟 重构</remarks>
        </member>
        <member name="F:Pisen.Framework.Utility.WebUtil.checkUrlRegex">
            <summary>
            检查是否为本地地址正则
            </summary>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.IsLocalUrl(System.String)">
            <summary>
            检查地址是否为本地地址（包含相对路径和绝对路径，例如：xxx://开头的都不是本地地址）
            </summary>
            <param name="url"></param>
            <returns>bool</returns>
            <remarks>2013-04-03 杨合余 创建</remarks>
            <remarks>2013-06-08 罗雄伟 重构</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.Number(System.Int32,System.Boolean)">
            <summary>
            生成指定长度随机数字
            </summary>
            <param name="length">生成长度</param>
            <param name="sleep">是否要在生成前将当前线程阻止以避免重复</param>
            <returns>指定长度的随机数</returns>
            <remarks>2013－07-24 苟治国 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.HideMobilePhone(System.String)">
            <summary>
            隐藏手机号中间4位
            </summary>
            <param name="phone">手机号码</param>
            <returns>格式:135****0534</returns>
            <remarks>2013-4-2 杨合余 添加</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.ConvertDateTimeUnix(System.DateTime)">
            <summary>
            将时间转换为Unix格式的刻度
            </summary>
            <param name="time"></param>
            <returns>刻度</returns>
            <remarks>2014-1-21 杨合余 添加注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.GetUrl">
            <summary>
            获取当前页面URL参数
            </summary>
            <returns></returns>
            <remarks>2014-1-21 杨合余 添加注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.GetUserIp">
            <summary>
            获得用户IP
            </summary>
            <remarks>2014-1-21 杨合余 添加注释</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.GetRealIP">
            <summary>
            根据第三方接口返回用户公网IP地址
            </summary>
            <returns>用户公网IP地址</returns>
            <remarks>2013-12-16 黄波 创建</remarks>
        </member>
        <member name="M:Pisen.Framework.Utility.WebUtil.StripHTML(System.String)">
            <summary>     
            去除HTML标记     
            </summary>     
            <param name="strHtml">包括HTML的源码 </param>     
            <returns>已经去除后的文字</returns>  
            <remarks>2013－11-22 杨晗 创建</remarks> 
        </member>
    </members>
</doc>
