@using Hyt.Model
@using Hyt.Model.SystemPredefined
@using Hyt.Model.WorkflowStatus
@{
    ViewBag.Title = "菜单管理";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //var topMenus = ViewBag.topMenus as List<SyMenu>;
    var inNavigator = (int)SystemStatus.是否导航栏显示.是;
    @*@Html.PrivilegeControl(PrivilegeCode.SY1006101, ".SY1006101")
    @Html.PrivilegeControl(PrivilegeCode.SY1006201, ".SY1006201")
    @Html.PrivilegeControl(PrivilegeCode.SY1006701, ".SY1006701")
    @Html.PrivilegeControl(PrivilegeCode.SY1006401, ".SY1006401")*@
}

<link href="@Url.Content("~/Theme/Plugins/ZTree/skin.css")" rel="stylesheet" type="text/css" media="all" />

<style type="text/css">
    .ztree li a.curSelectedNode {
        width: 95%;
        border: solid 1px #ffb951;
        padding-top: 1px;
        padding-bottom: 0;
    }

    #productCatetoryTree a {
        width: 95%;
        *width: 85%;

        border: solid 1px #fff;
        height: 17px;
        line-height: 17px;
    }

        #productCatetoryTree a.curSelectedNode {
            border: solid 1px #ffb951;
        }

    .ztree li a:hover {
        background-color: #FFE6B0;
        border: solid 1px #FFE6B0;
    }



    tr.selected {
        background-color: #FFE6B0;
    }

    .ztree li span.button {
        float: left;
    }
</style>

<script type="text/javascript" src="@Url.Content("~/Theme/Plugins/ZTree/ZTree.yui.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Theme/Plugins/TableBind/TableBind.yui.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Theme/scripts/jquery.validate.min.js")"></script>
<script type="text/javascript" src="/Theme/scripts/Utils.yui.js"></script>



<script type="text/javascript">
		<!--
    var setting = {
        view: {
            addDiyDom: OnAddDiyTreeNodeDom,
            selectedMulti: false
        },
        data: {
            simpleData: {
                enable: true
            }
        },
        callback: {
            onClick: TreeNodeOnClick
        }
    };


    //自定义节点样式
    function OnAddDiyTreeNodeDom(treeId, treeNode) {
        //的到节点文字部分的容器（a标签）
        var aObj = $("#" + treeNode.tId + "_a");

        //判断是否有fl样式（左浮动），因为右边需要排按钮，所以要左样式兼容。
        if (!aObj.children(1).hasClass("fl")) {
            aObj.children(1).addClass("fl");    //添加浮动效果
        }

        //格式化数据成新的node的HTML
        aObj.html(aObj.html() + "<div class='treetool' style='visibility:hidden'><span class='icon icon_eye_close icon_gray' style='display:none'></span><span class='icon icon_pencil icon_gray SY1006201' title='修改'></span><span class='icon icon_ban_circle icon_gray SY1006201' title='禁用'></span><span class='icon icon_remove icon_gray SY1006201' title='删除'></span></div>");

        //为按钮设置事件
        $(".treetool .icon_pencil", aObj).bind("click", editTreeNode);              //点击编辑节点按钮（笔icon）

        //经验图标按钮事件
        $(".treetool .icon_ban_circle", aObj).bind("click", function () {

            var that = this;

            //通过向上追溯的到当前节点的Id用着个ID来取得当前节点的Json数据
            var node = myZTree.getNodeByTId("#" + $(that).parent().parent().parent().attr("id"));

            //判断父级状态，如果是禁用将不执行操作
            if (node.getParentNode() != null) {
                if (treeNode.getParentNode().status == 0) {

                    UI.Alert({
                        content: '不能执行该操作，上级节点为禁用状态！！！',
                        callback: function () {
                        },
                        width: '200px'
                    });

                    return false;
                }
            }

            //获取节点名称拼接提示字符串
            var title = node.name;
            title = ($(that).hasClass("icon_ban_circle") ? "[<span class='red'>禁用</span>]" : "[<span class='green'>启用</span>]") + "“" + title + "”";

            //提示用户
            UI.Confirm({
                content: '您是否要' + title + '?',
                ok: function () {
                    disabledNode(that);
                },
                cancel: function () {
                    return true;
                },
                width: '200px'
            });
            return false;
        });


        //绑定前台展示功能按钮点击事件
        $(".treetool .icon_eye_close", aObj).bind("click", function () {
            var that = this;

            //追溯上级标签（a标签）Id来找到当前节点数据
            var node = myZTree.getNodeByTId("#" + $(that).parent().parent().parent().attr("id"));

            //设置Title
            var title = node.name;
            title = ($(that).hasClass("icon_eye_close") ? "<span class='red'>取消在导航显示</span>" : "<span class='green'>在导航显示</span>") + " “" + title + "” ";

            //提示用户是否执行操作
            UI.Confirm({
                content: '' + title + '?',
                ok: function () {
                    enableFontShow(that);
                },
                cancel: function () {
                    return true;
                },
                width: '200px'
            });

            return false;
        });

        //添加删除事件

        $(".treetool .icon_remove", aObj).bind("click", function () {
            var that = this;

            //追溯上级标签（a标签）Id来找到当前节点数据
            var node = myZTree.getNodeByTId("#" + $(that).parent().parent().parent().attr("id"));

            //设置Title
            var title = node.name;
            if (node.isParent)
                title = "<span>确定要删除“" + title + "”及其子菜单?</span>";
            else
                title = "<span>确定要删除“" + title + "”?</span>";

            //提示用户是否执行操作
            UI.Confirm({
                content: title,
                ok: function () {
                    doDeleteMenu(that);
                },
                cancel: function () {
                    return true;
                },
                width: '200px'
            });

            return false;
        });


        //当前上滑过样式
        //鼠标进入是显示操作按钮
        aObj.mouseenter(function () {
            if ($(this).hasClass("curSelectedNode"))
                return true;
            $(this).children("div").css("visibility", "visible");
            return true;
        });
        //鼠标移除时隐藏操作按钮
        aObj.mouseleave(function () {
            if ($(this).hasClass("curSelectedNode"))
                return true;

            $(this).children("div").css("visibility", "hidden");
            return true;
        });


        var parentNode = treeNode.getParentNode(); //父节点
        //如果文字有ft_lt样式表示父节点是禁用状态
        if (parentNode) {
            if ($("#" + parentNode.tId).children("a").children("span").hasClass("ft_lt"))
                treeNode.status = 0;
            if ($("#" + parentNode.tId).children("a").children("span").hasClass("icon_eye_open")) {
                treeNode.isOnlien = 0;
            }
        }

        //如果当行状态是禁用状态就切换可用样式
        if (treeNode.status == 0) {
            ChanageTreeNodeStatus($(".treetool .icon_ban_circle", aObj), false);  //切换状态
        }

        //如果当前是前台不显示状态就切换为显示状态
        if (treeNode.isOnline == 0) {
            ChanageTreeNodeIsOnline($(".treetool .icon_eye_close", aObj));         //切换前台显示样式
        }
    }


    //是否在导航中显示
    function enableFontShow(obj) {
        //去顶所以的下级节点的span标签
        var enabled = true;
        var treeNode = myZTree.getNodeByTId($(obj).parent().parent().parent().attr("id"));
        var sysNo = treeNode.id;

        //如果样式是“icon_ban_circle”表示是要禁用，否则就是启用
        if ($(obj).hasClass("icon_eye_close")) {
            enabled = false;
            treeNode.isOnline = 0;
        } else {
            enabled = true;
            treeNode.isOnline = 1;
        }

        //是否在导航中显示
        $.ajax({
            url: "@Url.Content("~/Sys/ShowInNavigator/")",
            data: { sysNo: sysNo },
            success: function (data) {
                if (data == true) {
                    UI.tips.tip_alert('tips_shrot tips_success', '操作成功。');
                    ChanageTreeNodeIsOnline(obj, enabled);

                } else {
                    UI.tips.tip_alert('tips_shrot tips_wrong', '操作失败。');
                }
            }
        });

    }

    //删除菜单
    function doDeleteMenu(obj) {
        //去顶所以的下级节点的span标签
        var enabled = true;
        var treeNode = myZTree.getNodeByTId($(obj).parent().parent().parent().attr("id"));
        var sysNo = treeNode.id;

        //删除
        $.ajax({
            url: "@Url.Content("~/Sys/RemoveMenu/")",
            data: { sysNo: sysNo },
            success: function (data) {
                if (data == true) {
                    removeTreeNodeByNode(treeNode);
                    UI.tips.tip_alert('tips_shrot tips_success', '删除成功。');
                    loadMenuSelectTree();
                } else {
                    UI.tips.tip_alert('tips_shrot tips_wrong', '操作失败。');
                }
            }
        });
    }

    //切换节点是否为前台显示
    function ChanageTreeNodeIsOnline(obj) {
        //去顶所以的下级节点的span标签
        var wordSpanOdd = $("a", "#" + $(obj).parent().parent().parent().attr("id")).children("span:odd");
        var wordSpan;

        //如果样式是“icon_eye_close”表示是要禁用，否则就是启用
        if ($(obj).hasClass("icon_eye_close")) {

            //找到眼睛icon按钮
            wordSpan = $("#" + $(obj).parent().parent().parent().attr("id") + " .icon_eye_close");

            //将眼睛icon设成睁开
            wordSpan.removeClass("icon_eye_close");
            wordSpan.addClass("icon_eye_open");

            //在标题后面添加闭眼icon
            wordSpanOdd.append('<span class="icon_eye_close"></span>');

        } else {

            //移除所有的闭眼icon
            wordSpanOdd.children(".icon_eye_close").remove();

            //找到眼睛icon按钮
            wordSpan = $("#" + $(obj).parent().parent().parent().attr("id") + " .icon_eye_open");

            //将眼睛icon设成闭眼
            wordSpan.removeClass("icon_eye_open");
            wordSpan.addClass("icon_eye_close");
        }
    }


    function disabledNode(obj) {

        //去顶所以的下级节点的span标签
        var enabled = true;
        var treeNode = myZTree.getNodeByTId($(obj).parent().parent().parent().attr("id"));
        var sysNo = treeNode.id;

        //如果样式是“icon_ban_circle”表示是要禁用，否则就是启用
        if ($(obj).hasClass("icon_ban_circle")) {
            enabled = false;
            treeNode.status = 0;
        } else {
            enabled = true;
            treeNode.status = 1;
        }

        $.ajax({
            url: "@Url.Content("~/Sys/ChangeMenuStatus/")",
            data: { sysNo: sysNo },
            success: function (data) {
                if (data == true) {
                    UI.tips.tip_alert('tips_shrot tips_success', '操作成功！');
                    ChanageTreeNodeStatus(obj, enabled);
                    var selectNodes = myZTree.getSelectedNodes();
                    if (selectNodes.length > 0) {
                        if (selectNodes[0].id == treeNode.id)
                            EnableEdit(enabled);
                    }
                } else {
                    UI.tips.tip_alert('tips_shrot tips_wrong', '操作失败！');
                }
            }
        });
    }


    function ChanageTreeNodeStatus(obj, enabled) {

        //找到按钮
        var wordSpanOdd = $("a", "#" + $(obj).parent().parent().parent().attr("id")).children("span:odd");
        var wordSpan;
        //如果样式是“icon_ban_circle”表示是要禁用，否则就是启用
        if (!enabled) {

            //禁用时隐藏铅笔样式
            $(".icon_pencil", wordSpanOdd).hide();

            //设置状态icon
            wordSpan = $("#" + $(obj).parent().parent().parent().attr("id") + " .icon_ban_circle");
            wordSpan.removeClass("icon_ban_circle");
            wordSpan.addClass("icon_ok");

            //显示标题后的状态icon
            wordSpanOdd.addClass("ft_lt red status");
            wordSpanOdd.append('<span class="icon_ban_circle"></span>');

        } else {

            //设置状态icon
            wordSpan = $("#" + $(obj).parent().parent().parent().attr("id") + " .icon_ok");
            wordSpan.removeClass("icon_ok");
            wordSpan.addClass("icon_ban_circle");

            //显示编辑按钮
            $(".icon_pencil", wordSpanOdd).show();

            //隐藏标题后的状态
            wordSpanOdd.removeClass("ft_lt red status");
            wordSpanOdd.children(".icon_ban_circle").remove();
        }
    }

    //删除节点
    function removeTreeNode(e) {
        var nodes = myZTree.getSelectedNodes();
        var treeNode = nodes[0];
        if (nodes.length == 0) {
            UI.Alert({
                content: '请先选择一个节点。',
                callback: function () {
                },
                width: '200px'
            });
            return;
        }

        var parentNode = treeNode.getParentNode();
        myZTree.removeNode(treeNode, false);
        if (parentNode && parentNode.children.length == 0)
            $("#" + parentNode.tId + "_ul").remove();
    }

    //扩展删除事件
    function removeTreeNodeByNode(treeNode) {
        if (treeNode.length == 0) {
            UI.Alert({
                content: '请先选择一个节点。',
                callback: function () {
                },
                width: '200px'
            });
            return;
        }
        var parentNode = treeNode.getParentNode();
        myZTree.removeNode(treeNode, false);
        if (parentNode && parentNode.children.length == 0)
            $("#" + parentNode.tId + "_ul").remove();
    }

    //编辑节点
    function editTreeNode() {

        //更具点击按钮找到节点容器（Li标签），然后再获取id来查找Node数据
        var treeNode = myZTree.getNodeByTId($(this).parent().parent().parent().attr("id"));

        if (treeNode == null) {
            UI.Alert({
                content: '请先选择一个节点！！！',
                callback: function () {
                },
                width: '200px'
            });
            return false;
        }

        return true;

    };

    //点击节点事件
    function TreeNodeOnClick(event, treeId, treeNode) {

        //如果节点编号为-1表示是新增的节点。否则执行选择选择节点事件
        if (myZTree.getNodeByParam("id", "-1")) {

            //如果当前点击的节点就是这个新增的节点将不做任何操作，否则提示用户接下来的操作
            if (treeNode.id == -1) {
                return;
            } else {

                //询问用户是否要放弃前面选择的节点
                UI.Confirm({
                    content: '是否要放弃新添加的菜单?',
                    ok: function () {

                        //放弃之前新添加的节点
                        myZTree.selectNode(myZTree.getNodeByParam("id", "-1"), false);
                        removeTreeNode();

                        //清除选择
                        myZTree.selectNode(treeNode, false);
                        UI.tips.tip_alert('tips_shrot tips_success', '数据已清除！');

                        //选择新节点
                        SelectedTreeNode(event, treeId, treeNode);
                    },
                    cancel: function () {
                        myZTree.selectNode(myZTree.getNodeByParam("id", "-1"), false);
                    },
                    width: '200px'
                });
            }

        } else {
            //执行选择节点
            SelectedTreeNode(event, treeId, treeNode);
        }

        //检查当前节点是否是禁用，如果是禁用就不能保存
        if (!checkCurrentTreeNodeIsDisabled()) {
            //alert(treeNode.id)
            loadMenuSelectTree(treeNode.id, treeNode.pId);
            EnableEdit(true);
        } else {
            UI.tips.tip_alert('tips_shrot tips_warning', '当前菜单状态为[禁用],不能修改。');
            EnableEdit(false);
        }
    }

    ;

    //执行选择节点事件
    function SelectedTreeNode(event, treeId, treeNode) {

        //获取当前节点
        var selectNodes = myZTree.getSelectedNodes();

        //如果当前节点不为空这显示后面的编辑按钮
        if (selectNodes != null && selectNodes.length == 1) {
            //判断当前选择的LI标签不为空
            if (myZTree.selectNodeTId != null) {
                //
                $("#" + myZTree.selectNodeTId).children("a").children(".treetool").children("span").addClass("icon_gray");
            }

            $(".treetool").css("visibility", "hidden");
            $("#" + selectNodes[0].tId).children("a").children(".treetool").children(".icon_gray").removeClass("icon_gray");
            $(".treetool:first", $("#" + treeNode.tId)).css("visibility", "visible");

            myZTree.selectNodeTId = selectNodes[0].tId;
        }

        //更具选择的分类节点读取数据库并绑定到右侧数据区域
        if (selectNodes[0].id > 0) {
            markObject = $(".sortmanage_fr");
            $.ajax({
                url: '@Url.Content("~/Sys/GetMenu/")',
                data: { id: selectNodes[0].id },
                success: function (data) {

                    //绑定到表单
                    $(".sortmanage_fr").JsonBind(data);

                    if (data.ParentSysNo != null) {
                        $("#ParentSysNo").val(data.ParentSysNo);
                    }

                    if (data.InNavigator == '@inNavigator') {
                        $("#InNavigator").attr("checked", true);
                    } else {
                        $("#InNavigator").attr("checked", false);
                    }


                    if (data.Status == '@SystemStatus.菜单状态.禁用.GetHashCode()') {
                        $("input[name=Status]:eq(1)").attr("checked", true);
                    } else {
                        $("input[name=Status]:eq(0)").attr("checked", true);
                    }

                    //绑定已使用权限列表
                                        @*                        tableSetting.ajaxOptons = {
                            url: '@Url.Content("~/Sys/GetUsedPrivileges/")',
                            data: { menuSysNo: selectNodes[0].id }
                        };
                        myTableBinder = UI.TableBind(tableSetting);      *@                  

                }
            });

            myTableBinder.Clear();
            $.ajax({
                url: "@Url.Content("~/Sys/GetUsedPrivileges/")",
                data: JSON.stringify({ menuSysNo: selectNodes[0].id }),
                dataType: "json",
                type: "POST",
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (plist) {
                    myTableBinder.InsertRow(plist);
                }
            });


        } else {
            //清除数据
            $(".sortmanage_fr").JsonBind(null);

        }
    }

    var log, className = "dark";

    //添加根节点
    var newCount = 1;

    //添加父级节点
    function AddParentTreeNode(e) {
        //节点的位置是由当前节点的父级节点来决定的，默认添加的节点和当前节点同级
        
        //获取当前选择节点
        var nodes = myZTree.getSelectedNodes();
        if (nodes == "") {
            //UI.Alert({
            //    content: '请先选择菜单。',
            //    callback: function () {
            //    },
            //    width: '200px'
            //});
            return false;
        }
        //获取当前节点部分信息
        isParent = e.data.isParent;
        var treeNode = nodes[0]; 

        var selectedNodeId = treeNode.pId;

        //如果当前节点没有就默认添加的是根节点
        if (treeNode) {
            //添加一个新节点到分类树,位置就在当前节点同级
            treeNode = myZTree.addNodes(myZTree.getNodeByParam("id", treeNode.pId, null), { id: -1, pId: treeNode.pId, isParent: isParent, name: "添加的新同级" });
        } else {
            //添加一个新节点到分类树的根节点
            treeNode = myZTree.addNodes(null, { id: -1, pId: 0, isParent: isParent, name: "添加的新同级" });
        }

        //设置新添加的节点为当前选择节点
        myZTree.selectNode(treeNode[0], false);
        TreeNodeOnClick(null, "", treeNode[0]);
        EnableEdit(true);

        //清空数据
        $(".sortmanage_fr").JsonBind(null);
        myTableBinder.Clear();

        //初始化父级菜单和菜单状态
        $("#ParentSysNo").val(selectedNodeId);
        $("#DisplayOrder").val(0);
        $("input[name=Status]:eq(0)").attr("checked", true);
        $("#InNavigator").attr("checked", false);

    }


    function loadMenuSelectTree(selectedNodeId, pNodeId) {
        
        var selected = "";
        var content = '<option value="0"><根目录></option>';
        $.ajax({
            async: false,
            data: { selectedNodeId: selectedNodeId },
            type: "get",
            url: "/sys/LoadMenuSelectTree",
            success: function(rows) {
                $.each(rows, function (idx, item) {
                    if (item.value == pNodeId) {
                        selected = "selected='true'";
                    } else
                        selected = "";

                    content += "<option value='" + item.value + "' " + selected + ">" + item.text + "</option>";
                });
                $('#ParentSysNo').html(content);
            }
        });
    }


    //添加叶子节点
    function AddLeafTreeNode(e) {

        //当前选择节点
        var nodes = myZTree.getSelectedNodes();
        isParent = e.data.isParent;

        if (nodes == "") {
            //UI.Alert({
            //    content: '请先选择菜单。',
            //    callback: function () {
            //    },
            //    width: '200px'
            //});
            return false;
        }

        //获取当前节点部分信息
        var treeNode = nodes[0];

        if (treeNode.level == 2) {
            UI.tips.tip_alert('tips_shrot tips_warning', '菜单只允许添加3级。');
            return false;
        }


        //如果当前节点没有就默认添加的是根节点
        if (treeNode) {
            //设置新添加节点的父节点为当前节点
            var parentNode = treeNode;

            //添加一个新节点到分类树,位置在当前节点下
            treeNode = myZTree.addNodes(treeNode, { id: -1, pId: treeNode.id, isParent: isParent, name: "添加的新子级" });

            //设置新添加的节点为当前选择节点
            myZTree.selectNode(treeNode[0], false);
            SelectedTreeNode(null, "", treeNode[0]);

            loadMenuSelectTree(null, parentNode.id);

            ////初始化父级菜单和菜单状态
            //$("#ParentSysNo").val(parentNode.id);

        } else {
            UI.Alert({
                content: '请选择您要添加的菜单下面。',
                callback: function () {
                },
                width: '200px'
            });
        }

        EnableEdit(true);

        $(".sortmanage_fr").JsonBind(null);
        myTableBinder.Clear();

        //初始化父级菜单和菜单状态
        $("#DisplayOrder").val(0);
        $("input[name=Status]:eq(0)").attr("checked", true);
        $("#InNavigator").attr("checked", false);

    }

    //节点上移
    function TreeNodeMoveUp() {
        TreeControlButtonEnabled(false);
        var nodes = myZTree.getSelectedNodes();
        var treeNode = nodes[0];
        if (nodes.length == 0) {
            alert("请先选择一个节点");
            return;
        }

        var prevNode = myZTree.getNodesByParam("tId", $("#" + treeNode.tId).prev().attr("id"));
        if (prevNode.length == 0)
            return;


        //如果当前节点和他要对换位置的节点还在同一个父节点则进行位置调换操作
        //否则将视为改变父节操作
        if (prevNode[0].pId == treeNode.pId) {

            var nodeData = { sourceNodeId: prevNode[0].id, targetNodeId: treeNode.id, direction: "up" };

            $.ajax({
                url: "@Url.Content("~/Sys/MoveTreeNode/")",
                data: JSON.stringify(nodeData),
                dataType: "json",
                type: "POST",
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data != null && data.Status) {
                        TableRowMove($("#" + treeNode.tId), true);
                    } else {
                        UI.tips.tip_alert('tips_shrot tips_warning', '操作失败');
                    }
                    TreeControlButtonEnabled(true);
                },
                error: function () {
                    TreeControlButtonEnabled(true);
                }
            });
            }
            return false;
        }


        //节点下移
        function TreeNodeMoveDown(e) {
            var nodes = myZTree.getSelectedNodes();
            var treeNode = nodes[0];
            if (nodes.length == 0) {
                alert("请先选择一个节点");
                return;
            }

            //如果当前节点和他要对换位置的节点还在同一个父节点则进行位置调换操作
            //否则将视为改变父节操作
            var nextNode = myZTree.getNodesByParam("tId", $("#" + treeNode.tId).next().attr("id"));

            if (nextNode.length == 0)
                return;

            if (nextNode[0].pId == treeNode.pId) {

                var nodeData = { sourceNodeId: nextNode[0].id, targetNodeId: treeNode.id, direction: "down" };

                $.ajax({
                    url: "@Url.Content("~/Sys/MoveTreeNode/")",
                data: JSON.stringify(nodeData),
                dataType: "json",
                type: "POST",
                cache: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data != null && data.Status) {
                        TableRowMove($("#" + treeNode.tId), false);
                    } else {
                        UI.tips.tip_alert('tips_shrot tips_warning', '操作失败');
                    }
                    TreeControlButtonEnabled(true);
                },
                error: function () {
                    TreeControlButtonEnabled(true);
                }
            });
        }
        return false;

    }

    //全部展开
    function TreeExpandAll(obj) {
        if (myZTree.ExpandAllStatus == false) {
            $(obj).children("span:last").text("折叠");
            myZTree.ExpandAllStatus = !myZTree.ExpandAllStatus;
            myZTree.expandAll(myZTree.ExpandAllStatus);
        } else {
            $(obj).children("span:last").text("展开");
            myZTree.ExpandAllStatus = !myZTree.ExpandAllStatus;
            myZTree.expandAll(myZTree.ExpandAllStatus);
        }
        return false;
    };

    //重置左右容器高度
    function resizeCalBack() {
        var height = $(document).height() - 64 - $("#treeTitle").height() - $("#treeControlPanel").height();
        $("#treePanel").css("height", height);

        //计算属性组高度
        //$("#attributePanel").css("height", $(document).height()-573);
    }


    //删除选择的行
    function TableRowDeleteSelected(tr) {
        $(tr).each(function (index, element) {
            $(element).remove();
        });
    }

    //移动tr
    function TableRowMove(tr, isUp) {
        if ($(tr).length == 0)
            return false;

        //是否是上移
        if (isUp) {
            //上移操作
            //如果tr以上没有节点将不做任何操作
            if ($(tr).prev().length == 0)
                return false;

            //上移节点
            $(tr).prev().before($(tr));
        } else {
            //下移操作
            //如果tr以下没有节点将不做任何操作
            if ($(tr).next().length == 0)
                return false;

            //下移节点
            $(tr).next().after($(tr));
        }

        return true;
    }


    var myZTree;

    //检查当前节点是否是禁用状态
    function checkCurrentTreeNodeIsDisabled() {
        var node = myZTree.getSelectedNodes();
        if (node.length == 0)
            return false;
        node = node[0];

        //根据当前选择节点是否有 ft_lt样式来标准是否是禁用
        if ($("#" + node.tId + "_span").hasClass("ft_lt"))
            return true;
        return false;
    }

    //启用编辑，将所要button和input设我启用或停用
    function EnableEdit(status) {
        if (status) {
            $("#btn_Panel button").show();
            $("#btn_attr_panel button").show();
            $(".sortmanage_fr input").attr("disabled", null);
            $(".sortmanage_fr select").attr("disabled", null);
            $(".sortmanage_fr button").attr("disabled", null);
        } else {
            $("#btn_Panel button").hide();
            $("#btn_attr_panel button").hide();
            $(".sortmanage_fr input").attr("disabled", "disabled");
            $(".sortmanage_fr select").attr("disabled", "disabled");
            $(".sortmanage_fr button").attr("disabled", "disabled");
        }
    }


    //初始化ZTree
    function InitZTree(selectedNode) {
        markObject = $(".sortmanage_fl");
        $.ajax({
            url: '@Url.Content("~/Sys/GetMenuTree/")',
            data: { all: true },
            success: function (response) {
                if (response != null) {

                    //更具返回结果初始化zTree
                    myZTree = $.fn.zTree.init($("#productCatetoryTree"),
                        setting,
                        response);

                    //默认为收起所以节点
                    myZTree.ExpandAllStatus = false;
                    
                    if (selectedNode != null) {
                        //var node = myZTree.getNodeByParam.getNodeByTId("productCatetoryTree_8");
                        myZTree.selectNode(selectedNode, false);
                        TreeNodeOnClick(null, "", selectedNode);
                    }
                }
            },
            error:
                function (httpRequest, txtStatus, error) {
                    alert(error);
                }
        });
    }

    var markObject;     //AjaxLoader的mark对象

    //设置AjaxLoader
    function InitAjaxLoading() {

        //AjaxLoader 设置遮罩层
        var ajaxLoadingMask;
        $(document).ajaxStart(function () {
            ajaxLoadingMask = UI.Mask({
                obj: $(markObject),
                zindex: 1000
            });
        });

        $(document).ajaxStop(function () {
            if (ajaxLoadingMask != null && $.isFunction(ajaxLoadingMask.Remove)) {
                ajaxLoadingMask.Remove();
            }
        });
    }

    //设置属性组列表TableBinder对象
    var myTableBinder;
    var tableSetting = {
        table:
            "#attributeTalbe",
        key: "SysNo",
        selectedCss: "selected",
        showMask: false
    };

    //自举函数
    $(document).ready(function () {

        //统一实现AjaxLoader
        InitAjaxLoading();


        //设置验证
        $("form").validate({
            onsubmit: false,
            ignore: "",
            rules: {
                MenuName: {
                    required: true,
                    maxlength: 20
                },
                MenuUrl: {
                    required: false,
                    maxlength: 100
                },
                DisplayOrder: {
                    required: true,
                    maxlength: 5,
                    number: true,
                    min: 0
                }
            },
            errorPlacement: function (error, element) {
                jQuery('#' + element.attr("id")).parent().find('span').attr('class', 'error m10_l');
            },
            success: function (span, element) {
                jQuery('#' + element.attr("id")).parent().find('span').attr('class', 'success m10_l');
            }
        });

        //初始化菜单树
        InitZTree(null);

        //页面大小改变是要从新计算布局，应为要在第一屏时左右两边都是自适应高度到最大化
        $(window).resize(resizeCalBack);
        resizeCalBack();


        myTableBinder = UI.TableBind(tableSetting);

        //设置添加同级节点按钮点击事件
        $("#addParent").click(
            function () {
                
                var nodes = myZTree.getSelectedNodes();
                if (nodes == "") {
                    UI.Alert({
                        content: '请先选择菜单。',
                        callback: function () {
                        },
                        width: '200px'
                    });
                    return false;
                }

                if (myZTree.getNodeByParam("id", "-1") != null) {
                    UI.Confirm({
                        content: '是否要放弃新添加的菜单?',
                        ok: function () {
                            removeTreeNode(null);
                            UI.tips.tip_alert('tips_shrot tips_success', '数据已清除。');
                            AddParentTreeNode($("#addParent"));
                        },
                        cancel: function () {
                            myZTree.selectNode(myZTree.getNodeByParam("id", "-1"), false);
                        },
                        width: '200px'
                    });
                } else {
                    AddParentTreeNode($("#addParent"));
                }

                return false;
            }
        );

        //设置添加子级节点按钮点击事件
        $("#addLeaf").bind("click", { isParent: false }, function () {

            if (checkCurrentTreeNodeIsDisabled()) {
                UI.Alert({
                    content: '父级分类当前为禁止状态，不能添加子菜单。'
                });
                return false;
            }
            
            var nodes = myZTree.getSelectedNodes();
            if (nodes == "") {
                UI.Alert({
                    content: '请先选择菜单。',
                    callback: function () {
                    },
                    width: '200px'
                });
                return false;
            }

            if (myZTree.getNodeByParam("id", "-1") != null) {
                UI.Confirm({
                    content: '是否要放弃新添加的菜单?',
                    ok: function () {
                        removeTreeNode(null);
                        UI.tips.tip_alert('tips_shrot tips_success', '数据已清除。');
                        AddLeafTreeNode($("#addLeaf"));
                    },
                    cancel: function () {
                        myZTree.selectNode(myZTree.getNodeByParam("id", "-1"), false);
                    },
                    width: '200px'
                });
            } else {
                AddLeafTreeNode($("#addLeaf"));
            }

        });

        //折叠卡
        $(".according").Accordion();

        //菜单权限按钮点击事件
        $("#btnPrivilegeDel").click(function () {
            //获取属性组中选中的属性组
            var items = myTableBinder.GetSelectItems();

            //如果有选中的将进行删除操作,如果没有表示是当前行被删除
            if (items != null) {
                if ($("#cbCheckAll").attr("checked") && items.length == 1) {
                    items.length--;
                }

                if (items.length > 0)
                    myTableBinder.DelRow(items); //从列表中删除
            }
        });

        $("#btnPrivilegeAdd").click(function () {
            UI.DialogOpen('/Sys/QueryPrivilege/', {
                width: 800,
                height: 500,
                title: '权限选择',
                init: function () {
                    this.button(
                        {
                            name: '关闭',
                            callback: function () {
                            },
                            focus: true
                        }
                    );
                }
            }, false);
        });

        ////权限搜索
        //UI.AutoComplete("privilegeKey", {
        //    postUrl: "/Sys/SearchUnUsedPrivileges?keyword={0}",
        //    height: 200,
        //    width: 284,
        //    top:78,
        //    left:562,
        //    showHeader: true,
        //    columns: [{ header: "编号", width: 100, render: function (data) { return data.sysNo; } }
        //        , { header: "权限", width: 100, render: function (data) { return data.name; } }
        //        , { header: "权限编码", width: 80, render: function (data) { return data.code; } }],
        //    callback: function (data) {
        //        if ($("#privilegeSysNoList option[value='" + data.sysNo + "']").length <= 0) {
        //            var option = "<option value='" + data.sysNo + "'>" + data.name + "(" + data.code + ")</option>";
        //            $("#privilegeSysNoList").append(option);
        //        }
        //        $("#privilegeKey").val("");
        //    }
        //});

        //图片选择
        $("#btnIco").click(function () {
            UI.DialogOpen('/Sys/Icons/', {
                width: 600,
                height: 245,
                title: '菜单图标选择'
            }, false);
        });

        loadMenuSelectTree(null,null);
    });


    //保存分类
    function Save() {
        //判断验证表单，如果不通过就返回
        if (!$("#inputForm").valid()) {
            return false;
        }

        var privileges = [];
        var integer = /^\+?[1-9][0-9]*$/;　　//正整数 

        $("#attributeTalbe .cbPrivilegeItem").each(function (index, domEle) {
            var sysno = $(this).text();
            if (integer.test(sysno)) {
                privileges.push(sysno);
            }
        });

        //用于所以按钮，以防止重复提交
        EnableEdit(false);

        //初始化分类对象
        var model = $(".sortmanage_fr").JsonBind();                 //获取分类JSON模型
        model.ParentSysNo = $("#ParentSysNo").val();                //获取父级节点分类系统编号
        model.InNavigator = 0;
        if ($("#InNavigator").attr("checked"))
            model.InNavigator = '@inNavigator';
    model.Status = $('input:radio[name="Status"]:checked').val();

    if ($("#hddSysNo").val() != null && $("#hddSysNo").val() > 0) {
        EditCategory(model, privileges);               //编辑分类
    } else {
        AddCategory(model, privileges);                //添加分类
    }
}

//保存修改菜单信息
function EditCategory(model, privileges) {

    //Ajax提交修改内容
    $.ajax({
        url: "@Url.Content("~/Sys/SaveMenu/")",
            data: JSON.stringify({ menu: model, privileges: privileges }),
            dataType: "json",
            type: "POST",
            cache: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                //如果成功就Tips提示成功，并更新树
                if (data.Status == true) {

                    //成功提示
                    UI.tips.tip_alert('tips_shrot tips_success', '操作成功。');

                    //更新zTree节点值,如果变更了父级节点将从新生成树
                    var selectNodes = myZTree.getSelectedNodes();           //从树中获取当前现在的分类

                    //如果有选择节点将进行逻辑处理
                    if (selectNodes.length > 0) {
                        ////判断是否修改了父级节点，修改了将更新整棵树，否则只功能性当节点
                        //if (selectNodes[0].pId != model.ParentSysNo) {
                        //    //InitZTree();    //更新树
                        //    selectNodes[0].pId = model.ParentSysNo;
                        //    selectNodes[0].name = model.MenuName;
                        //    myZTree.updateNode(selectNodes[0], false);
                        //} else {
                        //    //只更新当前选择的分类节点
                        //    //设置节点新值
                        //    selectNodes[0].pId = model.ParentSysNo;
                        //    selectNodes[0].name = model.MenuName;
                        //    //调用ZTree更新方法更新节点
                        //    myZTree.updateNode(selectNodes[0], false);
                        //}
                        InitZTree(selectNodes[0]);
                    }
                    loadMenuSelectTree(selectNodes[0].id, selectNodes[0].pId);
                    //$('#ParentSysNo').val(selectNodes[0].pId);
                } else {
                    //失败提示
                    UI.tips.tip_alert('tips_shrot tips_wrong', '操作失败。');
                }

                //恢复按钮状态为可用
                EnableEdit(true);
            },
            error: function () {
                //恢复按钮状态为可用
                EnableEdit(true);
            }
        });
    }


    //添加菜单
    //model:菜单JSON对象
    //privileges:权限对象列表

    function AddCategory(model, privileges) {
        //设置新增菜单系统编号为0(默认值)
        model.SysNo = 0;

        //Ajax提交数据
        $.ajax({
            url: "@Url.Content("~/Sys/SaveMenu/")",
            data: JSON.stringify({ menu: model, privileges: privileges }),
            dataType: "json",
            type: "POST",
            cache: false,
            contentType: 'application/json; charset=utf-8',
            success: function (data) {

                //判断是否成功，成功就更新整棵树
                if (data.Status == true) {

                    //成功提示
                    UI.tips.tip_alert('tips_shrot tips_success', '操作成功。');

                    //更新zTree节点值
                    var selectNodes = myZTree.getSelectedNodes(); //获取当前节点，应为默认情况下新增时，想添加的节点为当前节点

                    var pnodeid = null;
                    //节点正确将更新树
                    if (selectNodes.length > 0) {
                        //设置节点新值
                        selectNodes[0].name = model.MenuName;
                        selectNodes[0].id = data.StatusCode;
                        //调用ZTree更新方法更新节点
                        myZTree.updateNode(selectNodes[0], false);
                        pnodeid = selectNodes[0].pId;
                        
                        //var pnode = selectNodes[0].getParentNode();

                        //InitZTree(pnode);
                    } else {
                        //更新分类树
                        InitZTree(null);
                    }

                    
                    
                    //清空数据
                    $(".sortmanage_fr").JsonBind(null);
                    //$("#ParentSysNo").val(0);
                    loadMenuSelectTree("", pnodeid);

                    //初始化父级菜单和菜单状态
                    $("#DisplayOrder").val(0);
                    $("input[name=Status]:eq(0)").attr("checked", true);
                    $("#InNavigator").attr("checked", false);
                    myTableBinder.Clear();


                } else {
                    UI.tips.tip_alert('tips_shrot tips_wrong', '操作失败。');
                }
                EnableEdit(true);
            },
            error: function () {
                EnableEdit(true);
            }
        });

    }

    //分类树操作按按钮控制
    //enabled: true-启用按钮  false-停用按钮
    function TreeControlButtonEnabled(enabled) {

        //判断是启用还是停用
        if (enabled)
            $("button", "#treeControlPanel").attr("disabled", null);
        else
            $("button", "#treeControlPanel").attr("disabled", enabled);
    }

    //取消编辑内容，将编辑区域回执为空
    function Cancel() {
        //更新zTree节点值
        var selectNodes = myZTree.getSelectedNodes();

        //将编辑区域表单置空
        $(".sortmanage_fr").JsonBind(null);

        //判断当前节点是否为新增，如果id<=0 表示新增节点
        if (selectNodes[0].id <= 0) {
            //清空属性组列表

            //删除新添加的节点
            myZTree.removeNode(selectNodes[0]);
        }

        //经验编辑功能按钮
        EnableEdit(false);
    }

    //-->
</script>




<div class="case commodity_sortmanage">
    <!--sortmanage_fl-->
    <div class="sortmanage_fl">
        <div class="boxs">
            <!--有导航条时-->
            <div id="treeTitle" class="boxs_tit head_m">
                <h3>菜单树</h3>
            </div>
            <div class="comp5" style="padding: 0;">
                <div id="treeControlPanel" class="btntooldiv boxs_tool">
                    <button title="增加同级" class="btn btn_ht26 btn_blue SY1006201" onclick="return false;" id="addParent"><span class="icon icon_plus icon_white"></span><span>增加同级</span></button><button class="btn btn_ht26 btn_blue SY1006201" onclick="return false;" id="addLeaf"><span class="icon icon_plus_sign icon_white"></span><span>增加子级</span></button><button class="btn btn_ht26 btn_green SY1006201" onclick="TreeNodeMoveUp(this)" id="upmove"><span class="icon icon_circle_arrow_up icon_white"></span><span>上移</span></button><button onclick="TreeNodeMoveDown(this)" class="btn btn_ht26 btn_green SY1006201" id="downmove"><span class="icon icon_circle_arrow_down icon_white"></span><span>下移</span></button><button class="btn btn_ht26 btn_orange SY1006101" onclick="TreeExpandAll(this)" id="expandAll"><span class="icon icon_briefcase icon_white"></span><span>展开</span></button>
                </div>

                <div id="treePanel" class="zTreeDemoBackground left p5" style="overflow: auto;">
                    <ul id="productCatetoryTree" class="ztree"></ul>
                </div>
            </div>
        </div>
    </div>

    <!-- test -->
    <!--sortmanage_fr-->
    <div class="sortmanage_fr">







        <form id="inputForm" name="inputForm" onsubmit="return false;">

            <div id="tabboxs" class="boxs">
                <div class="head_tab">
                    <ul class="tabNav2" init="true">
                        <li class="menuon">基本信息</li>
                        <li class="">菜单权限</li>
                    </ul>
                </div>
                <div class="boxs_con_p10">
                    <div class="list2">

                        <div class="boxs_detail_dispay">
                            <div class="tit_con basebox1">
                                <input type="hidden" dn="SysNo" id="hddSysNo" />
                                <table width="100%" cellspacing="0" cellpadding="0" border="0" class="border_lefte1 border_righte1">
                                    <tbody>
                                        <tr>
                                            <td width="20%" class="nameright border_rnone"><span class="v_star">*</span>菜单名称</td>
                                            <td width="80%">
                                                <input type="text" id="MenuName" name="MenuName" dn="MenuName" class="wd270" maxlength="20" /><span class="prompt m10_l">菜单名称</span></td>
                                        </tr>
                                        <tr>
                                            <td class="nameright border_rnone">父级菜单</td>
                                            <td>
                                                <select id="ParentSysNo" name="ParentSysNo">
                                                    @*                                                    <option value="0"><根目录></option>
                                                    @foreach (var m in topMenus)
                                                    {
                                                        <option value="@m.SysNo">@m.MenuName</option>
                                                    }*@
                                                </select>
                                                <span class="prompt m10_l">当前菜单的上一级</span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="nameright border_rnone">菜单地址</td>
                                            <td>
                                                <input type="text" class="wd270" id="MenuUrl" name="MenuUrl" dn="MenuUrl" maxlength="100"><span class="prompt m10_l">点击菜单后转向的URL地址</span></td>
                                        </tr>

                                        <tr style="display: none">
                                            <td width="57" class="nameright border_rnone">菜单图标</td>
                                            <td>
                                                <input type="text" id="MenuImage" name="MenuImage" dn="MenuImage" value="" class="c3 fl" />
                                                <button class="btn btn_ht26 m5_l" type="button" id="btnIco"><span class="icon_upload"></span><span class="m5_l">选择图标</span></button>
                                                <span class="prompt m10_l">菜单图标</span>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="nameright border_rnone"><span class="v_star">*</span>显示顺序</td>
                                            <td>
                                                <input type="text" class="wd50" id="DisplayOrder" name="DisplayOrder" dn="DisplayOrder" maxlength="5" value="0"><span class="prompt m10_l">数值越大，排序越靠后</span></td>
                                        </tr>

                                        <tr>
                                            <td class="nameright border_rnone">导航栏显示</td>
                                            <td>
                                                <input type="checkbox" id="InNavigator" name="InNavigator" value="@inNavigator"><span class="prompt m10_l">勾选后将在导航栏显示</span></td>
                                        </tr>

                                        <tr>
                                            <td class="nameright border_rnone" valign="top">状态</td>
                                            <td>
                                                <input name="Status"  class="m10_r" type="radio" value="@SystemStatus.菜单状态.启用.GetHashCode()" checked="checked" />启用&nbsp;&nbsp;<input name="Status"  class="m10_r m10_l" type="radio" value="@SystemStatus.菜单状态.禁用.GetHashCode()"   />禁用</td>
                                        </tr>
                                    </tbody>
                                </table>

                            </div>
                        </div>





                    </div>
                    <div class="list2">






                        <!--工具条开始-->
                        <div class="boxs_tool boxs_toolbgnone">

                            <!--功能按钮开始-->
                            <div class="left_tool SY1006201">
                                <button class="btn btn_ht26 btn_blue m10_r SY1006201" id="btnPrivilegeAdd"><span class="icon icon_plus icon_white"></span><span class="m5_l">添加</span></button>
                                <button class="btn btn_ht26 btn_red m10_r SY1006401" id="btnPrivilegeDel"><span class="icon_trash icon_white"></span><span class="m5_l">删除</span></button>
                            </div>
                            <!--功能按钮结束-->

                        </div>
                        <!--工具条结束-->

                        <div id="attributePanel" class="boxs_listtabel boxs_con_c1 border_tnone" style="overflow: auto;">
                            <table id="attributeTalbe" width="100%" border="0" cellspacing="0" cellpadding="0" class="border_bnone border_rnone">
                                <thead>
                                    <tr>
                                        <th class="border_lnone border_rnone p10_lr" width="20">
                                            <input id="cbCheckAll" class="checkall" type="checkbox" value="">
                                        </th>
                                        <th width="80" class="p10_lr" style="display:none">权限编号</th>
                                        <th class="p10_lr">权限名称</th>
                                        <th width="90" class="p10_lr">权限代码</th>
                                        <th>备注</th>
                                    </tr>
                                    <tr template="true" class="ht32 p10_lr" style="display: none;">
                                        <td class="border_lnone align_c p10_lr">
                                            <input name="pcheck" type="checkbox" value="">
                                        </td>
                                        <td class="align_c p10_lr cbPrivilegeItem" style="display:none">{SysNo}</td>
                                        <td class="align_l p10_lr">{Name}</td>
                                        <td class="align_l p10_lr">{Code}</td>
                                        <td class="align_l p10_lr">{Description}</td>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>



                    </div>

                    <div class="align_c m10_t">
                        <button class="btn btn_ht30 btn_blue SY1006201" id="btn_Save" onclick="Save()"><span class="icon_save icon_white"></span><span class="m5_l">保存</span></button></div>
                </div>
            </div>

        </form>

    </div>
    <!-- test end -->
</div>




<script type="text/javascript">
    UI.Tab({ tabNavBox: '#tabboxs', tabNavObj: '.tabNav2', tabContentObj: ".boxs_con_p10", tabContent: ".list2" });
    function valTo(strUrl) {
        $("#MenuImage").val(strUrl);
    }
</script>
