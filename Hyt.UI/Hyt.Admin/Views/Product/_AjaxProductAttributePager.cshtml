@using Hyt.Infrastructure.Pager
@using Hyt.Model
@using Hyt.Util
@model PagedList<PdAttribute>

@Html.PrivilegeControl(Hyt.Model.SystemPredefined.PrivilegeCode.PD1002601,".PD1002601")
<table width="100%" border="0" cellspacing="0" cellpadding="0" class="border_bnone border_rnone">
    <thead>
        <tr>
            <th width="0%" style="display: none">
                <input name="sysNo"  type="checkbox" /></th>
            <th width="" class="align_l p10_lr">属性名称</th>
            <th width="" class="align_l p10_lr">后台显示名称</th>
            <th width="72">关联属性</th>
            <th width="72">搜索条件</th>
            <th width="72">属性类型</th>
            <th width="60">状态</th>  
             <th width="120">最后更新时间</th>
            <th width="148">操作</th>
        </tr>
    </thead>
    <tbody>
        @{
             if(Model.TData.Count == 0)
            {
               <tr class="odd_color trhover">
                <td colspan="9" class="align_l p10_l bgr_eb">暂无数据</td>
              </tr>
                return;
            }
             int i = 0;
             foreach (var item in Model.TData)
             {
                 if (i % 2 == 0)
                 {
            @Html.Raw("<tr>")
                 }
                 else
                 {
            @Html.Raw("<tr class='stag_color'>")
                 }
                 i++;
            <td style="display: none">
                <input name="sysNo" type="checkbox" value="@item.SysNo" /></td>
            <td class="align_l p10_lr">@item.AttributeName</td>
            <td class="align_l p10_lr">@item.BackEndName</td>
             <td>@Hyt.Util.EnumUtil.GetDescription(typeof(Hyt.Model.WorkflowStatus.ProductStatus.商品属性关联状态), item.IsRelationFlag)</td>
            <td>@Hyt.Util.EnumUtil.GetDescription(typeof(Hyt.Model.WorkflowStatus.ProductStatus.是否作为搜索条件), item.IsSearchKey)</td>
            <td>@Hyt.Util.EnumUtil.GetDescription(typeof(Hyt.Model.WorkflowStatus.ProductStatus.商品属性类型), item.AttributeType)</td>
            <td>@Hyt.Util.EnumUtil.GetDescription(typeof(Hyt.Model.WorkflowStatus.ProductStatus.商品属性状态), item.Status)</td>
             <td>@item.LastUpdateDate.ToString("yyyy-MM-dd HH:mm")</td>
            <td>
                
                @if (item.Status == (int)Hyt.Model.WorkflowStatus.ProductStatus.商品属性状态.启用)
                {<button class="btn btn_ht26 forbid m10_r PD1002601"><span class="icon  icon_lock"></span><span class="m5_l">禁用</span></button><button class="btn btn_ht26 PD1002201 disabled"><span class="icon icon_pencil"></span><span class="m5_l">修改</span></button>}
                else
                {<button class="btn btn_blue btn_ht26 agree m10_r PD1002601"><span class="icon icon_white icon_unlock"></span><span class="m5_l">启用</span></button><button class="btn btn_ht26 btn_blue PD1002201 showDetail"><span class="icon icon_white icon_pencil"></span><span class="m5_l">修改</span></button>}
            </td>
            @Html.Raw("</tr>")
             }
        }
    </tbody>
</table>
@{Html.RenderPartial("_UrlPaging", Model); }

<script type="text/javascript">
    try { curpage = "@Model.CurrentPageIndex"; } catch (e) { }
    function changeStatus(obj, status) {
        var no = $(obj).closest("tr").find("input:checkbox").val();
        var jsonData = { status: status, sysno: no };
        $.ajax({
            url: "/Product/UpdateProductAttributeStatus",
            type: "post",
            dataType: 'json',
            data: jsonData,
            success: function (result) {
                if (result.Status) {
                    UI.Prompt.Success('操作成功');
                    doSearch(@Model.CurrentPageIndex);
                } else {
                    var message = "操作失败";
                    if (!!result && !!result.message) {
                        message = result.message;
                    }
                    UI.Alert({ content: message });
                }
            }
        });
    }

    $(".forbid, .agree").click(function () {
        var status = $(this).hasClass("forbid") ? 0 : 1;
        var obj = this;
        if (status == 0) {
            UI.Confirm({
                content: '确定要禁用吗?',
                ok: function () {
                    changeStatus(obj, status);
                },
                cancelVal: '取消',
                cancel: true
            });
        } else {
            UI.Confirm({
                content: '确定要启用吗?',
                ok: function () {
                    changeStatus(obj, status);
                },
                cancelVal: '取消',
                cancel: true
            });
        }

    });
</script>
