@model Hyt.Model.CrShoppingCart
@using Hyt.Model
@using Hyt.Model.WorkflowStatus;
@using Hyt.Model.SystemPredefined;
@using Hyt.Util.Extension
@{
    Layout = "";
    var couponList = (IList<SpCoupon>)ViewBag.CouponList; //可使用的优惠券列表
}
@functions{
    /// <summary>
    /// 显示商品名称或者后台显示名称
    /// </summary>
    /// <param name="productName"></param>
    /// <param name="productSysNo"></param>
    /// <returns></returns>
    System.Web.IHtmlString GetName(string productName,int productSysNo)
    {
        return Html.Raw(Hyt.BLL.Product.PdProductBo.Instance.GetProductEasName(productSysNo).HtmlEncode());
    }
}
        
            <!--/表格列表区-->
            <table width="100%" border="0" cellspacing="0" cellpadding="0" class="border_bnone border_rnone" id="item_list">
                <thead>
                    <tr>
                        <th width="100">商品编号</th>
                        <th>后台显示名称</th>
                        <th width="120">数量</th>
                         <th width="90">原单价</th>
                        <th width="80">购买总价</th>
                        <th width="80">实际库存</th>@*新增实际库存 2017-07-14*@
                        @*<th width="80">优惠</th>*@
                        <th width="80">商品单价</th>
                        <th width="50">操作</th>
                        <th style="display: none">商品号</th>
                    </tr>
                </thead>
                <tbody id="product_list">
                    @if(Model.ShoppingCartGroups!=null)
                    {
                        foreach (var item in Model.ShoppingCartGroups)
                        {
                            if (item.GroupPromotions != null)
                            {
                                foreach (var groupItem in item.GroupPromotions)
                                {
                                    if (groupItem.RuleType == (int)PromotionStatus.促销规则类型.组合)
                                    { 
                                        <tr style="background-color:#efefef">
                                            <td>@groupItem.Description</td>
                                            <td></td>                                        
                                            <td>
                                                <input type="text" class="number_input"  groupcode="@item.GroupCode" promotionsysno="@groupItem.PromotionSysNo" value="@item.ShoppingCartItems[0].Quantity" onchange="quantityChange(this);" maxlength="10"/>
                                            </td>
                                            <td colspan="3"> 折扣金额：￥@item.DiscountAmount.ToString(Constant.DecimalFormat)</td>
                                            <td>
    <button class="btn btn_ht26" groupcode="@item.GroupCode" promotionsysno="@groupItem.PromotionSysNo" onclick="delCart(this)" type="button"><span class="icon_trash"></span></button>
                                            </td>
                                        </tr>
                                    }
                                    else if (groupItem.RuleType == (int)PromotionStatus.促销规则类型.团购)
                                    { 
                                        @**HTML结构与组合一样**@
                                        <tr style="background-color:#FDF7E5">
                                            <td>@groupItem.Description</td>
                                            <td></td>                                        
                                            <td>
                                                <input type="text" class="number_input" groupcode="@item.GroupCode" promotionsysno="@groupItem.PromotionSysNo" value="@item.ShoppingCartItems[0].Quantity" onchange="quantityChange(this);" maxlength="10"/>
                                            </td>
                                            <td colspan="3"> 折扣金额：￥@item.DiscountAmount.ToString(Constant.DecimalFormat)</td>
                                            <td>
    <button class="btn btn_ht26" groupcode="@item.GroupCode" promotionsysno="@groupItem.PromotionSysNo" onclick="delCart(this)" type="button"><span class="icon_trash"></span></button>
                                            </td>
                                        </tr>
                                    }
                                    else{
                                        <tr style="background-color:#e5f4e5">
                                            <td colspan="7">
    <div class="tagfull fl m10_r m2_t" style="cursor:text">
              <!--提示框-->
              <div class="tooltip" style="display: none;">
                <div class="tooltip-inner"></div>
                <div class="tooltip-arrow"></div>
              </div>
              <div class="tagfull-inner" datatitle="">@Hyt.Util.EnumUtil.GetDescription(typeof(PromotionStatus.促销规则类型), groupItem.RuleType)</div>
              <div class="tagfull-arrow "></div>
    </div>
    <span class="fl">@groupItem.Description</span>

                                      @if (groupItem.RuleType == (int)PromotionStatus.促销规则类型.满减 && item.DiscountAmount != 0)
                                      {
                                            <div class="tagfull-inner fl">已减@(item.DiscountAmount.ToString(Constant.DecimalFormat))元</div>
                                      }
                                      @if((groupItem.RuleType == (int)PromotionStatus.促销规则类型.满赠 && groupItem.GiftProducts != null && groupItem.GiftProducts.Count > 0))
                                      {
                                          <span class="fr m10_r">赠品：
                                              @if (groupItem.UsedGiftProducts != null && groupItem.UsedGiftProducts.Count > 0)
                                              {
                                                  foreach (var giftItem in groupItem.UsedGiftProducts)
                                                  {
                                                    <span promotionsysno="@(giftItem.PromotionSysNo)" productsysno="@(giftItem.ProductSysNo)">@GetName(giftItem.ProductName,giftItem.ProductSysNo)，</span>
                                                  }
                                              }
                                          
                                              <button onclick="choiceGift(this)" class="btn btn_ht26 btn_blue m5_l" json="@(Hyt.Util.Serialization.JsonUtil.ToJson(groupItem.GiftProducts).Replace("\"","{YH}"))">选择赠品</button>
                                          </span>
                                          @**以上代码包括3个自定义属性  
                                                productsysno:已选择的商品系统编号
                                                promotionsysno :促销系统编号
                                                json:赠品的json数据(需要测试【'"】是否会破坏html) 选择赠品按钮根据此数据来生成选择赠品html代码
                                          **@
                                      }


                                            </td>
                                        </tr>
                                    }
                                }
                            }
                            foreach (var productItem in item.ShoppingCartItems)
                            {
                                <tr json="@(Hyt.Util.Serialization.JsonUtil.ToJson(productItem))">
                                    <td>  <!--商品编号-->
                                         @Hyt.BLL.Product.PdProductBo.Instance.GetProductErpCode(productItem.ProductSysNo)</td>
                                    <td class="align_l p10_l">@GetName(productItem.ProductName,productItem.ProductSysNo)</td>
                                    <td>
                                    @if (productItem.IsLock == (int)CustomerStatus.购物车是否锁定.否)
{
    <input type="text" class="number_input" name="quantity" sysno="@productItem.SysNo" value="@productItem.Quantity" onchange="quantityChange(this);" maxlength="5" />
}
else
{
                                        @productItem.Quantity
                                    }
                                    </td>
                                     <td>
                                          @MvcHtmlString.Create(Hyt.Util.FormatUtil.FormatCurrency((productItem.OriginPrice),2))
                                    </td>
                                    <td>
                                          @MvcHtmlString.Create(Hyt.Util.FormatUtil.FormatCurrency((productItem.SalesUnitPrice * productItem.Quantity - productItem.DiscountAmount),2))
                                    </td>
                                    @*新增实际库存 2017-07-14*@
                                    <td>
                                        @{
                                             var warehouseSysNo = ViewBag.WarehouseSysNo;
                                             var StockQuery = Hyt.BLL.Warehouse.WhWarehouseBo.Instance.GetStockQuantity(productItem.ProductSysNo, warehouseSysNo);  
                                        }
                                        @StockQuery
                                    </td>
                                    @*<td>
                                        <input type="text" value="0" name="ChangePrice" sysno="@productItem.SysNo"  onchange="changeprice(this);" style="width:60px" maxlength="5"/>
                                    </td>*@
                                    <td>
                                        <input type="hidden" value="0" name="ChangePrice" sysno="@productItem.SysNo"  />
                                        <input type="text" value="0" name="DanPrice" price="@productItem.OriginPrice" sysno="@productItem.SysNo" onchange="changedanprice(this);" style="width:60px" maxlength="5" />
                                    </td>
                                
                                  <td>
                                    @if (productItem.IsLock == (int)CustomerStatus.购物车是否锁定.否)
                                    {
                                        <button class="btn btn_ht26" sysno="@productItem.SysNo" onclick="delCart(this)" type="button"><span class="icon_trash"></span></button>
                                    }
                                    </td>
                                </tr>
                            }
                        }
                    }
                    @**订单优惠**@
                    @if (Model.GroupPromotions != null && Model.GroupPromotions.Count > 0)
                    {
                        foreach (var item in Model.GroupPromotions)
                        {
    <tr style="background-color:#e5f4e5">
                                            <td colspan="7">
    <div class="tagfull fl m10_r m2_t" style="cursor:text">
              <!--提示框-->
              <div class="tooltip" style="display: none;">
                <div class="tooltip-inner"></div>
                <div class="tooltip-arrow"></div>
              </div>
              <div class="tagfull-inner" datatitle="">@Hyt.Util.EnumUtil.GetDescription(typeof(PromotionStatus.促销规则类型), item.RuleType)</div>
              <div class="tagfull-arrow "></div>
    </div>
    <span class="fl">@item.Description</span>

                                      @if ((item.RuleType == (int)PromotionStatus.促销规则类型.满赠 && item.GiftProducts != null && item.GiftProducts.Count > 0))
                                      {
                                          <span class="fr m10_r">赠品：
                                              @if (item.UsedGiftProducts != null && item.UsedGiftProducts.Count > 0)
                                              {
                                                  foreach (var giftItem in item.UsedGiftProducts)
                                                  {
                                                    <span promotionsysno="@(giftItem.PromotionSysNo)" productsysno="@(giftItem.ProductSysNo)">@GetName(giftItem.ProductName,giftItem.ProductSysNo)，</span>
                                                  }
                                              }
                                              <button onclick="choiceGift(this)" class="btn btn_ht26 btn_blue m5_l" json="@(Hyt.Util.Serialization.JsonUtil.ToJson(item.GiftProducts).Replace("\"","{YH}"))">选择赠品</button>
                                          </span>
                                          @**以上代码包括3个自定义属性   这是针对订单的满赠促销规则
                                                productsysno:已选择的商品系统编号
                                                promotionsysno :促销系统编号
                                                json:赠品的json数据(需要测试【'"】是否会破坏html) 选择赠品按钮根据此数据来生成选择赠品html代码 {YH}
                                          **@
                                      }
                                            </td>
                                        </tr>
                        }
                    }
                    

                </tbody>
            </table>

<div class="accounts">
    		@*<p class="bold">商品销售合计金额（¥@Model.ProductAmount.ToString(Constant.DecimalFormat)） + 运费（¥@Model.FreightAmount.ToString(Constant.DecimalFormat)） - 商品优惠金额（¥@Model.ProductDiscountAmount.ToString(Constant.DecimalFormat)） - 运费优惠金额（¥@Model.FreightDiscountAmount.ToString(Constant.DecimalFormat)） - 订单优惠金额（¥@((Model.SettlementDiscountAmount+Model.CouponAmount).ToString(Constant.DecimalFormat))）+商品调价金额合计(<span id="spanProductChangeAmountTotal">¥0.00</span>)</p>
    		<p>获赠积分：<span id="spanScore">@(Convert.ToInt32(Math.Floor(Model.SettlementAmount))) </span>  商品总价（免运费）：<span class="red f16 bold" id="requiredAmount">¥@(Model.SettlementAmount.ToString(Constant.DecimalFormat))</span>&nbsp;&nbsp;</p>*@

    <p class="bold">商品销售合计金额（<span id="allAmout">¥@Model.ProductAmount.ToString(Constant.DecimalFormat)</span>） + 运费（¥@Model.FreightAmount.ToString(Constant.DecimalFormat)） - 商品优惠金额（¥@Model.ProductDiscountAmount.ToString(Constant.DecimalFormat)） - 运费优惠金额（¥@Model.FreightDiscountAmount.ToString(Constant.DecimalFormat)） - 订单优惠金额（¥@((Model.SettlementDiscountAmount + Model.CouponAmount).ToString(Constant.DecimalFormat))）+商品调价金额合计(<span id="spanProductChangeAmountTotal">¥0.00</span>)</p>
    <p>获赠积分：<span id="spanScore">@(Convert.ToInt32(Math.Floor(Model.SettlementAmount))) </span>  商品总价（免运费）：<span class="red f16 bold" id="requiredAmount">¥@(Model.SettlementAmount.ToString(Constant.DecimalFormat))</span>&nbsp;&nbsp;</p>
</div>
<div style="display:none" id="divPrice"
     orderamount="¥@(Model.ProductAmount.ToString(Constant.DecimalFormat))"
     score="@(Convert.ToInt32(Math.Floor(Model.SettlementAmount)))"
     freightamount="¥@Model.FreightAmount.ToString(Constant.DecimalFormat)"
     couponamount="¥@((Model.ProductDiscountAmount + Model.FreightDiscountAmount + Model.SettlementDiscountAmount + Model.CouponAmount))"
     total="¥@(Model.SettlementAmount.ToString(Constant.DecimalFormat))"
     settlementamount="@Model.SettlementAmount">
</div>
<select id="ddlValidCoupon" style="display:none;">
     <option value="">请选择</option>
    @if(couponList!=null)
    {
        foreach (var coupon in couponList) { 
          <option value="@coupon.CouponCode"  >@(coupon.Description+"("+coupon.CouponCode+")")</option>
        }
    }
</select>
